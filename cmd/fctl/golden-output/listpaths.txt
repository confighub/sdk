{
  "annotation-value": {
    "*": {
      "metadata.annotations.@%s:annotation-key": {
        "Path": "metadata.annotations.@%s:annotation-key",
        "AttributeName": "annotation-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-annotation",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-annotation",
              "Arguments": null
            }
          ]
        }
      }
    }
  },
  "attribute-value": {
    "*": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.namespace": {
        "Path": "metadata.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        },
        "TypeExceptions": {
          "admissionregistration.k8s.io/v1/MutatingWebhookConfiguration": {},
          "admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration": {},
          "apiextensions.k8s.io/v1/CustomResourceDefinition": {},
          "apiregistration.k8s.io/v1/APIService": {},
          "cert-manager.io/v1/ClusterIssuer": {},
          "external-secrets.io/v1/ClusterExternalSecret": {},
          "external-secrets.io/v1/ClusterPushSecret": {},
          "external-secrets.io/v1/ClusterSecretStore": {},
          "external-secrets.io/v1alpha1/ClusterExternalSecret": {},
          "external-secrets.io/v1alpha1/ClusterPushSecret": {},
          "external-secrets.io/v1alpha1/ClusterSecretStore": {},
          "external-secrets.io/v1beta1/ClusterExternalSecret": {},
          "external-secrets.io/v1beta1/ClusterPushSecret": {},
          "external-secrets.io/v1beta1/ClusterSecretStore": {},
          "gateway.networking.k8s.io/v1/GatewayClass": {},
          "gateway.networking.k8s.io/v1alpha1/GatewayClass": {},
          "gateway.networking.k8s.io/v1beta1/GatewayClass": {},
          "generators.external-secrets.io/v1/ClusterGenerator": {},
          "generators.external-secrets.io/v1alpha1/ClusterGenerator": {},
          "generators.external-secrets.io/v1beta1/ClusterGenerator": {},
          "hub.traefik.io/v1/AccessControlPolicy": {},
          "hub.traefik.io/v1alpha1/AccessControlPolicy": {},
          "hub.traefik.io/v1beta1/AccessControlPolicy": {},
          "networking.k8s.io/v1/IngressClass": {},
          "rbac.authorization.k8s.io/v1/ClusterRole": {},
          "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {},
          "storage.k8s.io/v1/CSIDriver": {},
          "storage.k8s.io/v1/StorageClass": {},
          "v1/Namespace": {}
        }
      }
    },
    "apiextensions.k8s.io/v1/CustomResourceDefinition": {
      "spec.conversion.webhook.clientConfig.service.namespace": {
        "Path": "spec.conversion.webhook.clientConfig.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "apiregistration.k8s.io/v1/APIService": {
      "spec.service.namespace": {
        "Path": "spec.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/DaemonSet": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app.kubernetes.io/name": {
        "Path": "metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app.kubernetes.io/name": {
        "Path": "spec.selector.matchLabels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app.kubernetes.io/name": {
        "Path": "spec.template.metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "apps/v1/Deployment": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app.kubernetes.io/name": {
        "Path": "metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app.kubernetes.io/name": {
        "Path": "spec.selector.matchLabels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app.kubernetes.io/name": {
        "Path": "spec.template.metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app.kubernetes.io/name": {
        "Path": "metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "Replicas is the number of desired pods. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset"
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app.kubernetes.io/name": {
        "Path": "spec.selector.matchLabels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app.kubernetes.io/name": {
        "Path": "spec.template.metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "apps/v1/StatefulSet": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app.kubernetes.io/name": {
        "Path": "metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app.kubernetes.io/name": {
        "Path": "spec.selector.matchLabels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app.kubernetes.io/name": {
        "Path": "spec.template.metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.image": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.containers.*.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.containers.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.image": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "helm.toolkit.fluxcd.io/v2/HelmRelease": {
      "spec.chartRef.namespace": {
        "Path": "spec.chartRef.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "kustomize.toolkit.fluxcd.io/v1/Kustomization": {
      "spec.targetNamespace": {
        "Path": "spec.targetNamespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "networking.k8s.io/v1/Ingress": {
      "spec.rules.*.host": {
        "Path": "spec.rules.*.host",
        "AttributeName": "hostname",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname",
              "Arguments": null
            }
          ]
        }
      },
      "spec.rules.*.host#domain": {
        "Path": "spec.rules.*.host#domain",
        "AttributeName": "domain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-domain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-domain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      },
      "spec.rules.*.host#subdomain": {
        "Path": "spec.rules.*.host#subdomain",
        "AttributeName": "subdomain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-subdomain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-subdomain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app.kubernetes.io/name": {
        "Path": "metadata.labels.app.kubernetes.io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.containers.*.image": {
        "Path": "spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.containers.*.image#reference": {
        "Path": "spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.containers.*.image#uri": {
        "Path": "spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.containers.*.name": {
        "Path": "spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.ephemeralContainers.*.image": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.*.name": {
        "Path": "spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.initContainers.*.image": {
        "Path": "spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.initContainers.*.image#reference": {
        "Path": "spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.initContainers.*.image#uri": {
        "Path": "spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.initContainers.*.name": {
        "Path": "spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "v1/Service": {
      "metadata.annotations.external-dns.alpha.kubernetes.io/hostname": {
        "Path": "metadata.annotations.external-dns.alpha.kubernetes.io/hostname",
        "AttributeName": "hostname",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname",
              "Arguments": null
            }
          ]
        }
      },
      "metadata.annotations.external-dns.alpha.kubernetes.io/hostname#domain": {
        "Path": "metadata.annotations.external-dns.alpha.kubernetes.io/hostname#domain",
        "AttributeName": "domain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-domain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-domain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      },
      "metadata.annotations.external-dns.alpha.kubernetes.io/hostname#subdomain": {
        "Path": "metadata.annotations.external-dns.alpha.kubernetes.io/hostname#subdomain",
        "AttributeName": "subdomain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-subdomain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-subdomain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      },
      "spec.type": {
        "Path": "spec.type",
        "AttributeName": "service-type",
        "DataType": "string"
      }
    }
  },
  "container-image": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.image": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.containers.?name:container-name=%s.image": {
        "Path": "spec.containers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.ephemeralContainers.?name:container-name=%s.image": {
        "Path": "spec.ephemeralContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      },
      "spec.initContainers.?name:container-name=%s.image": {
        "Path": "spec.initContainers.?name:container-name=%s.image",
        "AttributeName": "container-image",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image",
              "Arguments": null
            }
          ]
        }
      }
    }
  },
  "container-image-reference": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "v1/Pod": {
      "spec.containers.?name:container-name=%s.image#reference": {
        "Path": "spec.containers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.ephemeralContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.initContainers.?name:container-name=%s.image#reference": {
        "Path": "spec.initContainers.?name:container-name=%s.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-reference",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-reference",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    }
  },
  "container-images": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.image": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.image": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.image": {
        "Path": "spec.template.spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.ephemeralContainers.*.image": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.template.spec.initContainers.*.image": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    },
    "v1/Pod": {
      "spec.containers.*.image": {
        "Path": "spec.containers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.ephemeralContainers.*.image": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      },
      "spec.initContainers.*.image": {
        "Path": "spec.initContainers.*?name:container-name.image",
        "AttributeName": "container-image",
        "DataType": "string"
      }
    }
  },
  "container-name": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.name": {
        "Path": "spec.template.spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.ephemeralContainers.*.name": {
        "Path": "spec.template.spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.template.spec.initContainers.*.name": {
        "Path": "spec.template.spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    },
    "v1/Pod": {
      "spec.containers.*.name": {
        "Path": "spec.containers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.ephemeralContainers.*.name": {
        "Path": "spec.ephemeralContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      },
      "spec.initContainers.*.name": {
        "Path": "spec.initContainers.*.name",
        "AttributeName": "container-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-container-name",
            "Arguments": null
          }
        }
      }
    }
  },
  "container-repository-uri": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "v1/Pod": {
      "spec.containers.?name:container-name=%s.image#uri": {
        "Path": "spec.containers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.ephemeralContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.initContainers.?name:container-name=%s.image#uri": {
        "Path": "spec.initContainers.?name:container-name=%s.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-image-uri",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    }
  },
  "container-resources": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.template.spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    },
    "v1/Pod": {
      "spec.containers.?name:container-name=%s.resources": {
        "Path": "spec.containers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.ephemeralContainers.?name:container-name=%s.resources": {
        "Path": "spec.ephemeralContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      },
      "spec.initContainers.?name:container-name=%s.resources": {
        "Path": "spec.initContainers.?name:container-name=%s.resources",
        "AttributeName": "container-resources",
        "DataType": "YAML"
      }
    }
  },
  "default-name": {
    "*": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      }
    },
    "apps/v1/DaemonSet": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app~1kubernetes~1io/name": {
        "Path": "metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app~1kubernetes~1io/name": {
        "Path": "spec.selector.matchLabels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app~1kubernetes~1io/name": {
        "Path": "spec.template.metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      }
    },
    "apps/v1/Deployment": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app~1kubernetes~1io/name": {
        "Path": "metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app~1kubernetes~1io/name": {
        "Path": "spec.selector.matchLabels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app~1kubernetes~1io/name": {
        "Path": "spec.template.metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app~1kubernetes~1io/name": {
        "Path": "metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app~1kubernetes~1io/name": {
        "Path": "spec.selector.matchLabels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app~1kubernetes~1io/name": {
        "Path": "spec.template.metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      }
    },
    "apps/v1/StatefulSet": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app~1kubernetes~1io/name": {
        "Path": "metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app": {
        "Path": "spec.selector.matchLabels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.selector.matchLabels.app~1kubernetes~1io/name": {
        "Path": "spec.selector.matchLabels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app": {
        "Path": "spec.template.metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "spec.template.metadata.labels.app~1kubernetes~1io/name": {
        "Path": "spec.template.metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      }
    },
    "v1/Pod": {
      "metadata.labels.app": {
        "Path": "metadata.labels.app",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      },
      "metadata.labels.app~1kubernetes~1io/name": {
        "Path": "metadata.labels.app~1kubernetes~1io/name",
        "AttributeName": "app-label",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-default-names",
              "Arguments": null
            }
          ],
          "GenerationTemplate": "{{.NormalizedUnitName}}-{{.NormalizedSpaceName}}"
        }
      }
    }
  },
  "detail": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/Deployment": {
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "Replicas is the number of desired pods. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset"
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "apps/v1/StatefulSet": {
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
        }
      },
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.containers.*.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.image#reference": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.containers.*.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#reference": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.initContainers.*.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "networking.k8s.io/v1/Ingress": {
      "spec.rules.*.host": {
        "Path": "spec.rules.*.host",
        "AttributeName": "hostname",
        "DataType": "string",
        "Info": {
          "Description": "host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\n   the IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\n\nhost can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If host is precise, the request matches this rule if the http host header is equal to Host. 2. If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule."
        }
      },
      "spec.rules.*.http.paths.*.backend.service.name": {
        "Path": "spec.rules.*.http.paths.*.backend.service.name",
        "AttributeName": "backend-service-name",
        "DataType": "string",
        "Info": {
          "Description": "name is the referenced service. The service must exist in the same namespace as the Ingress object."
        }
      },
      "spec.rules.*.http.paths.*.backend.service.port.number": {
        "Path": "spec.rules.*.http.paths.*.backend.service.port.number",
        "AttributeName": "backend-service-port",
        "DataType": "int",
        "Info": {
          "Description": "number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with \"Name\"."
        }
      },
      "spec.rules.*.http.paths.*.path": {
        "Path": "spec.rules.*.http.paths.*.path",
        "AttributeName": "uri-path",
        "DataType": "string",
        "Info": {
          "Description": "path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/' and must be present when using PathType with value \"Exact\" or \"Prefix\"."
        }
      }
    },
    "networking.k8s.io/v1/IngressClass": {
      "spec.controller": {
        "Path": "spec.controller",
        "AttributeName": "ingress-controller",
        "DataType": "string",
        "Info": {
          "Description": "controller refers to the name of the controller that should handle this class. This allows for different \"flavors\" that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This field is immutable."
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRole": {
      "rules.*.apiGroups.*": {
        "Path": "rules.*.apiGroups.*",
        "AttributeName": "api-group",
        "DataType": "string"
      },
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string"
      },
      "rules.*.resources.*": {
        "Path": "rules.*.resources.*",
        "AttributeName": "resource-type",
        "DataType": "string"
      },
      "rules.*.verbs.*": {
        "Path": "rules.*.verbs.*",
        "AttributeName": "verb",
        "DataType": "string"
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "roleRef.kind": {
        "Path": "roleRef.kind",
        "AttributeName": "role-kind",
        "DataType": "string",
        "Info": {
          "Description": "Kind is the type of resource being referenced"
        }
      },
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "role-name",
        "DataType": "string",
        "Info": {
          "Description": "Name is the name of resource being referenced"
        }
      },
      "subjects.*.apiGroup": {
        "Path": "subjects.*.apiGroup",
        "AttributeName": "subject-api-group",
        "DataType": "string",
        "Info": {
          "Description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
        }
      },
      "subjects.*.kind": {
        "Path": "subjects.*.kind",
        "AttributeName": "subject-kind",
        "DataType": "string",
        "Info": {
          "Description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
        }
      },
      "subjects.*.name": {
        "Path": "subjects.*.name",
        "AttributeName": "subject-name",
        "DataType": "string",
        "Info": {
          "Description": "Name of the object being referenced."
        }
      },
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "subject-namespace",
        "DataType": "string",
        "Info": {
          "Description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
        }
      }
    },
    "rbac.authorization.k8s.io/v1/Role": {
      "rules.*.apiGroups.*": {
        "Path": "rules.*.apiGroups.*",
        "AttributeName": "api-group",
        "DataType": "string"
      },
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string"
      },
      "rules.*.resources.*": {
        "Path": "rules.*.resources.*",
        "AttributeName": "resource-type",
        "DataType": "string"
      },
      "rules.*.verbs.*": {
        "Path": "rules.*.verbs.*",
        "AttributeName": "verb",
        "DataType": "string"
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "roleRef.kind": {
        "Path": "roleRef.kind",
        "AttributeName": "role-kind",
        "DataType": "string",
        "Info": {
          "Description": "Kind is the type of resource being referenced"
        }
      },
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "role-name",
        "DataType": "string",
        "Info": {
          "Description": "Name is the name of resource being referenced"
        }
      },
      "subjects.*.apiGroup": {
        "Path": "subjects.*.apiGroup",
        "AttributeName": "subject-api-group",
        "DataType": "string",
        "Info": {
          "Description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects."
        }
      },
      "subjects.*.kind": {
        "Path": "subjects.*.kind",
        "AttributeName": "subject-kind",
        "DataType": "string",
        "Info": {
          "Description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error."
        }
      },
      "subjects.*.name": {
        "Path": "subjects.*.name",
        "AttributeName": "subject-name",
        "DataType": "string",
        "Info": {
          "Description": "Name of the object being referenced."
        }
      },
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "subject-namespace",
        "DataType": "string",
        "Info": {
          "Description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error."
        }
      }
    },
    "v1/Pod": {
      "spec.containers.*.image#reference": {
        "Path": "spec.containers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.containers.*.image#uri": {
        "Path": "spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.*.image#reference": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.*.image#uri": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.initContainers.*.image#reference": {
        "Path": "spec.initContainers.*?name:container-name.image#reference",
        "AttributeName": "container-image-reference",
        "DataType": "string",
        "Info": {
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.initContainers.*.image#uri": {
        "Path": "spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      }
    },
    "v1/Service": {
      "spec.ports.*.port": {
        "Path": "spec.ports.*.port",
        "AttributeName": "port",
        "DataType": "int",
        "Info": {
          "Description": "The port that will be exposed by this service."
        }
      },
      "spec.ports.*.targetPort": {
        "Path": "spec.ports.*.targetPort",
        "AttributeName": "target-port",
        "DataType": "int",
        "Info": {
          "Description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"
        }
      }
    },
    "v1/ServiceAccount": {
      "automountServiceAccountToken": {
        "Path": "automountServiceAccountToken",
        "AttributeName": "automount-token",
        "DataType": "bool",
        "Info": {
          "Description": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level."
        }
      }
    }
  },
  "domain": {
    "networking.k8s.io/v1/Ingress": {
      "spec.rules.*.host#domain": {
        "Path": "spec.rules.*.host#domain",
        "AttributeName": "domain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-domain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-domain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      }
    },
    "v1/Service": {
      "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname#domain": {
        "Path": "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname#domain",
        "AttributeName": "domain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-domain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-domain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      }
    }
  },
  "env-value": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.template.spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.containers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.containers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.ephemeralContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      },
      "spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value": {
        "Path": "spec.initContainers.?name:container-name=%s.env.?name:env-var=%s.value",
        "AttributeName": "env-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-env-var",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-env-var",
              "Arguments": null
            }
          ]
        }
      }
    }
  },
  "hostname": {
    "networking.k8s.io/v1/Ingress": {
      "spec.rules.*.host": {
        "Path": "spec.rules.*.host",
        "AttributeName": "hostname",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname",
              "Arguments": null
            }
          ]
        }
      }
    },
    "v1/Service": {
      "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname": {
        "Path": "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname",
        "AttributeName": "hostname",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname",
              "Arguments": null
            }
          ]
        }
      }
    }
  },
  "label-value": {
    "*": {
      "metadata.labels.@%s:label-key": {
        "Path": "metadata.labels.@%s:label-key",
        "AttributeName": "label-value",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-label",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-label",
              "Arguments": null
            }
          ]
        }
      }
    }
  },
  "namespace-name-reference": {
    "*": {
      "metadata.namespace": {
        "Path": "metadata.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        },
        "TypeExceptions": {
          "admissionregistration.k8s.io/v1/MutatingWebhookConfiguration": {},
          "admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration": {},
          "apiextensions.k8s.io/v1/CustomResourceDefinition": {},
          "apiregistration.k8s.io/v1/APIService": {},
          "cert-manager.io/v1/ClusterIssuer": {},
          "external-secrets.io/v1/ClusterExternalSecret": {},
          "external-secrets.io/v1/ClusterPushSecret": {},
          "external-secrets.io/v1/ClusterSecretStore": {},
          "external-secrets.io/v1alpha1/ClusterExternalSecret": {},
          "external-secrets.io/v1alpha1/ClusterPushSecret": {},
          "external-secrets.io/v1alpha1/ClusterSecretStore": {},
          "external-secrets.io/v1beta1/ClusterExternalSecret": {},
          "external-secrets.io/v1beta1/ClusterPushSecret": {},
          "external-secrets.io/v1beta1/ClusterSecretStore": {},
          "gateway.networking.k8s.io/v1/GatewayClass": {},
          "gateway.networking.k8s.io/v1alpha1/GatewayClass": {},
          "gateway.networking.k8s.io/v1beta1/GatewayClass": {},
          "generators.external-secrets.io/v1/ClusterGenerator": {},
          "generators.external-secrets.io/v1alpha1/ClusterGenerator": {},
          "generators.external-secrets.io/v1beta1/ClusterGenerator": {},
          "hub.traefik.io/v1/AccessControlPolicy": {},
          "hub.traefik.io/v1alpha1/AccessControlPolicy": {},
          "hub.traefik.io/v1beta1/AccessControlPolicy": {},
          "networking.k8s.io/v1/IngressClass": {},
          "rbac.authorization.k8s.io/v1/ClusterRole": {},
          "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {},
          "storage.k8s.io/v1/CSIDriver": {},
          "storage.k8s.io/v1/StorageClass": {},
          "v1/Namespace": {}
        }
      }
    },
    "apiextensions.k8s.io/v1/CustomResourceDefinition": {
      "spec.conversion.webhook.clientConfig.service.namespace": {
        "Path": "spec.conversion.webhook.clientConfig.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "apiregistration.k8s.io/v1/APIService": {
      "spec.service.namespace": {
        "Path": "spec.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "helm.toolkit.fluxcd.io/v2/HelmRelease": {
      "spec.chartRef.namespace": {
        "Path": "spec.chartRef.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "kustomize.toolkit.fluxcd.io/v1/Kustomization": {
      "spec.targetNamespace": {
        "Path": "spec.targetNamespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "needed-value": {
    "*": {
      "metadata.namespace": {
        "Path": "metadata.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        },
        "TypeExceptions": {
          "admissionregistration.k8s.io/v1/MutatingWebhookConfiguration": {},
          "admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration": {},
          "apiextensions.k8s.io/v1/CustomResourceDefinition": {},
          "apiregistration.k8s.io/v1/APIService": {},
          "cert-manager.io/v1/ClusterIssuer": {},
          "external-secrets.io/v1/ClusterExternalSecret": {},
          "external-secrets.io/v1/ClusterPushSecret": {},
          "external-secrets.io/v1/ClusterSecretStore": {},
          "external-secrets.io/v1alpha1/ClusterExternalSecret": {},
          "external-secrets.io/v1alpha1/ClusterPushSecret": {},
          "external-secrets.io/v1alpha1/ClusterSecretStore": {},
          "external-secrets.io/v1beta1/ClusterExternalSecret": {},
          "external-secrets.io/v1beta1/ClusterPushSecret": {},
          "external-secrets.io/v1beta1/ClusterSecretStore": {},
          "gateway.networking.k8s.io/v1/GatewayClass": {},
          "gateway.networking.k8s.io/v1alpha1/GatewayClass": {},
          "gateway.networking.k8s.io/v1beta1/GatewayClass": {},
          "generators.external-secrets.io/v1/ClusterGenerator": {},
          "generators.external-secrets.io/v1alpha1/ClusterGenerator": {},
          "generators.external-secrets.io/v1beta1/ClusterGenerator": {},
          "hub.traefik.io/v1/AccessControlPolicy": {},
          "hub.traefik.io/v1alpha1/AccessControlPolicy": {},
          "hub.traefik.io/v1beta1/AccessControlPolicy": {},
          "networking.k8s.io/v1/IngressClass": {},
          "rbac.authorization.k8s.io/v1/ClusterRole": {},
          "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {},
          "storage.k8s.io/v1/CSIDriver": {},
          "storage.k8s.io/v1/StorageClass": {},
          "v1/Namespace": {}
        }
      }
    },
    "admissionregistration.k8s.io/v1/MutatingWebhookConfiguration": {
      "webhooks.*.clientConfig.service.name": {
        "Path": "webhooks.*.clientConfig.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    },
    "admissionregistration.k8s.io/v1/ValidatingAdmissionPolicyBinding": {
      "spec.policyName": {
        "Path": "spec.policyName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "admissionregistration.k8s.io/v1/ValidatingAdmissionPolicy"
                }
              ]
            }
          ]
        }
      }
    },
    "admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration": {
      "webhooks.*.clientConfig.service.name": {
        "Path": "webhooks.*.clientConfig.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    },
    "apiextensions.k8s.io/v1/CustomResourceDefinition": {
      "spec.conversion.webhook.clientConfig.service.namespace": {
        "Path": "spec.conversion.webhook.clientConfig.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "apiregistration.k8s.io/v1/APIService": {
      "spec.service.name": {
        "Path": "spec.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.service.namespace": {
        "Path": "spec.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.serviceName": {
        "Path": "spec.serviceName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.volumeClaimTemplates.spec.storageClassName": {
        "Path": "spec.volumeClaimTemplates.spec.storageClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "storage.k8s.io/v1/StorageClass"
                }
              ]
            }
          ]
        }
      }
    },
    "autoscaling/v2/HorizontalPodAutoscaler": {
      "spec.scaleTargetRef.name": {
        "Path": "spec.scaleTargetRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/Deployment"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ReplicationController"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/ReplicaSet"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/StatefulSet"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.jobTemplate.spec.template.spec.priorityClassName": {
        "Path": "spec.jobTemplate.spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.serviceAccountName": {
        "Path": "spec.jobTemplate.spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.template.spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "helm.toolkit.fluxcd.io/v2/HelmRelease": {
      "spec.chartRef.namespace": {
        "Path": "spec.chartRef.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "kustomize.toolkit.fluxcd.io/v1/Kustomization": {
      "spec.targetNamespace": {
        "Path": "spec.targetNamespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "networking.k8s.io/v1/Ingress": {
      "metadata.annotations.ingress.kubernetes.io\\.auth-secret": {
        "Path": "metadata.annotations.ingress.kubernetes.io\\.auth-secret",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-secret": {
        "Path": "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-secret",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-tls-secret": {
        "Path": "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-tls-secret",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "metadata.annotations.nginx.ingress.kubernetes.io\\.fastcgi-params-configmap": {
        "Path": "metadata.annotations.nginx.ingress.kubernetes.io\\.fastcgi-params-configmap",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.backend.serviceName": {
        "Path": "spec.backend.serviceName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.defaultBackend.service.name": {
        "Path": "spec.defaultBackend.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.ingressClassName": {
        "Path": "spec.ingressClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "networking.k8s.io/v1/v1/IngressClass"
                }
              ]
            }
          ]
        }
      },
      "spec.rules.*.host#domain": {
        "Path": "spec.rules.*.host#domain",
        "AttributeName": "domain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-domain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-domain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      },
      "spec.rules.*.http.paths.*.backend.service.name": {
        "Path": "spec.rules.*.http.paths.*.backend.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.rules.*.http.paths.*.backend.serviceName": {
        "Path": "spec.rules.*.http.paths.*.backend.serviceName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.tls.secretName": {
        "Path": "spec.tls.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRole": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolume"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/ClusterRole"
                }
              ]
            }
          ]
        }
      },
      "subjects.*.name": {
        "Path": "subjects.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/Role": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/Role"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/ClusterRole"
                }
              ]
            }
          ]
        }
      },
      "subjects.*.name": {
        "Path": "subjects.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "serving.knative.dev/v1/Service": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Node": {
      "spec.configSource.configMap": {
        "Path": "spec.configSource.configMap",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PersistentVolume": {
      "spec.azureFile.secretName": {
        "Path": "spec.azureFile.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.storageClassName": {
        "Path": "spec.storageClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "storage.k8s.io/v1/StorageClass"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PersistentVolumeClaim": {
      "spec.storageClassName": {
        "Path": "spec.storageClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "storage.k8s.io/v1/StorageClass"
                }
              ]
            }
          ]
        }
      },
      "spec.volumeName": {
        "Path": "spec.volumeName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolume"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.containers.*?name:container-name.image#uri": {
        "Path": "spec.containers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.ephemeralContainers.*?name:container-name.image#uri": {
        "Path": "spec.ephemeralContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.imagePullSecrets.*.name": {
        "Path": "spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*?name:container-name.image#uri": {
        "Path": "spec.initContainers.*?name:container-name.image#uri",
        "AttributeName": "container-repository-uri",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-image-uri",
              "Arguments": null
            }
          ],
          "Description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets."
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003curi\u003e(?:(?:[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]*[a-z0-9])?)*(?:\\:[0-9]+)?)/)?(?:[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:\\.|_|__|-+)[a-z0-9]+)*)*))(?P\u003creference\u003e\\:(?:[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})|@(?:[a-z0-9]+(?:[+._-][a-z0-9]+)*\\:[a-zA-Z0-9=_-]+))?$"
      },
      "spec.priorityClassName": {
        "Path": "spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.serviceAccountName": {
        "Path": "spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.configMap.name": {
        "Path": "spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.secret.secretName": {
        "Path": "spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PodTemplate": {
      "template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.imagePullSecrets.*.name": {
        "Path": "template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.configMap.name": {
        "Path": "template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.secret.secretName": {
        "Path": "template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/ReplicationController": {
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Service": {
      "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname#domain": {
        "Path": "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname#domain",
        "AttributeName": "domain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-domain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-domain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      }
    },
    "v1/ServiceAccount": {
      "imagePullSecrets.*.name": {
        "Path": "imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/StorageClass": {
      "parameters.*.adminSecretName": {
        "Path": "parameters.*.adminSecretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "parameters.*.secretName": {
        "Path": "parameters.*.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "parameters.*.secretRef": {
        "Path": "parameters.*.secretRef",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "parameters.*.userSecretName": {
        "Path": "parameters.*.userSecretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "provided-value": {
    "admissionregistration.k8s.io/v1/ValidatingAdmissionPolicy": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "admissionregistration.k8s.io/v1/ValidatingAdmissionPolicy"
              }
            ]
          }
        }
      }
    },
    "apps/v1/Deployment": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "apps/v1/Deployment"
              }
            ]
          }
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "apps/v1/ReplicaSet"
              }
            ]
          }
        }
      }
    },
    "apps/v1/StatefulSet": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "apps/v1/StatefulSet"
              }
            ]
          }
        }
      }
    },
    "networking.k8s.io/v1/v1/IngressClass": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "networking.k8s.io/v1/v1/IngressClass"
              }
            ]
          }
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRole": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "rbac.authorization.k8s.io/v1/ClusterRole"
              }
            ]
          }
        }
      }
    },
    "rbac.authorization.k8s.io/v1/Role": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "rbac.authorization.k8s.io/v1/Role"
              }
            ]
          }
        }
      }
    },
    "scheduling.k8s.io/v1/PriorityClass": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "scheduling.k8s.io/v1/PriorityClass"
              }
            ]
          }
        }
      }
    },
    "storage.k8s.io/v1/StorageClass": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "storage.k8s.io/v1/StorageClass"
              }
            ]
          }
        }
      }
    },
    "v1/ConfigMap": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/ConfigMap"
              }
            ]
          }
        }
      }
    },
    "v1/Namespace": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/Namespace"
              }
            ]
          }
        }
      }
    },
    "v1/PersistentVolume": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/PersistentVolume"
              }
            ]
          }
        }
      }
    },
    "v1/PersistentVolumeClaim": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/PersistentVolumeClaim"
              }
            ]
          }
        }
      }
    },
    "v1/ReplicationController": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/ReplicationController"
              }
            ]
          }
        }
      }
    },
    "v1/Secret": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/Secret"
              }
            ]
          }
        }
      }
    },
    "v1/Service": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/Service"
              }
            ]
          }
        }
      }
    },
    "v1/ServiceAccount": {
      "metadata.name": {
        "Path": "metadata.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-resources-of-type",
            "Arguments": [
              {
                "ParameterName": "resource-type",
                "Value": "v1/ServiceAccount"
              }
            ]
          }
        }
      }
    }
  },
  "replicas": {
    "apps/v1/Deployment": {
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1."
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "Replicas is the number of desired pods. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset"
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.replicas": {
        "Path": "spec.replicas",
        "AttributeName": "replicas",
        "DataType": "int",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-replicas",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-replicas",
              "Arguments": null
            }
          ],
          "Description": "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1."
        }
      }
    }
  },
  "resource-name": {
    "*": {
      "metadata.namespace": {
        "Path": "metadata.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        },
        "TypeExceptions": {
          "admissionregistration.k8s.io/v1/MutatingWebhookConfiguration": {},
          "admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration": {},
          "apiextensions.k8s.io/v1/CustomResourceDefinition": {},
          "apiregistration.k8s.io/v1/APIService": {},
          "cert-manager.io/v1/ClusterIssuer": {},
          "external-secrets.io/v1/ClusterExternalSecret": {},
          "external-secrets.io/v1/ClusterPushSecret": {},
          "external-secrets.io/v1/ClusterSecretStore": {},
          "external-secrets.io/v1alpha1/ClusterExternalSecret": {},
          "external-secrets.io/v1alpha1/ClusterPushSecret": {},
          "external-secrets.io/v1alpha1/ClusterSecretStore": {},
          "external-secrets.io/v1beta1/ClusterExternalSecret": {},
          "external-secrets.io/v1beta1/ClusterPushSecret": {},
          "external-secrets.io/v1beta1/ClusterSecretStore": {},
          "gateway.networking.k8s.io/v1/GatewayClass": {},
          "gateway.networking.k8s.io/v1alpha1/GatewayClass": {},
          "gateway.networking.k8s.io/v1beta1/GatewayClass": {},
          "generators.external-secrets.io/v1/ClusterGenerator": {},
          "generators.external-secrets.io/v1alpha1/ClusterGenerator": {},
          "generators.external-secrets.io/v1beta1/ClusterGenerator": {},
          "hub.traefik.io/v1/AccessControlPolicy": {},
          "hub.traefik.io/v1alpha1/AccessControlPolicy": {},
          "hub.traefik.io/v1beta1/AccessControlPolicy": {},
          "networking.k8s.io/v1/IngressClass": {},
          "rbac.authorization.k8s.io/v1/ClusterRole": {},
          "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {},
          "storage.k8s.io/v1/CSIDriver": {},
          "storage.k8s.io/v1/StorageClass": {},
          "v1/Namespace": {}
        }
      }
    },
    "apiextensions.k8s.io/v1/CustomResourceDefinition": {
      "spec.conversion.webhook.clientConfig.service.namespace": {
        "Path": "spec.conversion.webhook.clientConfig.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "apiregistration.k8s.io/v1/APIService": {
      "spec.service.namespace": {
        "Path": "spec.service.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "helm.toolkit.fluxcd.io/v2/HelmRelease": {
      "spec.chartRef.namespace": {
        "Path": "spec.chartRef.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "kustomize.toolkit.fluxcd.io/v1/Kustomization": {
      "spec.targetNamespace": {
        "Path": "spec.targetNamespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "subjects.*.namespace": {
        "Path": "subjects.*.namespace",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Namespace"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/admissionregistration.k8s.io/v1/ValidatingAdmissionPolicy": {
    "admissionregistration.k8s.io/v1/ValidatingAdmissionPolicyBinding": {
      "spec.policyName": {
        "Path": "spec.policyName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "admissionregistration.k8s.io/v1/ValidatingAdmissionPolicy"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/apps/v1/Deployment": {
    "autoscaling/v2/HorizontalPodAutoscaler": {
      "spec.scaleTargetRef.name": {
        "Path": "spec.scaleTargetRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/Deployment"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ReplicationController"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/ReplicaSet"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/StatefulSet"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/apps/v1/ReplicaSet": {
    "autoscaling/v2/HorizontalPodAutoscaler": {
      "spec.scaleTargetRef.name": {
        "Path": "spec.scaleTargetRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/ReplicaSet"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/apps/v1/StatefulSet": {
    "autoscaling/v2/HorizontalPodAutoscaler": {
      "spec.scaleTargetRef.name": {
        "Path": "spec.scaleTargetRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "apps/v1/StatefulSet"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/networking.k8s.io/v1/v1/IngressClass": {
    "networking.k8s.io/v1/Ingress": {
      "spec.ingressClassName": {
        "Path": "spec.ingressClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "networking.k8s.io/v1/v1/IngressClass"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/rbac.authorization.k8s.io/v1/ClusterRole": {
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/ClusterRole"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/ClusterRole"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/rbac.authorization.k8s.io/v1/Role": {
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "roleRef.name": {
        "Path": "roleRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/Role"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "rbac.authorization.k8s.io/v1/ClusterRole"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/scheduling.k8s.io/v1/PriorityClass": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.priorityClassName": {
        "Path": "spec.jobTemplate.spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.priorityClassName": {
        "Path": "spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/ReplicationController": {
      "spec.template.spec.priorityClassName": {
        "Path": "spec.template.spec.priorityClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "scheduling.k8s.io/v1/PriorityClass"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/storage.k8s.io/v1/StorageClass": {
    "apps/v1/StatefulSet": {
      "spec.volumeClaimTemplates.spec.storageClassName": {
        "Path": "spec.volumeClaimTemplates.spec.storageClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "storage.k8s.io/v1/StorageClass"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PersistentVolume": {
      "spec.storageClassName": {
        "Path": "spec.storageClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "storage.k8s.io/v1/StorageClass"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PersistentVolumeClaim": {
      "spec.storageClassName": {
        "Path": "spec.storageClassName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "storage.k8s.io/v1/StorageClass"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/ConfigMap": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "networking.k8s.io/v1/Ingress": {
      "metadata.annotations.nginx.ingress.kubernetes.io\\.fastcgi-params-configmap": {
        "Path": "metadata.annotations.nginx.ingress.kubernetes.io\\.fastcgi-params-configmap",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRole": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolume"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/Role": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            },
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Node": {
      "spec.configSource.configMap": {
        "Path": "spec.configSource.configMap",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.configMap.name": {
        "Path": "spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PodTemplate": {
      "template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "template.spec.containers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.containers.*.envFrom.*.configMapRef.name": {
        "Path": "template.spec.containers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name": {
        "Path": "template.spec.initContainers.*.env.*.valueFrom.configMapKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.envFrom.*.configMapRef.name": {
        "Path": "template.spec.initContainers.*.envFrom.*.configMapRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.configMap.name": {
        "Path": "template.spec.volumes.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.projected.sources.*.configMap.name": {
        "Path": "template.spec.volumes.*.projected.sources.*.configMap.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ConfigMap"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/PersistentVolume": {
    "rbac.authorization.k8s.io/v1/ClusterRole": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolume"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PersistentVolumeClaim": {
      "spec.volumeName": {
        "Path": "spec.volumeName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolume"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/PersistentVolumeClaim": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/ReplicationController": {
      "spec.template.spec.volumes.*.persistentVolumeClaim.claimName": {
        "Path": "spec.template.spec.volumes.*.persistentVolumeClaim.claimName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/PersistentVolumeClaim"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/ReplicationController": {
    "autoscaling/v2/HorizontalPodAutoscaler": {
      "spec.scaleTargetRef.name": {
        "Path": "spec.scaleTargetRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ReplicationController"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/Secret": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/ReplicaSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.jobTemplate.spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.jobTemplate.spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.jobTemplate.spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.jobTemplate.spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.imagePullSecrets.*.name": {
        "Path": "spec.template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.template.spec.volumes.*.secret.secretName": {
        "Path": "spec.template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "networking.k8s.io/v1/Ingress": {
      "metadata.annotations.ingress.kubernetes.io\\.auth-secret": {
        "Path": "metadata.annotations.ingress.kubernetes.io\\.auth-secret",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-secret": {
        "Path": "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-secret",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-tls-secret": {
        "Path": "metadata.annotations.nginx.ingress.kubernetes.io\\.auth-tls-secret",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.tls.secretName": {
        "Path": "spec.tls.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRole": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/Role": {
      "rules.*.resourceNames.*": {
        "Path": "rules.*.resourceNames.*",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "serving.knative.dev/v1/Service": {
      "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PersistentVolume": {
      "spec.azureFile.secretName": {
        "Path": "spec.azureFile.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.imagePullSecrets.*.name": {
        "Path": "spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "spec.volumes.*.secret.secretName": {
        "Path": "spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/PodTemplate": {
      "template.spec.containers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "template.spec.containers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.containers.*.envFrom.*.secretRef.name": {
        "Path": "template.spec.containers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.imagePullSecrets.*.name": {
        "Path": "template.spec.imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name": {
        "Path": "template.spec.initContainers.*.env.*.valueFrom.secretKeyRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.initContainers.*.envFrom.*.secretRef.name": {
        "Path": "template.spec.initContainers.*.envFrom.*.secretRef.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.projected.sources.*.secret.name": {
        "Path": "template.spec.volumes.*.projected.sources.*.secret.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "template.spec.volumes.*.secret.secretName": {
        "Path": "template.spec.volumes.*.secret.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/ServiceAccount": {
      "imagePullSecrets.*.name": {
        "Path": "imagePullSecrets.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/StorageClass": {
      "parameters.*.adminSecretName": {
        "Path": "parameters.*.adminSecretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "parameters.*.secretName": {
        "Path": "parameters.*.secretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "parameters.*.secretRef": {
        "Path": "parameters.*.secretRef",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      },
      "parameters.*.userSecretName": {
        "Path": "parameters.*.userSecretName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Secret"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/Service": {
    "admissionregistration.k8s.io/v1/MutatingWebhookConfiguration": {
      "webhooks.*.clientConfig.service.name": {
        "Path": "webhooks.*.clientConfig.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    },
    "admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration": {
      "webhooks.*.clientConfig.service.name": {
        "Path": "webhooks.*.clientConfig.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    },
    "apiregistration.k8s.io/v1/APIService": {
      "spec.service.name": {
        "Path": "spec.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.serviceName": {
        "Path": "spec.serviceName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    },
    "networking.k8s.io/v1/Ingress": {
      "spec.backend.serviceName": {
        "Path": "spec.backend.serviceName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.defaultBackend.service.name": {
        "Path": "spec.defaultBackend.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.rules.*.http.paths.*.backend.service.name": {
        "Path": "spec.rules.*.http.paths.*.backend.service.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      },
      "spec.rules.*.http.paths.*.backend.serviceName": {
        "Path": "spec.rules.*.http.paths.*.backend.serviceName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/Service"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "resource-name/v1/ServiceAccount": {
    "apps/v1/DaemonSet": {
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/Deployment": {
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "apps/v1/StatefulSet": {
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/CronJob": {
      "spec.jobTemplate.spec.template.spec.serviceAccountName": {
        "Path": "spec.jobTemplate.spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "batch/v1/Job": {
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/ClusterRoleBinding": {
      "subjects.*.name": {
        "Path": "subjects.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "rbac.authorization.k8s.io/v1/RoleBinding": {
      "subjects.*.name": {
        "Path": "subjects.*.name",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/Pod": {
      "spec.serviceAccountName": {
        "Path": "spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    },
    "v1/ReplicationController": {
      "spec.template.spec.serviceAccountName": {
        "Path": "spec.template.spec.serviceAccountName",
        "AttributeName": "resource-name",
        "DataType": "string",
        "Info": {
          "SetterInvocations": [
            {
              "FunctionName": "set-references-of-type",
              "Arguments": [
                {
                  "ParameterName": "resource-type",
                  "Value": "v1/ServiceAccount"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "subdomain": {
    "networking.k8s.io/v1/Ingress": {
      "spec.rules.*.host#subdomain": {
        "Path": "spec.rules.*.host#subdomain",
        "AttributeName": "subdomain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-subdomain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-subdomain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      }
    },
    "v1/Service": {
      "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname#subdomain": {
        "Path": "metadata.annotations.external-dns~1alpha~1kubernetes~1io/hostname#subdomain",
        "AttributeName": "subdomain",
        "DataType": "string",
        "Info": {
          "GetterInvocation": {
            "FunctionName": "get-hostname-subdomain",
            "Arguments": null
          },
          "SetterInvocations": [
            {
              "FunctionName": "set-hostname-subdomain",
              "Arguments": null
            }
          ]
        },
        "EmbeddedAccessorType": "Regexp",
        "EmbeddedAccessorConfig": "^(?P\u003csubdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?)\\.(?P\u003cdomain\u003e[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-a-z0-9]{0,61}[a-z0-9])?){0,9})$"
      }
    }
  }
}
