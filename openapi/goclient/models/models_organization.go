// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ModelsOrganization models organization
//
// swagger:model models.Organization
type ModelsOrganization struct {

	// annotations
	Annotations map[string]string `json:"Annotations,omitempty"`

	// BillingAccountID is the unique identifier for the organization's billing account.
	// required: true
	// example: "123e4567-e89b-12d3-a456-426614174001"
	BillingAccountID string `json:"BillingAccountID,omitempty"`

	// CreatedAt is the timestamp when the entity was created in "2023-01-01T12:00:00Z" format.
	// Example: 2025-04-04T11:50:02.95102-07:00
	CreatedAt string `json:"CreatedAt,omitempty"`

	// CursorID is an auto-incrementing sequence number used for pagination.
	CursorID int64 `json:"CursorID,omitempty"`

	// not URL-safe
	DisplayName string `json:"DisplayName,omitempty"`

	// ExternalID is the external identifier for the organization.
	// required: true
	// example: "org-123456"
	ExternalID string `json:"ExternalID,omitempty"`

	// labels
	Labels map[string]string `json:"Labels,omitempty"`

	// OrganizationID is the unique identifier for the organization.
	OrganizationID string `json:"OrganizationID,omitempty"`

	// URL-safe; must be unique within the same container hierarchy
	Slug string `json:"Slug,omitempty"`

	// UpdatedAt is the timestamp when the entity was last updated in "2023-01-01T12:00:00Z" format.
	// Example: 2025-04-04T11:50:02.95102-07:00
	UpdatedAt string `json:"UpdatedAt,omitempty"`

	// Version is an entity-specific sequence number used for optimistic concurrency control.
	// The value read must be sent in calls to Update.
	Version int64 `json:"Version,omitempty"`
}

// Validate validates this models organization
func (m *ModelsOrganization) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this models organization based on context it is used
func (m *ModelsOrganization) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsOrganization) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsOrganization) UnmarshalBinary(b []byte) error {
	var res ModelsOrganization
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
