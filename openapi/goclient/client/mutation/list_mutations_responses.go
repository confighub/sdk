// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package mutation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListMutationsReader is a Reader for the ListMutations structure.
type ListMutationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMutationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListMutationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListMutationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListMutationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListMutationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListMutationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}/mutation] ListMutations", response, response.Code())
	}
}

// NewListMutationsOK creates a ListMutationsOK with default headers values
func NewListMutationsOK() *ListMutationsOK {
	return &ListMutationsOK{}
}

/*
ListMutationsOK describes a response with status code 200, with default header values.

OK
*/
type ListMutationsOK struct {
	Payload []*models.ModelsExtendedMutation
}

// IsSuccess returns true when this list mutations o k response has a 2xx status code
func (o *ListMutationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list mutations o k response has a 3xx status code
func (o *ListMutationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mutations o k response has a 4xx status code
func (o *ListMutationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list mutations o k response has a 5xx status code
func (o *ListMutationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list mutations o k response a status code equal to that given
func (o *ListMutationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list mutations o k response
func (o *ListMutationsOK) Code() int {
	return 200
}

func (o *ListMutationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsOK %s", 200, payload)
}

func (o *ListMutationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsOK %s", 200, payload)
}

func (o *ListMutationsOK) GetPayload() []*models.ModelsExtendedMutation {
	return o.Payload
}

func (o *ListMutationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMutationsBadRequest creates a ListMutationsBadRequest with default headers values
func NewListMutationsBadRequest() *ListMutationsBadRequest {
	return &ListMutationsBadRequest{}
}

/*
ListMutationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListMutationsBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list mutations bad request response has a 2xx status code
func (o *ListMutationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list mutations bad request response has a 3xx status code
func (o *ListMutationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mutations bad request response has a 4xx status code
func (o *ListMutationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list mutations bad request response has a 5xx status code
func (o *ListMutationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list mutations bad request response a status code equal to that given
func (o *ListMutationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list mutations bad request response
func (o *ListMutationsBadRequest) Code() int {
	return 400
}

func (o *ListMutationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsBadRequest %s", 400, payload)
}

func (o *ListMutationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsBadRequest %s", 400, payload)
}

func (o *ListMutationsBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListMutationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMutationsUnauthorized creates a ListMutationsUnauthorized with default headers values
func NewListMutationsUnauthorized() *ListMutationsUnauthorized {
	return &ListMutationsUnauthorized{}
}

/*
ListMutationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListMutationsUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list mutations unauthorized response has a 2xx status code
func (o *ListMutationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list mutations unauthorized response has a 3xx status code
func (o *ListMutationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mutations unauthorized response has a 4xx status code
func (o *ListMutationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list mutations unauthorized response has a 5xx status code
func (o *ListMutationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list mutations unauthorized response a status code equal to that given
func (o *ListMutationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list mutations unauthorized response
func (o *ListMutationsUnauthorized) Code() int {
	return 401
}

func (o *ListMutationsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsUnauthorized %s", 401, payload)
}

func (o *ListMutationsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsUnauthorized %s", 401, payload)
}

func (o *ListMutationsUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListMutationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMutationsForbidden creates a ListMutationsForbidden with default headers values
func NewListMutationsForbidden() *ListMutationsForbidden {
	return &ListMutationsForbidden{}
}

/*
ListMutationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListMutationsForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list mutations forbidden response has a 2xx status code
func (o *ListMutationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list mutations forbidden response has a 3xx status code
func (o *ListMutationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mutations forbidden response has a 4xx status code
func (o *ListMutationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list mutations forbidden response has a 5xx status code
func (o *ListMutationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list mutations forbidden response a status code equal to that given
func (o *ListMutationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list mutations forbidden response
func (o *ListMutationsForbidden) Code() int {
	return 403
}

func (o *ListMutationsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsForbidden %s", 403, payload)
}

func (o *ListMutationsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsForbidden %s", 403, payload)
}

func (o *ListMutationsForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListMutationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMutationsInternalServerError creates a ListMutationsInternalServerError with default headers values
func NewListMutationsInternalServerError() *ListMutationsInternalServerError {
	return &ListMutationsInternalServerError{}
}

/*
ListMutationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListMutationsInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list mutations internal server error response has a 2xx status code
func (o *ListMutationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list mutations internal server error response has a 3xx status code
func (o *ListMutationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mutations internal server error response has a 4xx status code
func (o *ListMutationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list mutations internal server error response has a 5xx status code
func (o *ListMutationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list mutations internal server error response a status code equal to that given
func (o *ListMutationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list mutations internal server error response
func (o *ListMutationsInternalServerError) Code() int {
	return 500
}

func (o *ListMutationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsInternalServerError %s", 500, payload)
}

func (o *ListMutationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation][%d] listMutationsInternalServerError %s", 500, payload)
}

func (o *ListMutationsInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListMutationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
