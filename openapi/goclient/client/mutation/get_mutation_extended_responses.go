// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package mutation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetMutationExtendedReader is a Reader for the GetMutationExtended structure.
type GetMutationExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMutationExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMutationExtendedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMutationExtendedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMutationExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMutationExtendedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMutationExtendedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMutationExtendedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended] GetMutationExtended", response, response.Code())
	}
}

// NewGetMutationExtendedOK creates a GetMutationExtendedOK with default headers values
func NewGetMutationExtendedOK() *GetMutationExtendedOK {
	return &GetMutationExtendedOK{}
}

/*
GetMutationExtendedOK describes a response with status code 200, with default header values.

OK
*/
type GetMutationExtendedOK struct {
	Payload *models.ModelsMutationExtended
}

// IsSuccess returns true when this get mutation extended o k response has a 2xx status code
func (o *GetMutationExtendedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get mutation extended o k response has a 3xx status code
func (o *GetMutationExtendedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mutation extended o k response has a 4xx status code
func (o *GetMutationExtendedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get mutation extended o k response has a 5xx status code
func (o *GetMutationExtendedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get mutation extended o k response a status code equal to that given
func (o *GetMutationExtendedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get mutation extended o k response
func (o *GetMutationExtendedOK) Code() int {
	return 200
}

func (o *GetMutationExtendedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedOK %s", 200, payload)
}

func (o *GetMutationExtendedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedOK %s", 200, payload)
}

func (o *GetMutationExtendedOK) GetPayload() *models.ModelsMutationExtended {
	return o.Payload
}

func (o *GetMutationExtendedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsMutationExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMutationExtendedBadRequest creates a GetMutationExtendedBadRequest with default headers values
func NewGetMutationExtendedBadRequest() *GetMutationExtendedBadRequest {
	return &GetMutationExtendedBadRequest{}
}

/*
GetMutationExtendedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMutationExtendedBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get mutation extended bad request response has a 2xx status code
func (o *GetMutationExtendedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mutation extended bad request response has a 3xx status code
func (o *GetMutationExtendedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mutation extended bad request response has a 4xx status code
func (o *GetMutationExtendedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mutation extended bad request response has a 5xx status code
func (o *GetMutationExtendedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get mutation extended bad request response a status code equal to that given
func (o *GetMutationExtendedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get mutation extended bad request response
func (o *GetMutationExtendedBadRequest) Code() int {
	return 400
}

func (o *GetMutationExtendedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedBadRequest %s", 400, payload)
}

func (o *GetMutationExtendedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedBadRequest %s", 400, payload)
}

func (o *GetMutationExtendedBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetMutationExtendedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMutationExtendedUnauthorized creates a GetMutationExtendedUnauthorized with default headers values
func NewGetMutationExtendedUnauthorized() *GetMutationExtendedUnauthorized {
	return &GetMutationExtendedUnauthorized{}
}

/*
GetMutationExtendedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMutationExtendedUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get mutation extended unauthorized response has a 2xx status code
func (o *GetMutationExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mutation extended unauthorized response has a 3xx status code
func (o *GetMutationExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mutation extended unauthorized response has a 4xx status code
func (o *GetMutationExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mutation extended unauthorized response has a 5xx status code
func (o *GetMutationExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get mutation extended unauthorized response a status code equal to that given
func (o *GetMutationExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get mutation extended unauthorized response
func (o *GetMutationExtendedUnauthorized) Code() int {
	return 401
}

func (o *GetMutationExtendedUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedUnauthorized %s", 401, payload)
}

func (o *GetMutationExtendedUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedUnauthorized %s", 401, payload)
}

func (o *GetMutationExtendedUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetMutationExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMutationExtendedForbidden creates a GetMutationExtendedForbidden with default headers values
func NewGetMutationExtendedForbidden() *GetMutationExtendedForbidden {
	return &GetMutationExtendedForbidden{}
}

/*
GetMutationExtendedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMutationExtendedForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get mutation extended forbidden response has a 2xx status code
func (o *GetMutationExtendedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mutation extended forbidden response has a 3xx status code
func (o *GetMutationExtendedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mutation extended forbidden response has a 4xx status code
func (o *GetMutationExtendedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mutation extended forbidden response has a 5xx status code
func (o *GetMutationExtendedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get mutation extended forbidden response a status code equal to that given
func (o *GetMutationExtendedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get mutation extended forbidden response
func (o *GetMutationExtendedForbidden) Code() int {
	return 403
}

func (o *GetMutationExtendedForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedForbidden %s", 403, payload)
}

func (o *GetMutationExtendedForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedForbidden %s", 403, payload)
}

func (o *GetMutationExtendedForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetMutationExtendedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMutationExtendedNotFound creates a GetMutationExtendedNotFound with default headers values
func NewGetMutationExtendedNotFound() *GetMutationExtendedNotFound {
	return &GetMutationExtendedNotFound{}
}

/*
GetMutationExtendedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMutationExtendedNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get mutation extended not found response has a 2xx status code
func (o *GetMutationExtendedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mutation extended not found response has a 3xx status code
func (o *GetMutationExtendedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mutation extended not found response has a 4xx status code
func (o *GetMutationExtendedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get mutation extended not found response has a 5xx status code
func (o *GetMutationExtendedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get mutation extended not found response a status code equal to that given
func (o *GetMutationExtendedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get mutation extended not found response
func (o *GetMutationExtendedNotFound) Code() int {
	return 404
}

func (o *GetMutationExtendedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedNotFound %s", 404, payload)
}

func (o *GetMutationExtendedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedNotFound %s", 404, payload)
}

func (o *GetMutationExtendedNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetMutationExtendedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMutationExtendedInternalServerError creates a GetMutationExtendedInternalServerError with default headers values
func NewGetMutationExtendedInternalServerError() *GetMutationExtendedInternalServerError {
	return &GetMutationExtendedInternalServerError{}
}

/*
GetMutationExtendedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetMutationExtendedInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get mutation extended internal server error response has a 2xx status code
func (o *GetMutationExtendedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get mutation extended internal server error response has a 3xx status code
func (o *GetMutationExtendedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get mutation extended internal server error response has a 4xx status code
func (o *GetMutationExtendedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get mutation extended internal server error response has a 5xx status code
func (o *GetMutationExtendedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get mutation extended internal server error response a status code equal to that given
func (o *GetMutationExtendedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get mutation extended internal server error response
func (o *GetMutationExtendedInternalServerError) Code() int {
	return 500
}

func (o *GetMutationExtendedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedInternalServerError %s", 500, payload)
}

func (o *GetMutationExtendedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/mutation/{mutation_id}/extended][%d] getMutationExtendedInternalServerError %s", 500, payload)
}

func (o *GetMutationExtendedInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetMutationExtendedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
