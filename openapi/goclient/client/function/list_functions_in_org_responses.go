// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package function

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListFunctionsInOrgReader is a Reader for the ListFunctionsInOrg structure.
type ListFunctionsInOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFunctionsInOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFunctionsInOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListFunctionsInOrgBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListFunctionsInOrgUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListFunctionsInOrgForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFunctionsInOrgInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /function] ListFunctionsInOrg", response, response.Code())
	}
}

// NewListFunctionsInOrgOK creates a ListFunctionsInOrgOK with default headers values
func NewListFunctionsInOrgOK() *ListFunctionsInOrgOK {
	return &ListFunctionsInOrgOK{}
}

/*
ListFunctionsInOrgOK describes a response with status code 200, with default header values.

OK
*/
type ListFunctionsInOrgOK struct {
	Payload map[string]map[string]models.APIFunctionSignature
}

// IsSuccess returns true when this list functions in org o k response has a 2xx status code
func (o *ListFunctionsInOrgOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list functions in org o k response has a 3xx status code
func (o *ListFunctionsInOrgOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list functions in org o k response has a 4xx status code
func (o *ListFunctionsInOrgOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list functions in org o k response has a 5xx status code
func (o *ListFunctionsInOrgOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list functions in org o k response a status code equal to that given
func (o *ListFunctionsInOrgOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list functions in org o k response
func (o *ListFunctionsInOrgOK) Code() int {
	return 200
}

func (o *ListFunctionsInOrgOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgOK %s", 200, payload)
}

func (o *ListFunctionsInOrgOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgOK %s", 200, payload)
}

func (o *ListFunctionsInOrgOK) GetPayload() map[string]map[string]models.APIFunctionSignature {
	return o.Payload
}

func (o *ListFunctionsInOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFunctionsInOrgBadRequest creates a ListFunctionsInOrgBadRequest with default headers values
func NewListFunctionsInOrgBadRequest() *ListFunctionsInOrgBadRequest {
	return &ListFunctionsInOrgBadRequest{}
}

/*
ListFunctionsInOrgBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListFunctionsInOrgBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list functions in org bad request response has a 2xx status code
func (o *ListFunctionsInOrgBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list functions in org bad request response has a 3xx status code
func (o *ListFunctionsInOrgBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list functions in org bad request response has a 4xx status code
func (o *ListFunctionsInOrgBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list functions in org bad request response has a 5xx status code
func (o *ListFunctionsInOrgBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list functions in org bad request response a status code equal to that given
func (o *ListFunctionsInOrgBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list functions in org bad request response
func (o *ListFunctionsInOrgBadRequest) Code() int {
	return 400
}

func (o *ListFunctionsInOrgBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgBadRequest %s", 400, payload)
}

func (o *ListFunctionsInOrgBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgBadRequest %s", 400, payload)
}

func (o *ListFunctionsInOrgBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListFunctionsInOrgBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFunctionsInOrgUnauthorized creates a ListFunctionsInOrgUnauthorized with default headers values
func NewListFunctionsInOrgUnauthorized() *ListFunctionsInOrgUnauthorized {
	return &ListFunctionsInOrgUnauthorized{}
}

/*
ListFunctionsInOrgUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListFunctionsInOrgUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list functions in org unauthorized response has a 2xx status code
func (o *ListFunctionsInOrgUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list functions in org unauthorized response has a 3xx status code
func (o *ListFunctionsInOrgUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list functions in org unauthorized response has a 4xx status code
func (o *ListFunctionsInOrgUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list functions in org unauthorized response has a 5xx status code
func (o *ListFunctionsInOrgUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list functions in org unauthorized response a status code equal to that given
func (o *ListFunctionsInOrgUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list functions in org unauthorized response
func (o *ListFunctionsInOrgUnauthorized) Code() int {
	return 401
}

func (o *ListFunctionsInOrgUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgUnauthorized %s", 401, payload)
}

func (o *ListFunctionsInOrgUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgUnauthorized %s", 401, payload)
}

func (o *ListFunctionsInOrgUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListFunctionsInOrgUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFunctionsInOrgForbidden creates a ListFunctionsInOrgForbidden with default headers values
func NewListFunctionsInOrgForbidden() *ListFunctionsInOrgForbidden {
	return &ListFunctionsInOrgForbidden{}
}

/*
ListFunctionsInOrgForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListFunctionsInOrgForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list functions in org forbidden response has a 2xx status code
func (o *ListFunctionsInOrgForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list functions in org forbidden response has a 3xx status code
func (o *ListFunctionsInOrgForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list functions in org forbidden response has a 4xx status code
func (o *ListFunctionsInOrgForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list functions in org forbidden response has a 5xx status code
func (o *ListFunctionsInOrgForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list functions in org forbidden response a status code equal to that given
func (o *ListFunctionsInOrgForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list functions in org forbidden response
func (o *ListFunctionsInOrgForbidden) Code() int {
	return 403
}

func (o *ListFunctionsInOrgForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgForbidden %s", 403, payload)
}

func (o *ListFunctionsInOrgForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgForbidden %s", 403, payload)
}

func (o *ListFunctionsInOrgForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListFunctionsInOrgForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFunctionsInOrgInternalServerError creates a ListFunctionsInOrgInternalServerError with default headers values
func NewListFunctionsInOrgInternalServerError() *ListFunctionsInOrgInternalServerError {
	return &ListFunctionsInOrgInternalServerError{}
}

/*
ListFunctionsInOrgInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListFunctionsInOrgInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list functions in org internal server error response has a 2xx status code
func (o *ListFunctionsInOrgInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list functions in org internal server error response has a 3xx status code
func (o *ListFunctionsInOrgInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list functions in org internal server error response has a 4xx status code
func (o *ListFunctionsInOrgInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list functions in org internal server error response has a 5xx status code
func (o *ListFunctionsInOrgInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list functions in org internal server error response a status code equal to that given
func (o *ListFunctionsInOrgInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list functions in org internal server error response
func (o *ListFunctionsInOrgInternalServerError) Code() int {
	return 500
}

func (o *ListFunctionsInOrgInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgInternalServerError %s", 500, payload)
}

func (o *ListFunctionsInOrgInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /function][%d] listFunctionsInOrgInternalServerError %s", 500, payload)
}

func (o *ListFunctionsInOrgInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListFunctionsInOrgInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
