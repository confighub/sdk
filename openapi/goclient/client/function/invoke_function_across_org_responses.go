// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package function

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// InvokeFunctionAcrossOrgReader is a Reader for the InvokeFunctionAcrossOrg structure.
type InvokeFunctionAcrossOrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvokeFunctionAcrossOrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInvokeFunctionAcrossOrgOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInvokeFunctionAcrossOrgBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInvokeFunctionAcrossOrgUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInvokeFunctionAcrossOrgForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvokeFunctionAcrossOrgNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewInvokeFunctionAcrossOrgUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInvokeFunctionAcrossOrgInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /function/invoke] InvokeFunctionAcrossOrg", response, response.Code())
	}
}

// NewInvokeFunctionAcrossOrgOK creates a InvokeFunctionAcrossOrgOK with default headers values
func NewInvokeFunctionAcrossOrgOK() *InvokeFunctionAcrossOrgOK {
	return &InvokeFunctionAcrossOrgOK{}
}

/*
InvokeFunctionAcrossOrgOK describes a response with status code 200, with default header values.

OK
*/
type InvokeFunctionAcrossOrgOK struct {
	Payload []*models.APIFunctionInvocationResponse
}

// IsSuccess returns true when this invoke function across org o k response has a 2xx status code
func (o *InvokeFunctionAcrossOrgOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invoke function across org o k response has a 3xx status code
func (o *InvokeFunctionAcrossOrgOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org o k response has a 4xx status code
func (o *InvokeFunctionAcrossOrgOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoke function across org o k response has a 5xx status code
func (o *InvokeFunctionAcrossOrgOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function across org o k response a status code equal to that given
func (o *InvokeFunctionAcrossOrgOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the invoke function across org o k response
func (o *InvokeFunctionAcrossOrgOK) Code() int {
	return 200
}

func (o *InvokeFunctionAcrossOrgOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgOK %s", 200, payload)
}

func (o *InvokeFunctionAcrossOrgOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgOK %s", 200, payload)
}

func (o *InvokeFunctionAcrossOrgOK) GetPayload() []*models.APIFunctionInvocationResponse {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionAcrossOrgBadRequest creates a InvokeFunctionAcrossOrgBadRequest with default headers values
func NewInvokeFunctionAcrossOrgBadRequest() *InvokeFunctionAcrossOrgBadRequest {
	return &InvokeFunctionAcrossOrgBadRequest{}
}

/*
InvokeFunctionAcrossOrgBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InvokeFunctionAcrossOrgBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function across org bad request response has a 2xx status code
func (o *InvokeFunctionAcrossOrgBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function across org bad request response has a 3xx status code
func (o *InvokeFunctionAcrossOrgBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org bad request response has a 4xx status code
func (o *InvokeFunctionAcrossOrgBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function across org bad request response has a 5xx status code
func (o *InvokeFunctionAcrossOrgBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function across org bad request response a status code equal to that given
func (o *InvokeFunctionAcrossOrgBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the invoke function across org bad request response
func (o *InvokeFunctionAcrossOrgBadRequest) Code() int {
	return 400
}

func (o *InvokeFunctionAcrossOrgBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgBadRequest %s", 400, payload)
}

func (o *InvokeFunctionAcrossOrgBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgBadRequest %s", 400, payload)
}

func (o *InvokeFunctionAcrossOrgBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionAcrossOrgUnauthorized creates a InvokeFunctionAcrossOrgUnauthorized with default headers values
func NewInvokeFunctionAcrossOrgUnauthorized() *InvokeFunctionAcrossOrgUnauthorized {
	return &InvokeFunctionAcrossOrgUnauthorized{}
}

/*
InvokeFunctionAcrossOrgUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InvokeFunctionAcrossOrgUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function across org unauthorized response has a 2xx status code
func (o *InvokeFunctionAcrossOrgUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function across org unauthorized response has a 3xx status code
func (o *InvokeFunctionAcrossOrgUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org unauthorized response has a 4xx status code
func (o *InvokeFunctionAcrossOrgUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function across org unauthorized response has a 5xx status code
func (o *InvokeFunctionAcrossOrgUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function across org unauthorized response a status code equal to that given
func (o *InvokeFunctionAcrossOrgUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the invoke function across org unauthorized response
func (o *InvokeFunctionAcrossOrgUnauthorized) Code() int {
	return 401
}

func (o *InvokeFunctionAcrossOrgUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgUnauthorized %s", 401, payload)
}

func (o *InvokeFunctionAcrossOrgUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgUnauthorized %s", 401, payload)
}

func (o *InvokeFunctionAcrossOrgUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionAcrossOrgForbidden creates a InvokeFunctionAcrossOrgForbidden with default headers values
func NewInvokeFunctionAcrossOrgForbidden() *InvokeFunctionAcrossOrgForbidden {
	return &InvokeFunctionAcrossOrgForbidden{}
}

/*
InvokeFunctionAcrossOrgForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InvokeFunctionAcrossOrgForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function across org forbidden response has a 2xx status code
func (o *InvokeFunctionAcrossOrgForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function across org forbidden response has a 3xx status code
func (o *InvokeFunctionAcrossOrgForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org forbidden response has a 4xx status code
func (o *InvokeFunctionAcrossOrgForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function across org forbidden response has a 5xx status code
func (o *InvokeFunctionAcrossOrgForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function across org forbidden response a status code equal to that given
func (o *InvokeFunctionAcrossOrgForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the invoke function across org forbidden response
func (o *InvokeFunctionAcrossOrgForbidden) Code() int {
	return 403
}

func (o *InvokeFunctionAcrossOrgForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgForbidden %s", 403, payload)
}

func (o *InvokeFunctionAcrossOrgForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgForbidden %s", 403, payload)
}

func (o *InvokeFunctionAcrossOrgForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionAcrossOrgNotFound creates a InvokeFunctionAcrossOrgNotFound with default headers values
func NewInvokeFunctionAcrossOrgNotFound() *InvokeFunctionAcrossOrgNotFound {
	return &InvokeFunctionAcrossOrgNotFound{}
}

/*
InvokeFunctionAcrossOrgNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InvokeFunctionAcrossOrgNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function across org not found response has a 2xx status code
func (o *InvokeFunctionAcrossOrgNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function across org not found response has a 3xx status code
func (o *InvokeFunctionAcrossOrgNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org not found response has a 4xx status code
func (o *InvokeFunctionAcrossOrgNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function across org not found response has a 5xx status code
func (o *InvokeFunctionAcrossOrgNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function across org not found response a status code equal to that given
func (o *InvokeFunctionAcrossOrgNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the invoke function across org not found response
func (o *InvokeFunctionAcrossOrgNotFound) Code() int {
	return 404
}

func (o *InvokeFunctionAcrossOrgNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgNotFound %s", 404, payload)
}

func (o *InvokeFunctionAcrossOrgNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgNotFound %s", 404, payload)
}

func (o *InvokeFunctionAcrossOrgNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionAcrossOrgUnprocessableEntity creates a InvokeFunctionAcrossOrgUnprocessableEntity with default headers values
func NewInvokeFunctionAcrossOrgUnprocessableEntity() *InvokeFunctionAcrossOrgUnprocessableEntity {
	return &InvokeFunctionAcrossOrgUnprocessableEntity{}
}

/*
InvokeFunctionAcrossOrgUnprocessableEntity describes a response with status code 422, with default header values.

Function failure
*/
type InvokeFunctionAcrossOrgUnprocessableEntity struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function across org unprocessable entity response has a 2xx status code
func (o *InvokeFunctionAcrossOrgUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function across org unprocessable entity response has a 3xx status code
func (o *InvokeFunctionAcrossOrgUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org unprocessable entity response has a 4xx status code
func (o *InvokeFunctionAcrossOrgUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function across org unprocessable entity response has a 5xx status code
func (o *InvokeFunctionAcrossOrgUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function across org unprocessable entity response a status code equal to that given
func (o *InvokeFunctionAcrossOrgUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the invoke function across org unprocessable entity response
func (o *InvokeFunctionAcrossOrgUnprocessableEntity) Code() int {
	return 422
}

func (o *InvokeFunctionAcrossOrgUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgUnprocessableEntity %s", 422, payload)
}

func (o *InvokeFunctionAcrossOrgUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgUnprocessableEntity %s", 422, payload)
}

func (o *InvokeFunctionAcrossOrgUnprocessableEntity) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionAcrossOrgInternalServerError creates a InvokeFunctionAcrossOrgInternalServerError with default headers values
func NewInvokeFunctionAcrossOrgInternalServerError() *InvokeFunctionAcrossOrgInternalServerError {
	return &InvokeFunctionAcrossOrgInternalServerError{}
}

/*
InvokeFunctionAcrossOrgInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InvokeFunctionAcrossOrgInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function across org internal server error response has a 2xx status code
func (o *InvokeFunctionAcrossOrgInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function across org internal server error response has a 3xx status code
func (o *InvokeFunctionAcrossOrgInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function across org internal server error response has a 4xx status code
func (o *InvokeFunctionAcrossOrgInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoke function across org internal server error response has a 5xx status code
func (o *InvokeFunctionAcrossOrgInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this invoke function across org internal server error response a status code equal to that given
func (o *InvokeFunctionAcrossOrgInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the invoke function across org internal server error response
func (o *InvokeFunctionAcrossOrgInternalServerError) Code() int {
	return 500
}

func (o *InvokeFunctionAcrossOrgInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgInternalServerError %s", 500, payload)
}

func (o *InvokeFunctionAcrossOrgInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /function/invoke][%d] invokeFunctionAcrossOrgInternalServerError %s", 500, payload)
}

func (o *InvokeFunctionAcrossOrgInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionAcrossOrgInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
