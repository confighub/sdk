// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package function

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// InvokeFunctionReader is a Reader for the InvokeFunction structure.
type InvokeFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvokeFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInvokeFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInvokeFunctionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInvokeFunctionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInvokeFunctionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvokeFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewInvokeFunctionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInvokeFunctionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /space/{space_id}/function/invoke] InvokeFunction", response, response.Code())
	}
}

// NewInvokeFunctionOK creates a InvokeFunctionOK with default headers values
func NewInvokeFunctionOK() *InvokeFunctionOK {
	return &InvokeFunctionOK{}
}

/*
InvokeFunctionOK describes a response with status code 200, with default header values.

OK
*/
type InvokeFunctionOK struct {
	Payload []*models.APIFunctionInvocationResponse
}

// IsSuccess returns true when this invoke function o k response has a 2xx status code
func (o *InvokeFunctionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invoke function o k response has a 3xx status code
func (o *InvokeFunctionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function o k response has a 4xx status code
func (o *InvokeFunctionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoke function o k response has a 5xx status code
func (o *InvokeFunctionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function o k response a status code equal to that given
func (o *InvokeFunctionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the invoke function o k response
func (o *InvokeFunctionOK) Code() int {
	return 200
}

func (o *InvokeFunctionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionOK %s", 200, payload)
}

func (o *InvokeFunctionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionOK %s", 200, payload)
}

func (o *InvokeFunctionOK) GetPayload() []*models.APIFunctionInvocationResponse {
	return o.Payload
}

func (o *InvokeFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionBadRequest creates a InvokeFunctionBadRequest with default headers values
func NewInvokeFunctionBadRequest() *InvokeFunctionBadRequest {
	return &InvokeFunctionBadRequest{}
}

/*
InvokeFunctionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InvokeFunctionBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function bad request response has a 2xx status code
func (o *InvokeFunctionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function bad request response has a 3xx status code
func (o *InvokeFunctionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function bad request response has a 4xx status code
func (o *InvokeFunctionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function bad request response has a 5xx status code
func (o *InvokeFunctionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function bad request response a status code equal to that given
func (o *InvokeFunctionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the invoke function bad request response
func (o *InvokeFunctionBadRequest) Code() int {
	return 400
}

func (o *InvokeFunctionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionBadRequest %s", 400, payload)
}

func (o *InvokeFunctionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionBadRequest %s", 400, payload)
}

func (o *InvokeFunctionBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionUnauthorized creates a InvokeFunctionUnauthorized with default headers values
func NewInvokeFunctionUnauthorized() *InvokeFunctionUnauthorized {
	return &InvokeFunctionUnauthorized{}
}

/*
InvokeFunctionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InvokeFunctionUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function unauthorized response has a 2xx status code
func (o *InvokeFunctionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function unauthorized response has a 3xx status code
func (o *InvokeFunctionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function unauthorized response has a 4xx status code
func (o *InvokeFunctionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function unauthorized response has a 5xx status code
func (o *InvokeFunctionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function unauthorized response a status code equal to that given
func (o *InvokeFunctionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the invoke function unauthorized response
func (o *InvokeFunctionUnauthorized) Code() int {
	return 401
}

func (o *InvokeFunctionUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionUnauthorized %s", 401, payload)
}

func (o *InvokeFunctionUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionUnauthorized %s", 401, payload)
}

func (o *InvokeFunctionUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionForbidden creates a InvokeFunctionForbidden with default headers values
func NewInvokeFunctionForbidden() *InvokeFunctionForbidden {
	return &InvokeFunctionForbidden{}
}

/*
InvokeFunctionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InvokeFunctionForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function forbidden response has a 2xx status code
func (o *InvokeFunctionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function forbidden response has a 3xx status code
func (o *InvokeFunctionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function forbidden response has a 4xx status code
func (o *InvokeFunctionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function forbidden response has a 5xx status code
func (o *InvokeFunctionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function forbidden response a status code equal to that given
func (o *InvokeFunctionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the invoke function forbidden response
func (o *InvokeFunctionForbidden) Code() int {
	return 403
}

func (o *InvokeFunctionForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionForbidden %s", 403, payload)
}

func (o *InvokeFunctionForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionForbidden %s", 403, payload)
}

func (o *InvokeFunctionForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionNotFound creates a InvokeFunctionNotFound with default headers values
func NewInvokeFunctionNotFound() *InvokeFunctionNotFound {
	return &InvokeFunctionNotFound{}
}

/*
InvokeFunctionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InvokeFunctionNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function not found response has a 2xx status code
func (o *InvokeFunctionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function not found response has a 3xx status code
func (o *InvokeFunctionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function not found response has a 4xx status code
func (o *InvokeFunctionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function not found response has a 5xx status code
func (o *InvokeFunctionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function not found response a status code equal to that given
func (o *InvokeFunctionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the invoke function not found response
func (o *InvokeFunctionNotFound) Code() int {
	return 404
}

func (o *InvokeFunctionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionNotFound %s", 404, payload)
}

func (o *InvokeFunctionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionNotFound %s", 404, payload)
}

func (o *InvokeFunctionNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionUnprocessableEntity creates a InvokeFunctionUnprocessableEntity with default headers values
func NewInvokeFunctionUnprocessableEntity() *InvokeFunctionUnprocessableEntity {
	return &InvokeFunctionUnprocessableEntity{}
}

/*
InvokeFunctionUnprocessableEntity describes a response with status code 422, with default header values.

Function failure
*/
type InvokeFunctionUnprocessableEntity struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function unprocessable entity response has a 2xx status code
func (o *InvokeFunctionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function unprocessable entity response has a 3xx status code
func (o *InvokeFunctionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function unprocessable entity response has a 4xx status code
func (o *InvokeFunctionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoke function unprocessable entity response has a 5xx status code
func (o *InvokeFunctionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this invoke function unprocessable entity response a status code equal to that given
func (o *InvokeFunctionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the invoke function unprocessable entity response
func (o *InvokeFunctionUnprocessableEntity) Code() int {
	return 422
}

func (o *InvokeFunctionUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionUnprocessableEntity %s", 422, payload)
}

func (o *InvokeFunctionUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionUnprocessableEntity %s", 422, payload)
}

func (o *InvokeFunctionUnprocessableEntity) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvokeFunctionInternalServerError creates a InvokeFunctionInternalServerError with default headers values
func NewInvokeFunctionInternalServerError() *InvokeFunctionInternalServerError {
	return &InvokeFunctionInternalServerError{}
}

/*
InvokeFunctionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InvokeFunctionInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this invoke function internal server error response has a 2xx status code
func (o *InvokeFunctionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoke function internal server error response has a 3xx status code
func (o *InvokeFunctionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoke function internal server error response has a 4xx status code
func (o *InvokeFunctionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoke function internal server error response has a 5xx status code
func (o *InvokeFunctionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this invoke function internal server error response a status code equal to that given
func (o *InvokeFunctionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the invoke function internal server error response
func (o *InvokeFunctionInternalServerError) Code() int {
	return 500
}

func (o *InvokeFunctionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionInternalServerError %s", 500, payload)
}

func (o *InvokeFunctionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/function/invoke][%d] invokeFunctionInternalServerError %s", 500, payload)
}

func (o *InvokeFunctionInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *InvokeFunctionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
