// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListLinksReader is a Reader for the ListLinks structure.
type ListLinksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLinksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListLinksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListLinksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListLinksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListLinksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListLinksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/link] ListLinks", response, response.Code())
	}
}

// NewListLinksOK creates a ListLinksOK with default headers values
func NewListLinksOK() *ListLinksOK {
	return &ListLinksOK{}
}

/*
ListLinksOK describes a response with status code 200, with default header values.

OK
*/
type ListLinksOK struct {
	Payload []*models.ModelsLink
}

// IsSuccess returns true when this list links o k response has a 2xx status code
func (o *ListLinksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list links o k response has a 3xx status code
func (o *ListLinksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list links o k response has a 4xx status code
func (o *ListLinksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list links o k response has a 5xx status code
func (o *ListLinksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list links o k response a status code equal to that given
func (o *ListLinksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list links o k response
func (o *ListLinksOK) Code() int {
	return 200
}

func (o *ListLinksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksOK %s", 200, payload)
}

func (o *ListLinksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksOK %s", 200, payload)
}

func (o *ListLinksOK) GetPayload() []*models.ModelsLink {
	return o.Payload
}

func (o *ListLinksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLinksBadRequest creates a ListLinksBadRequest with default headers values
func NewListLinksBadRequest() *ListLinksBadRequest {
	return &ListLinksBadRequest{}
}

/*
ListLinksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListLinksBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list links bad request response has a 2xx status code
func (o *ListLinksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list links bad request response has a 3xx status code
func (o *ListLinksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list links bad request response has a 4xx status code
func (o *ListLinksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list links bad request response has a 5xx status code
func (o *ListLinksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list links bad request response a status code equal to that given
func (o *ListLinksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list links bad request response
func (o *ListLinksBadRequest) Code() int {
	return 400
}

func (o *ListLinksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksBadRequest %s", 400, payload)
}

func (o *ListLinksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksBadRequest %s", 400, payload)
}

func (o *ListLinksBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListLinksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLinksUnauthorized creates a ListLinksUnauthorized with default headers values
func NewListLinksUnauthorized() *ListLinksUnauthorized {
	return &ListLinksUnauthorized{}
}

/*
ListLinksUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListLinksUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list links unauthorized response has a 2xx status code
func (o *ListLinksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list links unauthorized response has a 3xx status code
func (o *ListLinksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list links unauthorized response has a 4xx status code
func (o *ListLinksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list links unauthorized response has a 5xx status code
func (o *ListLinksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list links unauthorized response a status code equal to that given
func (o *ListLinksUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list links unauthorized response
func (o *ListLinksUnauthorized) Code() int {
	return 401
}

func (o *ListLinksUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksUnauthorized %s", 401, payload)
}

func (o *ListLinksUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksUnauthorized %s", 401, payload)
}

func (o *ListLinksUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListLinksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLinksForbidden creates a ListLinksForbidden with default headers values
func NewListLinksForbidden() *ListLinksForbidden {
	return &ListLinksForbidden{}
}

/*
ListLinksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListLinksForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list links forbidden response has a 2xx status code
func (o *ListLinksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list links forbidden response has a 3xx status code
func (o *ListLinksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list links forbidden response has a 4xx status code
func (o *ListLinksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list links forbidden response has a 5xx status code
func (o *ListLinksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list links forbidden response a status code equal to that given
func (o *ListLinksForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list links forbidden response
func (o *ListLinksForbidden) Code() int {
	return 403
}

func (o *ListLinksForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksForbidden %s", 403, payload)
}

func (o *ListLinksForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksForbidden %s", 403, payload)
}

func (o *ListLinksForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListLinksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLinksInternalServerError creates a ListLinksInternalServerError with default headers values
func NewListLinksInternalServerError() *ListLinksInternalServerError {
	return &ListLinksInternalServerError{}
}

/*
ListLinksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListLinksInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list links internal server error response has a 2xx status code
func (o *ListLinksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list links internal server error response has a 3xx status code
func (o *ListLinksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list links internal server error response has a 4xx status code
func (o *ListLinksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list links internal server error response has a 5xx status code
func (o *ListLinksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list links internal server error response a status code equal to that given
func (o *ListLinksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list links internal server error response
func (o *ListLinksInternalServerError) Code() int {
	return 500
}

func (o *ListLinksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksInternalServerError %s", 500, payload)
}

func (o *ListLinksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link][%d] listLinksInternalServerError %s", 500, payload)
}

func (o *ListLinksInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListLinksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
