// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetLinkExtendedReader is a Reader for the GetLinkExtended structure.
type GetLinkExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLinkExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLinkExtendedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLinkExtendedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLinkExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLinkExtendedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLinkExtendedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLinkExtendedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/link/{link_id}/extended] GetLinkExtended", response, response.Code())
	}
}

// NewGetLinkExtendedOK creates a GetLinkExtendedOK with default headers values
func NewGetLinkExtendedOK() *GetLinkExtendedOK {
	return &GetLinkExtendedOK{}
}

/*
GetLinkExtendedOK describes a response with status code 200, with default header values.

OK
*/
type GetLinkExtendedOK struct {
	Payload *models.ModelsLinkExtended
}

// IsSuccess returns true when this get link extended o k response has a 2xx status code
func (o *GetLinkExtendedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get link extended o k response has a 3xx status code
func (o *GetLinkExtendedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link extended o k response has a 4xx status code
func (o *GetLinkExtendedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get link extended o k response has a 5xx status code
func (o *GetLinkExtendedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get link extended o k response a status code equal to that given
func (o *GetLinkExtendedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get link extended o k response
func (o *GetLinkExtendedOK) Code() int {
	return 200
}

func (o *GetLinkExtendedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedOK %s", 200, payload)
}

func (o *GetLinkExtendedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedOK %s", 200, payload)
}

func (o *GetLinkExtendedOK) GetPayload() *models.ModelsLinkExtended {
	return o.Payload
}

func (o *GetLinkExtendedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsLinkExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkExtendedBadRequest creates a GetLinkExtendedBadRequest with default headers values
func NewGetLinkExtendedBadRequest() *GetLinkExtendedBadRequest {
	return &GetLinkExtendedBadRequest{}
}

/*
GetLinkExtendedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLinkExtendedBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link extended bad request response has a 2xx status code
func (o *GetLinkExtendedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link extended bad request response has a 3xx status code
func (o *GetLinkExtendedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link extended bad request response has a 4xx status code
func (o *GetLinkExtendedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link extended bad request response has a 5xx status code
func (o *GetLinkExtendedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get link extended bad request response a status code equal to that given
func (o *GetLinkExtendedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get link extended bad request response
func (o *GetLinkExtendedBadRequest) Code() int {
	return 400
}

func (o *GetLinkExtendedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedBadRequest %s", 400, payload)
}

func (o *GetLinkExtendedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedBadRequest %s", 400, payload)
}

func (o *GetLinkExtendedBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkExtendedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkExtendedUnauthorized creates a GetLinkExtendedUnauthorized with default headers values
func NewGetLinkExtendedUnauthorized() *GetLinkExtendedUnauthorized {
	return &GetLinkExtendedUnauthorized{}
}

/*
GetLinkExtendedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLinkExtendedUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link extended unauthorized response has a 2xx status code
func (o *GetLinkExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link extended unauthorized response has a 3xx status code
func (o *GetLinkExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link extended unauthorized response has a 4xx status code
func (o *GetLinkExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link extended unauthorized response has a 5xx status code
func (o *GetLinkExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get link extended unauthorized response a status code equal to that given
func (o *GetLinkExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get link extended unauthorized response
func (o *GetLinkExtendedUnauthorized) Code() int {
	return 401
}

func (o *GetLinkExtendedUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedUnauthorized %s", 401, payload)
}

func (o *GetLinkExtendedUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedUnauthorized %s", 401, payload)
}

func (o *GetLinkExtendedUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkExtendedForbidden creates a GetLinkExtendedForbidden with default headers values
func NewGetLinkExtendedForbidden() *GetLinkExtendedForbidden {
	return &GetLinkExtendedForbidden{}
}

/*
GetLinkExtendedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLinkExtendedForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link extended forbidden response has a 2xx status code
func (o *GetLinkExtendedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link extended forbidden response has a 3xx status code
func (o *GetLinkExtendedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link extended forbidden response has a 4xx status code
func (o *GetLinkExtendedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link extended forbidden response has a 5xx status code
func (o *GetLinkExtendedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get link extended forbidden response a status code equal to that given
func (o *GetLinkExtendedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get link extended forbidden response
func (o *GetLinkExtendedForbidden) Code() int {
	return 403
}

func (o *GetLinkExtendedForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedForbidden %s", 403, payload)
}

func (o *GetLinkExtendedForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedForbidden %s", 403, payload)
}

func (o *GetLinkExtendedForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkExtendedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkExtendedNotFound creates a GetLinkExtendedNotFound with default headers values
func NewGetLinkExtendedNotFound() *GetLinkExtendedNotFound {
	return &GetLinkExtendedNotFound{}
}

/*
GetLinkExtendedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLinkExtendedNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link extended not found response has a 2xx status code
func (o *GetLinkExtendedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link extended not found response has a 3xx status code
func (o *GetLinkExtendedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link extended not found response has a 4xx status code
func (o *GetLinkExtendedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link extended not found response has a 5xx status code
func (o *GetLinkExtendedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get link extended not found response a status code equal to that given
func (o *GetLinkExtendedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get link extended not found response
func (o *GetLinkExtendedNotFound) Code() int {
	return 404
}

func (o *GetLinkExtendedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedNotFound %s", 404, payload)
}

func (o *GetLinkExtendedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedNotFound %s", 404, payload)
}

func (o *GetLinkExtendedNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkExtendedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkExtendedInternalServerError creates a GetLinkExtendedInternalServerError with default headers values
func NewGetLinkExtendedInternalServerError() *GetLinkExtendedInternalServerError {
	return &GetLinkExtendedInternalServerError{}
}

/*
GetLinkExtendedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLinkExtendedInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link extended internal server error response has a 2xx status code
func (o *GetLinkExtendedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link extended internal server error response has a 3xx status code
func (o *GetLinkExtendedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link extended internal server error response has a 4xx status code
func (o *GetLinkExtendedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get link extended internal server error response has a 5xx status code
func (o *GetLinkExtendedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get link extended internal server error response a status code equal to that given
func (o *GetLinkExtendedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get link extended internal server error response
func (o *GetLinkExtendedInternalServerError) Code() int {
	return 500
}

func (o *GetLinkExtendedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedInternalServerError %s", 500, payload)
}

func (o *GetLinkExtendedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}/extended][%d] getLinkExtendedInternalServerError %s", 500, payload)
}

func (o *GetLinkExtendedInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkExtendedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
