// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetLinkReader is a Reader for the GetLink structure.
type GetLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/link/{link_id}] GetLink", response, response.Code())
	}
}

// NewGetLinkOK creates a GetLinkOK with default headers values
func NewGetLinkOK() *GetLinkOK {
	return &GetLinkOK{}
}

/*
GetLinkOK describes a response with status code 200, with default header values.

OK
*/
type GetLinkOK struct {
	Payload *models.ModelsLink
}

// IsSuccess returns true when this get link o k response has a 2xx status code
func (o *GetLinkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get link o k response has a 3xx status code
func (o *GetLinkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link o k response has a 4xx status code
func (o *GetLinkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get link o k response has a 5xx status code
func (o *GetLinkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get link o k response a status code equal to that given
func (o *GetLinkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get link o k response
func (o *GetLinkOK) Code() int {
	return 200
}

func (o *GetLinkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkOK %s", 200, payload)
}

func (o *GetLinkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkOK %s", 200, payload)
}

func (o *GetLinkOK) GetPayload() *models.ModelsLink {
	return o.Payload
}

func (o *GetLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsLink)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkBadRequest creates a GetLinkBadRequest with default headers values
func NewGetLinkBadRequest() *GetLinkBadRequest {
	return &GetLinkBadRequest{}
}

/*
GetLinkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLinkBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link bad request response has a 2xx status code
func (o *GetLinkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link bad request response has a 3xx status code
func (o *GetLinkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link bad request response has a 4xx status code
func (o *GetLinkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link bad request response has a 5xx status code
func (o *GetLinkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get link bad request response a status code equal to that given
func (o *GetLinkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get link bad request response
func (o *GetLinkBadRequest) Code() int {
	return 400
}

func (o *GetLinkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkBadRequest %s", 400, payload)
}

func (o *GetLinkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkBadRequest %s", 400, payload)
}

func (o *GetLinkBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkUnauthorized creates a GetLinkUnauthorized with default headers values
func NewGetLinkUnauthorized() *GetLinkUnauthorized {
	return &GetLinkUnauthorized{}
}

/*
GetLinkUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLinkUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link unauthorized response has a 2xx status code
func (o *GetLinkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link unauthorized response has a 3xx status code
func (o *GetLinkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link unauthorized response has a 4xx status code
func (o *GetLinkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link unauthorized response has a 5xx status code
func (o *GetLinkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get link unauthorized response a status code equal to that given
func (o *GetLinkUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get link unauthorized response
func (o *GetLinkUnauthorized) Code() int {
	return 401
}

func (o *GetLinkUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkUnauthorized %s", 401, payload)
}

func (o *GetLinkUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkUnauthorized %s", 401, payload)
}

func (o *GetLinkUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkForbidden creates a GetLinkForbidden with default headers values
func NewGetLinkForbidden() *GetLinkForbidden {
	return &GetLinkForbidden{}
}

/*
GetLinkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLinkForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link forbidden response has a 2xx status code
func (o *GetLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link forbidden response has a 3xx status code
func (o *GetLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link forbidden response has a 4xx status code
func (o *GetLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link forbidden response has a 5xx status code
func (o *GetLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get link forbidden response a status code equal to that given
func (o *GetLinkForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get link forbidden response
func (o *GetLinkForbidden) Code() int {
	return 403
}

func (o *GetLinkForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkForbidden %s", 403, payload)
}

func (o *GetLinkForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkForbidden %s", 403, payload)
}

func (o *GetLinkForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkNotFound creates a GetLinkNotFound with default headers values
func NewGetLinkNotFound() *GetLinkNotFound {
	return &GetLinkNotFound{}
}

/*
GetLinkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLinkNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link not found response has a 2xx status code
func (o *GetLinkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link not found response has a 3xx status code
func (o *GetLinkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link not found response has a 4xx status code
func (o *GetLinkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get link not found response has a 5xx status code
func (o *GetLinkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get link not found response a status code equal to that given
func (o *GetLinkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get link not found response
func (o *GetLinkNotFound) Code() int {
	return 404
}

func (o *GetLinkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkNotFound %s", 404, payload)
}

func (o *GetLinkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkNotFound %s", 404, payload)
}

func (o *GetLinkNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkInternalServerError creates a GetLinkInternalServerError with default headers values
func NewGetLinkInternalServerError() *GetLinkInternalServerError {
	return &GetLinkInternalServerError{}
}

/*
GetLinkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLinkInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get link internal server error response has a 2xx status code
func (o *GetLinkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get link internal server error response has a 3xx status code
func (o *GetLinkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get link internal server error response has a 4xx status code
func (o *GetLinkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get link internal server error response has a 5xx status code
func (o *GetLinkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get link internal server error response a status code equal to that given
func (o *GetLinkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get link internal server error response
func (o *GetLinkInternalServerError) Code() int {
	return 500
}

func (o *GetLinkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkInternalServerError %s", 500, payload)
}

func (o *GetLinkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/link/{link_id}][%d] getLinkInternalServerError %s", 500, payload)
}

func (o *GetLinkInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
