// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package link

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// CreateLinkReader is a Reader for the CreateLink structure.
type CreateLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /space/{space_id}/link] CreateLink", response, response.Code())
	}
}

// NewCreateLinkOK creates a CreateLinkOK with default headers values
func NewCreateLinkOK() *CreateLinkOK {
	return &CreateLinkOK{}
}

/*
CreateLinkOK describes a response with status code 200, with default header values.

OK
*/
type CreateLinkOK struct {
	Payload *models.ModelsLink
}

// IsSuccess returns true when this create link o k response has a 2xx status code
func (o *CreateLinkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create link o k response has a 3xx status code
func (o *CreateLinkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create link o k response has a 4xx status code
func (o *CreateLinkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create link o k response has a 5xx status code
func (o *CreateLinkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create link o k response a status code equal to that given
func (o *CreateLinkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create link o k response
func (o *CreateLinkOK) Code() int {
	return 200
}

func (o *CreateLinkOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkOK %s", 200, payload)
}

func (o *CreateLinkOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkOK %s", 200, payload)
}

func (o *CreateLinkOK) GetPayload() *models.ModelsLink {
	return o.Payload
}

func (o *CreateLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsLink)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLinkBadRequest creates a CreateLinkBadRequest with default headers values
func NewCreateLinkBadRequest() *CreateLinkBadRequest {
	return &CreateLinkBadRequest{}
}

/*
CreateLinkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateLinkBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create link bad request response has a 2xx status code
func (o *CreateLinkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create link bad request response has a 3xx status code
func (o *CreateLinkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create link bad request response has a 4xx status code
func (o *CreateLinkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create link bad request response has a 5xx status code
func (o *CreateLinkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create link bad request response a status code equal to that given
func (o *CreateLinkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create link bad request response
func (o *CreateLinkBadRequest) Code() int {
	return 400
}

func (o *CreateLinkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkBadRequest %s", 400, payload)
}

func (o *CreateLinkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkBadRequest %s", 400, payload)
}

func (o *CreateLinkBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLinkUnauthorized creates a CreateLinkUnauthorized with default headers values
func NewCreateLinkUnauthorized() *CreateLinkUnauthorized {
	return &CreateLinkUnauthorized{}
}

/*
CreateLinkUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateLinkUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create link unauthorized response has a 2xx status code
func (o *CreateLinkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create link unauthorized response has a 3xx status code
func (o *CreateLinkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create link unauthorized response has a 4xx status code
func (o *CreateLinkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create link unauthorized response has a 5xx status code
func (o *CreateLinkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create link unauthorized response a status code equal to that given
func (o *CreateLinkUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create link unauthorized response
func (o *CreateLinkUnauthorized) Code() int {
	return 401
}

func (o *CreateLinkUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkUnauthorized %s", 401, payload)
}

func (o *CreateLinkUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkUnauthorized %s", 401, payload)
}

func (o *CreateLinkUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLinkForbidden creates a CreateLinkForbidden with default headers values
func NewCreateLinkForbidden() *CreateLinkForbidden {
	return &CreateLinkForbidden{}
}

/*
CreateLinkForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateLinkForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create link forbidden response has a 2xx status code
func (o *CreateLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create link forbidden response has a 3xx status code
func (o *CreateLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create link forbidden response has a 4xx status code
func (o *CreateLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create link forbidden response has a 5xx status code
func (o *CreateLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create link forbidden response a status code equal to that given
func (o *CreateLinkForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create link forbidden response
func (o *CreateLinkForbidden) Code() int {
	return 403
}

func (o *CreateLinkForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkForbidden %s", 403, payload)
}

func (o *CreateLinkForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkForbidden %s", 403, payload)
}

func (o *CreateLinkForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLinkInternalServerError creates a CreateLinkInternalServerError with default headers values
func NewCreateLinkInternalServerError() *CreateLinkInternalServerError {
	return &CreateLinkInternalServerError{}
}

/*
CreateLinkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateLinkInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create link internal server error response has a 2xx status code
func (o *CreateLinkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create link internal server error response has a 3xx status code
func (o *CreateLinkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create link internal server error response has a 4xx status code
func (o *CreateLinkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create link internal server error response has a 5xx status code
func (o *CreateLinkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create link internal server error response a status code equal to that given
func (o *CreateLinkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create link internal server error response
func (o *CreateLinkInternalServerError) Code() int {
	return 500
}

func (o *CreateLinkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkInternalServerError %s", 500, payload)
}

func (o *CreateLinkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/link][%d] createLinkInternalServerError %s", 500, payload)
}

func (o *CreateLinkInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
