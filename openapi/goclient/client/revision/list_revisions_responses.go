// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package revision

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListRevisionsReader is a Reader for the ListRevisions structure.
type ListRevisionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRevisionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRevisionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListRevisionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListRevisionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListRevisionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListRevisionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}/revision] ListRevisions", response, response.Code())
	}
}

// NewListRevisionsOK creates a ListRevisionsOK with default headers values
func NewListRevisionsOK() *ListRevisionsOK {
	return &ListRevisionsOK{}
}

/*
ListRevisionsOK describes a response with status code 200, with default header values.

OK
*/
type ListRevisionsOK struct {
	Payload []*models.ModelsExtendedRevision
}

// IsSuccess returns true when this list revisions o k response has a 2xx status code
func (o *ListRevisionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list revisions o k response has a 3xx status code
func (o *ListRevisionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list revisions o k response has a 4xx status code
func (o *ListRevisionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list revisions o k response has a 5xx status code
func (o *ListRevisionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list revisions o k response a status code equal to that given
func (o *ListRevisionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list revisions o k response
func (o *ListRevisionsOK) Code() int {
	return 200
}

func (o *ListRevisionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsOK %s", 200, payload)
}

func (o *ListRevisionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsOK %s", 200, payload)
}

func (o *ListRevisionsOK) GetPayload() []*models.ModelsExtendedRevision {
	return o.Payload
}

func (o *ListRevisionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRevisionsBadRequest creates a ListRevisionsBadRequest with default headers values
func NewListRevisionsBadRequest() *ListRevisionsBadRequest {
	return &ListRevisionsBadRequest{}
}

/*
ListRevisionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListRevisionsBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list revisions bad request response has a 2xx status code
func (o *ListRevisionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list revisions bad request response has a 3xx status code
func (o *ListRevisionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list revisions bad request response has a 4xx status code
func (o *ListRevisionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list revisions bad request response has a 5xx status code
func (o *ListRevisionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list revisions bad request response a status code equal to that given
func (o *ListRevisionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list revisions bad request response
func (o *ListRevisionsBadRequest) Code() int {
	return 400
}

func (o *ListRevisionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsBadRequest %s", 400, payload)
}

func (o *ListRevisionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsBadRequest %s", 400, payload)
}

func (o *ListRevisionsBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListRevisionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRevisionsUnauthorized creates a ListRevisionsUnauthorized with default headers values
func NewListRevisionsUnauthorized() *ListRevisionsUnauthorized {
	return &ListRevisionsUnauthorized{}
}

/*
ListRevisionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListRevisionsUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list revisions unauthorized response has a 2xx status code
func (o *ListRevisionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list revisions unauthorized response has a 3xx status code
func (o *ListRevisionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list revisions unauthorized response has a 4xx status code
func (o *ListRevisionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list revisions unauthorized response has a 5xx status code
func (o *ListRevisionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list revisions unauthorized response a status code equal to that given
func (o *ListRevisionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list revisions unauthorized response
func (o *ListRevisionsUnauthorized) Code() int {
	return 401
}

func (o *ListRevisionsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsUnauthorized %s", 401, payload)
}

func (o *ListRevisionsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsUnauthorized %s", 401, payload)
}

func (o *ListRevisionsUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListRevisionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRevisionsForbidden creates a ListRevisionsForbidden with default headers values
func NewListRevisionsForbidden() *ListRevisionsForbidden {
	return &ListRevisionsForbidden{}
}

/*
ListRevisionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListRevisionsForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list revisions forbidden response has a 2xx status code
func (o *ListRevisionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list revisions forbidden response has a 3xx status code
func (o *ListRevisionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list revisions forbidden response has a 4xx status code
func (o *ListRevisionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list revisions forbidden response has a 5xx status code
func (o *ListRevisionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list revisions forbidden response a status code equal to that given
func (o *ListRevisionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list revisions forbidden response
func (o *ListRevisionsForbidden) Code() int {
	return 403
}

func (o *ListRevisionsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsForbidden %s", 403, payload)
}

func (o *ListRevisionsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsForbidden %s", 403, payload)
}

func (o *ListRevisionsForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListRevisionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRevisionsInternalServerError creates a ListRevisionsInternalServerError with default headers values
func NewListRevisionsInternalServerError() *ListRevisionsInternalServerError {
	return &ListRevisionsInternalServerError{}
}

/*
ListRevisionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListRevisionsInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list revisions internal server error response has a 2xx status code
func (o *ListRevisionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list revisions internal server error response has a 3xx status code
func (o *ListRevisionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list revisions internal server error response has a 4xx status code
func (o *ListRevisionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list revisions internal server error response has a 5xx status code
func (o *ListRevisionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list revisions internal server error response a status code equal to that given
func (o *ListRevisionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list revisions internal server error response
func (o *ListRevisionsInternalServerError) Code() int {
	return 500
}

func (o *ListRevisionsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsInternalServerError %s", 500, payload)
}

func (o *ListRevisionsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/revision][%d] listRevisionsInternalServerError %s", 500, payload)
}

func (o *ListRevisionsInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListRevisionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
