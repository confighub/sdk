// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package revision

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRevisionParams creates a new GetRevisionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRevisionParams() *GetRevisionParams {
	return &GetRevisionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRevisionParamsWithTimeout creates a new GetRevisionParams object
// with the ability to set a timeout on a request.
func NewGetRevisionParamsWithTimeout(timeout time.Duration) *GetRevisionParams {
	return &GetRevisionParams{
		timeout: timeout,
	}
}

// NewGetRevisionParamsWithContext creates a new GetRevisionParams object
// with the ability to set a context for a request.
func NewGetRevisionParamsWithContext(ctx context.Context) *GetRevisionParams {
	return &GetRevisionParams{
		Context: ctx,
	}
}

// NewGetRevisionParamsWithHTTPClient creates a new GetRevisionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRevisionParamsWithHTTPClient(client *http.Client) *GetRevisionParams {
	return &GetRevisionParams{
		HTTPClient: client,
	}
}

/*
GetRevisionParams contains all the parameters to send to the API endpoint

	for the get revision operation.

	Typically these are written to a http.Request.
*/
type GetRevisionParams struct {

	/* Include.

	   include filter: The specified string is an expression for the purpose of expanding the related entities of the list of Units returned. The attribute names are case-sensitive and PascalCase, as in the JSON encoding. Supported attributes for Unit are `OrganizationID`, `SpaceID`, `UnitID`, and `UserID` . The whole string must be query-encoded and in comma-separated list format.
	*/
	Include *string

	/* RevisionID.

	   Revision ID
	*/
	RevisionID string

	/* SpaceID.

	   Space ID
	*/
	SpaceID string

	/* UnitID.

	   Unit ID
	*/
	UnitID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get revision params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRevisionParams) WithDefaults() *GetRevisionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get revision params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRevisionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get revision params
func (o *GetRevisionParams) WithTimeout(timeout time.Duration) *GetRevisionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get revision params
func (o *GetRevisionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get revision params
func (o *GetRevisionParams) WithContext(ctx context.Context) *GetRevisionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get revision params
func (o *GetRevisionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get revision params
func (o *GetRevisionParams) WithHTTPClient(client *http.Client) *GetRevisionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get revision params
func (o *GetRevisionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInclude adds the include to the get revision params
func (o *GetRevisionParams) WithInclude(include *string) *GetRevisionParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get revision params
func (o *GetRevisionParams) SetInclude(include *string) {
	o.Include = include
}

// WithRevisionID adds the revisionID to the get revision params
func (o *GetRevisionParams) WithRevisionID(revisionID string) *GetRevisionParams {
	o.SetRevisionID(revisionID)
	return o
}

// SetRevisionID adds the revisionId to the get revision params
func (o *GetRevisionParams) SetRevisionID(revisionID string) {
	o.RevisionID = revisionID
}

// WithSpaceID adds the spaceID to the get revision params
func (o *GetRevisionParams) WithSpaceID(spaceID string) *GetRevisionParams {
	o.SetSpaceID(spaceID)
	return o
}

// SetSpaceID adds the spaceId to the get revision params
func (o *GetRevisionParams) SetSpaceID(spaceID string) {
	o.SpaceID = spaceID
}

// WithUnitID adds the unitID to the get revision params
func (o *GetRevisionParams) WithUnitID(unitID string) *GetRevisionParams {
	o.SetUnitID(unitID)
	return o
}

// SetUnitID adds the unitId to the get revision params
func (o *GetRevisionParams) SetUnitID(unitID string) {
	o.UnitID = unitID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRevisionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Include != nil {

		// query param include
		var qrInclude string

		if o.Include != nil {
			qrInclude = *o.Include
		}
		qInclude := qrInclude
		if qInclude != "" {

			if err := r.SetQueryParam("include", qInclude); err != nil {
				return err
			}
		}
	}

	// path param revision_id
	if err := r.SetPathParam("revision_id", o.RevisionID); err != nil {
		return err
	}

	// path param space_id
	if err := r.SetPathParam("space_id", o.SpaceID); err != nil {
		return err
	}

	// path param unit_id
	if err := r.SetPathParam("unit_id", o.UnitID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
