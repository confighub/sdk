// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// CrossListBridgeWorkersReader is a Reader for the CrossListBridgeWorkers structure.
type CrossListBridgeWorkersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CrossListBridgeWorkersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCrossListBridgeWorkersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCrossListBridgeWorkersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCrossListBridgeWorkersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCrossListBridgeWorkersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCrossListBridgeWorkersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /bridge_worker] CrossListBridgeWorkers", response, response.Code())
	}
}

// NewCrossListBridgeWorkersOK creates a CrossListBridgeWorkersOK with default headers values
func NewCrossListBridgeWorkersOK() *CrossListBridgeWorkersOK {
	return &CrossListBridgeWorkersOK{}
}

/*
CrossListBridgeWorkersOK describes a response with status code 200, with default header values.

OK
*/
type CrossListBridgeWorkersOK struct {
	Payload []*models.ModelsBridgeWorker
}

// IsSuccess returns true when this cross list bridge workers o k response has a 2xx status code
func (o *CrossListBridgeWorkersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cross list bridge workers o k response has a 3xx status code
func (o *CrossListBridgeWorkersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cross list bridge workers o k response has a 4xx status code
func (o *CrossListBridgeWorkersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cross list bridge workers o k response has a 5xx status code
func (o *CrossListBridgeWorkersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cross list bridge workers o k response a status code equal to that given
func (o *CrossListBridgeWorkersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cross list bridge workers o k response
func (o *CrossListBridgeWorkersOK) Code() int {
	return 200
}

func (o *CrossListBridgeWorkersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersOK %s", 200, payload)
}

func (o *CrossListBridgeWorkersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersOK %s", 200, payload)
}

func (o *CrossListBridgeWorkersOK) GetPayload() []*models.ModelsBridgeWorker {
	return o.Payload
}

func (o *CrossListBridgeWorkersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCrossListBridgeWorkersBadRequest creates a CrossListBridgeWorkersBadRequest with default headers values
func NewCrossListBridgeWorkersBadRequest() *CrossListBridgeWorkersBadRequest {
	return &CrossListBridgeWorkersBadRequest{}
}

/*
CrossListBridgeWorkersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CrossListBridgeWorkersBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this cross list bridge workers bad request response has a 2xx status code
func (o *CrossListBridgeWorkersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cross list bridge workers bad request response has a 3xx status code
func (o *CrossListBridgeWorkersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cross list bridge workers bad request response has a 4xx status code
func (o *CrossListBridgeWorkersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cross list bridge workers bad request response has a 5xx status code
func (o *CrossListBridgeWorkersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cross list bridge workers bad request response a status code equal to that given
func (o *CrossListBridgeWorkersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cross list bridge workers bad request response
func (o *CrossListBridgeWorkersBadRequest) Code() int {
	return 400
}

func (o *CrossListBridgeWorkersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersBadRequest %s", 400, payload)
}

func (o *CrossListBridgeWorkersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersBadRequest %s", 400, payload)
}

func (o *CrossListBridgeWorkersBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CrossListBridgeWorkersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCrossListBridgeWorkersUnauthorized creates a CrossListBridgeWorkersUnauthorized with default headers values
func NewCrossListBridgeWorkersUnauthorized() *CrossListBridgeWorkersUnauthorized {
	return &CrossListBridgeWorkersUnauthorized{}
}

/*
CrossListBridgeWorkersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CrossListBridgeWorkersUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this cross list bridge workers unauthorized response has a 2xx status code
func (o *CrossListBridgeWorkersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cross list bridge workers unauthorized response has a 3xx status code
func (o *CrossListBridgeWorkersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cross list bridge workers unauthorized response has a 4xx status code
func (o *CrossListBridgeWorkersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cross list bridge workers unauthorized response has a 5xx status code
func (o *CrossListBridgeWorkersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cross list bridge workers unauthorized response a status code equal to that given
func (o *CrossListBridgeWorkersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the cross list bridge workers unauthorized response
func (o *CrossListBridgeWorkersUnauthorized) Code() int {
	return 401
}

func (o *CrossListBridgeWorkersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersUnauthorized %s", 401, payload)
}

func (o *CrossListBridgeWorkersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersUnauthorized %s", 401, payload)
}

func (o *CrossListBridgeWorkersUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CrossListBridgeWorkersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCrossListBridgeWorkersForbidden creates a CrossListBridgeWorkersForbidden with default headers values
func NewCrossListBridgeWorkersForbidden() *CrossListBridgeWorkersForbidden {
	return &CrossListBridgeWorkersForbidden{}
}

/*
CrossListBridgeWorkersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CrossListBridgeWorkersForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this cross list bridge workers forbidden response has a 2xx status code
func (o *CrossListBridgeWorkersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cross list bridge workers forbidden response has a 3xx status code
func (o *CrossListBridgeWorkersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cross list bridge workers forbidden response has a 4xx status code
func (o *CrossListBridgeWorkersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cross list bridge workers forbidden response has a 5xx status code
func (o *CrossListBridgeWorkersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cross list bridge workers forbidden response a status code equal to that given
func (o *CrossListBridgeWorkersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cross list bridge workers forbidden response
func (o *CrossListBridgeWorkersForbidden) Code() int {
	return 403
}

func (o *CrossListBridgeWorkersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersForbidden %s", 403, payload)
}

func (o *CrossListBridgeWorkersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersForbidden %s", 403, payload)
}

func (o *CrossListBridgeWorkersForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CrossListBridgeWorkersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCrossListBridgeWorkersInternalServerError creates a CrossListBridgeWorkersInternalServerError with default headers values
func NewCrossListBridgeWorkersInternalServerError() *CrossListBridgeWorkersInternalServerError {
	return &CrossListBridgeWorkersInternalServerError{}
}

/*
CrossListBridgeWorkersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CrossListBridgeWorkersInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this cross list bridge workers internal server error response has a 2xx status code
func (o *CrossListBridgeWorkersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cross list bridge workers internal server error response has a 3xx status code
func (o *CrossListBridgeWorkersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cross list bridge workers internal server error response has a 4xx status code
func (o *CrossListBridgeWorkersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cross list bridge workers internal server error response has a 5xx status code
func (o *CrossListBridgeWorkersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cross list bridge workers internal server error response a status code equal to that given
func (o *CrossListBridgeWorkersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cross list bridge workers internal server error response
func (o *CrossListBridgeWorkersInternalServerError) Code() int {
	return 500
}

func (o *CrossListBridgeWorkersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersInternalServerError %s", 500, payload)
}

func (o *CrossListBridgeWorkersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /bridge_worker][%d] crossListBridgeWorkersInternalServerError %s", 500, payload)
}

func (o *CrossListBridgeWorkersInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CrossListBridgeWorkersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
