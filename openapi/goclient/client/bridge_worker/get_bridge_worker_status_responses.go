// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetBridgeWorkerStatusReader is a Reader for the GetBridgeWorkerStatus structure.
type GetBridgeWorkerStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBridgeWorkerStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBridgeWorkerStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBridgeWorkerStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBridgeWorkerStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBridgeWorkerStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBridgeWorkerStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBridgeWorkerStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}] GetBridgeWorkerStatus", response, response.Code())
	}
}

// NewGetBridgeWorkerStatusOK creates a GetBridgeWorkerStatusOK with default headers values
func NewGetBridgeWorkerStatusOK() *GetBridgeWorkerStatusOK {
	return &GetBridgeWorkerStatusOK{}
}

/*
GetBridgeWorkerStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetBridgeWorkerStatusOK struct {
	Payload *models.ModelsBridgeWorkerStatus
}

// IsSuccess returns true when this get bridge worker status o k response has a 2xx status code
func (o *GetBridgeWorkerStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bridge worker status o k response has a 3xx status code
func (o *GetBridgeWorkerStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker status o k response has a 4xx status code
func (o *GetBridgeWorkerStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bridge worker status o k response has a 5xx status code
func (o *GetBridgeWorkerStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker status o k response a status code equal to that given
func (o *GetBridgeWorkerStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bridge worker status o k response
func (o *GetBridgeWorkerStatusOK) Code() int {
	return 200
}

func (o *GetBridgeWorkerStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusOK %s", 200, payload)
}

func (o *GetBridgeWorkerStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusOK %s", 200, payload)
}

func (o *GetBridgeWorkerStatusOK) GetPayload() *models.ModelsBridgeWorkerStatus {
	return o.Payload
}

func (o *GetBridgeWorkerStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsBridgeWorkerStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerStatusBadRequest creates a GetBridgeWorkerStatusBadRequest with default headers values
func NewGetBridgeWorkerStatusBadRequest() *GetBridgeWorkerStatusBadRequest {
	return &GetBridgeWorkerStatusBadRequest{}
}

/*
GetBridgeWorkerStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBridgeWorkerStatusBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker status bad request response has a 2xx status code
func (o *GetBridgeWorkerStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker status bad request response has a 3xx status code
func (o *GetBridgeWorkerStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker status bad request response has a 4xx status code
func (o *GetBridgeWorkerStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker status bad request response has a 5xx status code
func (o *GetBridgeWorkerStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker status bad request response a status code equal to that given
func (o *GetBridgeWorkerStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bridge worker status bad request response
func (o *GetBridgeWorkerStatusBadRequest) Code() int {
	return 400
}

func (o *GetBridgeWorkerStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusBadRequest %s", 400, payload)
}

func (o *GetBridgeWorkerStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusBadRequest %s", 400, payload)
}

func (o *GetBridgeWorkerStatusBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerStatusUnauthorized creates a GetBridgeWorkerStatusUnauthorized with default headers values
func NewGetBridgeWorkerStatusUnauthorized() *GetBridgeWorkerStatusUnauthorized {
	return &GetBridgeWorkerStatusUnauthorized{}
}

/*
GetBridgeWorkerStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBridgeWorkerStatusUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker status unauthorized response has a 2xx status code
func (o *GetBridgeWorkerStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker status unauthorized response has a 3xx status code
func (o *GetBridgeWorkerStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker status unauthorized response has a 4xx status code
func (o *GetBridgeWorkerStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker status unauthorized response has a 5xx status code
func (o *GetBridgeWorkerStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker status unauthorized response a status code equal to that given
func (o *GetBridgeWorkerStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bridge worker status unauthorized response
func (o *GetBridgeWorkerStatusUnauthorized) Code() int {
	return 401
}

func (o *GetBridgeWorkerStatusUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusUnauthorized %s", 401, payload)
}

func (o *GetBridgeWorkerStatusUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusUnauthorized %s", 401, payload)
}

func (o *GetBridgeWorkerStatusUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerStatusForbidden creates a GetBridgeWorkerStatusForbidden with default headers values
func NewGetBridgeWorkerStatusForbidden() *GetBridgeWorkerStatusForbidden {
	return &GetBridgeWorkerStatusForbidden{}
}

/*
GetBridgeWorkerStatusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBridgeWorkerStatusForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker status forbidden response has a 2xx status code
func (o *GetBridgeWorkerStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker status forbidden response has a 3xx status code
func (o *GetBridgeWorkerStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker status forbidden response has a 4xx status code
func (o *GetBridgeWorkerStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker status forbidden response has a 5xx status code
func (o *GetBridgeWorkerStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker status forbidden response a status code equal to that given
func (o *GetBridgeWorkerStatusForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bridge worker status forbidden response
func (o *GetBridgeWorkerStatusForbidden) Code() int {
	return 403
}

func (o *GetBridgeWorkerStatusForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusForbidden %s", 403, payload)
}

func (o *GetBridgeWorkerStatusForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusForbidden %s", 403, payload)
}

func (o *GetBridgeWorkerStatusForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerStatusNotFound creates a GetBridgeWorkerStatusNotFound with default headers values
func NewGetBridgeWorkerStatusNotFound() *GetBridgeWorkerStatusNotFound {
	return &GetBridgeWorkerStatusNotFound{}
}

/*
GetBridgeWorkerStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBridgeWorkerStatusNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker status not found response has a 2xx status code
func (o *GetBridgeWorkerStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker status not found response has a 3xx status code
func (o *GetBridgeWorkerStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker status not found response has a 4xx status code
func (o *GetBridgeWorkerStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker status not found response has a 5xx status code
func (o *GetBridgeWorkerStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker status not found response a status code equal to that given
func (o *GetBridgeWorkerStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bridge worker status not found response
func (o *GetBridgeWorkerStatusNotFound) Code() int {
	return 404
}

func (o *GetBridgeWorkerStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusNotFound %s", 404, payload)
}

func (o *GetBridgeWorkerStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusNotFound %s", 404, payload)
}

func (o *GetBridgeWorkerStatusNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerStatusInternalServerError creates a GetBridgeWorkerStatusInternalServerError with default headers values
func NewGetBridgeWorkerStatusInternalServerError() *GetBridgeWorkerStatusInternalServerError {
	return &GetBridgeWorkerStatusInternalServerError{}
}

/*
GetBridgeWorkerStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetBridgeWorkerStatusInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker status internal server error response has a 2xx status code
func (o *GetBridgeWorkerStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker status internal server error response has a 3xx status code
func (o *GetBridgeWorkerStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker status internal server error response has a 4xx status code
func (o *GetBridgeWorkerStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bridge worker status internal server error response has a 5xx status code
func (o *GetBridgeWorkerStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bridge worker status internal server error response a status code equal to that given
func (o *GetBridgeWorkerStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bridge worker status internal server error response
func (o *GetBridgeWorkerStatusInternalServerError) Code() int {
	return 500
}

func (o *GetBridgeWorkerStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusInternalServerError %s", 500, payload)
}

func (o *GetBridgeWorkerStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/status/{status_id}][%d] getBridgeWorkerStatusInternalServerError %s", 500, payload)
}

func (o *GetBridgeWorkerStatusInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
