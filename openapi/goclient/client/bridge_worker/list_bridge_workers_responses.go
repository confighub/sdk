// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListBridgeWorkersReader is a Reader for the ListBridgeWorkers structure.
type ListBridgeWorkersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBridgeWorkersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBridgeWorkersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListBridgeWorkersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListBridgeWorkersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListBridgeWorkersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListBridgeWorkersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/bridge_worker] ListBridgeWorkers", response, response.Code())
	}
}

// NewListBridgeWorkersOK creates a ListBridgeWorkersOK with default headers values
func NewListBridgeWorkersOK() *ListBridgeWorkersOK {
	return &ListBridgeWorkersOK{}
}

/*
ListBridgeWorkersOK describes a response with status code 200, with default header values.

OK
*/
type ListBridgeWorkersOK struct {
	Payload []*models.ModelsBridgeWorker
}

// IsSuccess returns true when this list bridge workers o k response has a 2xx status code
func (o *ListBridgeWorkersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list bridge workers o k response has a 3xx status code
func (o *ListBridgeWorkersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list bridge workers o k response has a 4xx status code
func (o *ListBridgeWorkersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list bridge workers o k response has a 5xx status code
func (o *ListBridgeWorkersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list bridge workers o k response a status code equal to that given
func (o *ListBridgeWorkersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list bridge workers o k response
func (o *ListBridgeWorkersOK) Code() int {
	return 200
}

func (o *ListBridgeWorkersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersOK %s", 200, payload)
}

func (o *ListBridgeWorkersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersOK %s", 200, payload)
}

func (o *ListBridgeWorkersOK) GetPayload() []*models.ModelsBridgeWorker {
	return o.Payload
}

func (o *ListBridgeWorkersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBridgeWorkersBadRequest creates a ListBridgeWorkersBadRequest with default headers values
func NewListBridgeWorkersBadRequest() *ListBridgeWorkersBadRequest {
	return &ListBridgeWorkersBadRequest{}
}

/*
ListBridgeWorkersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListBridgeWorkersBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list bridge workers bad request response has a 2xx status code
func (o *ListBridgeWorkersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list bridge workers bad request response has a 3xx status code
func (o *ListBridgeWorkersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list bridge workers bad request response has a 4xx status code
func (o *ListBridgeWorkersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list bridge workers bad request response has a 5xx status code
func (o *ListBridgeWorkersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list bridge workers bad request response a status code equal to that given
func (o *ListBridgeWorkersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list bridge workers bad request response
func (o *ListBridgeWorkersBadRequest) Code() int {
	return 400
}

func (o *ListBridgeWorkersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersBadRequest %s", 400, payload)
}

func (o *ListBridgeWorkersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersBadRequest %s", 400, payload)
}

func (o *ListBridgeWorkersBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListBridgeWorkersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBridgeWorkersUnauthorized creates a ListBridgeWorkersUnauthorized with default headers values
func NewListBridgeWorkersUnauthorized() *ListBridgeWorkersUnauthorized {
	return &ListBridgeWorkersUnauthorized{}
}

/*
ListBridgeWorkersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListBridgeWorkersUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list bridge workers unauthorized response has a 2xx status code
func (o *ListBridgeWorkersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list bridge workers unauthorized response has a 3xx status code
func (o *ListBridgeWorkersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list bridge workers unauthorized response has a 4xx status code
func (o *ListBridgeWorkersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list bridge workers unauthorized response has a 5xx status code
func (o *ListBridgeWorkersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list bridge workers unauthorized response a status code equal to that given
func (o *ListBridgeWorkersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list bridge workers unauthorized response
func (o *ListBridgeWorkersUnauthorized) Code() int {
	return 401
}

func (o *ListBridgeWorkersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersUnauthorized %s", 401, payload)
}

func (o *ListBridgeWorkersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersUnauthorized %s", 401, payload)
}

func (o *ListBridgeWorkersUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListBridgeWorkersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBridgeWorkersForbidden creates a ListBridgeWorkersForbidden with default headers values
func NewListBridgeWorkersForbidden() *ListBridgeWorkersForbidden {
	return &ListBridgeWorkersForbidden{}
}

/*
ListBridgeWorkersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListBridgeWorkersForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list bridge workers forbidden response has a 2xx status code
func (o *ListBridgeWorkersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list bridge workers forbidden response has a 3xx status code
func (o *ListBridgeWorkersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list bridge workers forbidden response has a 4xx status code
func (o *ListBridgeWorkersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list bridge workers forbidden response has a 5xx status code
func (o *ListBridgeWorkersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list bridge workers forbidden response a status code equal to that given
func (o *ListBridgeWorkersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list bridge workers forbidden response
func (o *ListBridgeWorkersForbidden) Code() int {
	return 403
}

func (o *ListBridgeWorkersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersForbidden %s", 403, payload)
}

func (o *ListBridgeWorkersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersForbidden %s", 403, payload)
}

func (o *ListBridgeWorkersForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListBridgeWorkersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBridgeWorkersInternalServerError creates a ListBridgeWorkersInternalServerError with default headers values
func NewListBridgeWorkersInternalServerError() *ListBridgeWorkersInternalServerError {
	return &ListBridgeWorkersInternalServerError{}
}

/*
ListBridgeWorkersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListBridgeWorkersInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list bridge workers internal server error response has a 2xx status code
func (o *ListBridgeWorkersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list bridge workers internal server error response has a 3xx status code
func (o *ListBridgeWorkersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list bridge workers internal server error response has a 4xx status code
func (o *ListBridgeWorkersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list bridge workers internal server error response has a 5xx status code
func (o *ListBridgeWorkersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list bridge workers internal server error response a status code equal to that given
func (o *ListBridgeWorkersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list bridge workers internal server error response
func (o *ListBridgeWorkersInternalServerError) Code() int {
	return 500
}

func (o *ListBridgeWorkersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersInternalServerError %s", 500, payload)
}

func (o *ListBridgeWorkersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker][%d] listBridgeWorkersInternalServerError %s", 500, payload)
}

func (o *ListBridgeWorkersInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListBridgeWorkersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
