// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// PostBridgeWorkerBridgeWorkerIDActionResultReader is a Reader for the PostBridgeWorkerBridgeWorkerIDActionResult structure.
type PostBridgeWorkerBridgeWorkerIDActionResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBridgeWorkerBridgeWorkerIDActionResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBridgeWorkerBridgeWorkerIDActionResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostBridgeWorkerBridgeWorkerIDActionResultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostBridgeWorkerBridgeWorkerIDActionResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /bridge_worker/{bridge_worker_id}/action_result] PostBridgeWorkerBridgeWorkerIDActionResult", response, response.Code())
	}
}

// NewPostBridgeWorkerBridgeWorkerIDActionResultOK creates a PostBridgeWorkerBridgeWorkerIDActionResultOK with default headers values
func NewPostBridgeWorkerBridgeWorkerIDActionResultOK() *PostBridgeWorkerBridgeWorkerIDActionResultOK {
	return &PostBridgeWorkerBridgeWorkerIDActionResultOK{}
}

/*
PostBridgeWorkerBridgeWorkerIDActionResultOK describes a response with status code 200, with default header values.

Action result recorded successfully
*/
type PostBridgeWorkerBridgeWorkerIDActionResultOK struct {
}

// IsSuccess returns true when this post bridge worker bridge worker Id action result o k response has a 2xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post bridge worker bridge worker Id action result o k response has a 3xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bridge worker bridge worker Id action result o k response has a 4xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post bridge worker bridge worker Id action result o k response has a 5xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post bridge worker bridge worker Id action result o k response a status code equal to that given
func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post bridge worker bridge worker Id action result o k response
func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) Code() int {
	return 200
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) Error() string {
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/action_result][%d] postBridgeWorkerBridgeWorkerIdActionResultOK", 200)
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) String() string {
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/action_result][%d] postBridgeWorkerBridgeWorkerIdActionResultOK", 200)
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBridgeWorkerBridgeWorkerIDActionResultBadRequest creates a PostBridgeWorkerBridgeWorkerIDActionResultBadRequest with default headers values
func NewPostBridgeWorkerBridgeWorkerIDActionResultBadRequest() *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest {
	return &PostBridgeWorkerBridgeWorkerIDActionResultBadRequest{}
}

/*
PostBridgeWorkerBridgeWorkerIDActionResultBadRequest describes a response with status code 400, with default header values.

Invalid request body
*/
type PostBridgeWorkerBridgeWorkerIDActionResultBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this post bridge worker bridge worker Id action result bad request response has a 2xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bridge worker bridge worker Id action result bad request response has a 3xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bridge worker bridge worker Id action result bad request response has a 4xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post bridge worker bridge worker Id action result bad request response has a 5xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post bridge worker bridge worker Id action result bad request response a status code equal to that given
func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post bridge worker bridge worker Id action result bad request response
func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) Code() int {
	return 400
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/action_result][%d] postBridgeWorkerBridgeWorkerIdActionResultBadRequest %s", 400, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/action_result][%d] postBridgeWorkerBridgeWorkerIdActionResultBadRequest %s", 400, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBridgeWorkerBridgeWorkerIDActionResultInternalServerError creates a PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError with default headers values
func NewPostBridgeWorkerBridgeWorkerIDActionResultInternalServerError() *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError {
	return &PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError{}
}

/*
PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError describes a response with status code 500, with default header values.

Server error
*/
type PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this post bridge worker bridge worker Id action result internal server error response has a 2xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bridge worker bridge worker Id action result internal server error response has a 3xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bridge worker bridge worker Id action result internal server error response has a 4xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post bridge worker bridge worker Id action result internal server error response has a 5xx status code
func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post bridge worker bridge worker Id action result internal server error response a status code equal to that given
func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post bridge worker bridge worker Id action result internal server error response
func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) Code() int {
	return 500
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/action_result][%d] postBridgeWorkerBridgeWorkerIdActionResultInternalServerError %s", 500, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/action_result][%d] postBridgeWorkerBridgeWorkerIdActionResultInternalServerError %s", 500, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *PostBridgeWorkerBridgeWorkerIDActionResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
