// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// PostBridgeWorkerBridgeWorkerIDStreamReader is a Reader for the PostBridgeWorkerBridgeWorkerIDStream structure.
type PostBridgeWorkerBridgeWorkerIDStreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBridgeWorkerBridgeWorkerIDStreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostBridgeWorkerBridgeWorkerIDStreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostBridgeWorkerBridgeWorkerIDStreamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /bridge_worker/{bridge_worker_id}/stream] PostBridgeWorkerBridgeWorkerIDStream", response, response.Code())
	}
}

// NewPostBridgeWorkerBridgeWorkerIDStreamOK creates a PostBridgeWorkerBridgeWorkerIDStreamOK with default headers values
func NewPostBridgeWorkerBridgeWorkerIDStreamOK() *PostBridgeWorkerBridgeWorkerIDStreamOK {
	return &PostBridgeWorkerBridgeWorkerIDStreamOK{}
}

/*
PostBridgeWorkerBridgeWorkerIDStreamOK describes a response with status code 200, with default header values.

OK
*/
type PostBridgeWorkerBridgeWorkerIDStreamOK struct {
	Payload *models.APIEventMessage
}

// IsSuccess returns true when this post bridge worker bridge worker Id stream o k response has a 2xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post bridge worker bridge worker Id stream o k response has a 3xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bridge worker bridge worker Id stream o k response has a 4xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post bridge worker bridge worker Id stream o k response has a 5xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post bridge worker bridge worker Id stream o k response a status code equal to that given
func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post bridge worker bridge worker Id stream o k response
func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) Code() int {
	return 200
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/stream][%d] postBridgeWorkerBridgeWorkerIdStreamOK %s", 200, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/stream][%d] postBridgeWorkerBridgeWorkerIdStreamOK %s", 200, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) GetPayload() *models.APIEventMessage {
	return o.Payload
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIEventMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBridgeWorkerBridgeWorkerIDStreamUnauthorized creates a PostBridgeWorkerBridgeWorkerIDStreamUnauthorized with default headers values
func NewPostBridgeWorkerBridgeWorkerIDStreamUnauthorized() *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized {
	return &PostBridgeWorkerBridgeWorkerIDStreamUnauthorized{}
}

/*
PostBridgeWorkerBridgeWorkerIDStreamUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostBridgeWorkerBridgeWorkerIDStreamUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this post bridge worker bridge worker Id stream unauthorized response has a 2xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post bridge worker bridge worker Id stream unauthorized response has a 3xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post bridge worker bridge worker Id stream unauthorized response has a 4xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post bridge worker bridge worker Id stream unauthorized response has a 5xx status code
func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post bridge worker bridge worker Id stream unauthorized response a status code equal to that given
func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post bridge worker bridge worker Id stream unauthorized response
func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) Code() int {
	return 401
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/stream][%d] postBridgeWorkerBridgeWorkerIdStreamUnauthorized %s", 401, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /bridge_worker/{bridge_worker_id}/stream][%d] postBridgeWorkerBridgeWorkerIdStreamUnauthorized %s", 401, payload)
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *PostBridgeWorkerBridgeWorkerIDStreamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
