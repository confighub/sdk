// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// CreateBridgeWorkerReader is a Reader for the CreateBridgeWorker structure.
type CreateBridgeWorkerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBridgeWorkerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBridgeWorkerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBridgeWorkerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateBridgeWorkerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateBridgeWorkerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateBridgeWorkerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /space/{space_id}/bridge_worker] CreateBridgeWorker", response, response.Code())
	}
}

// NewCreateBridgeWorkerOK creates a CreateBridgeWorkerOK with default headers values
func NewCreateBridgeWorkerOK() *CreateBridgeWorkerOK {
	return &CreateBridgeWorkerOK{}
}

/*
CreateBridgeWorkerOK describes a response with status code 200, with default header values.

OK
*/
type CreateBridgeWorkerOK struct {
	Payload *models.ModelsBridgeWorker
}

// IsSuccess returns true when this create bridge worker o k response has a 2xx status code
func (o *CreateBridgeWorkerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create bridge worker o k response has a 3xx status code
func (o *CreateBridgeWorkerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bridge worker o k response has a 4xx status code
func (o *CreateBridgeWorkerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create bridge worker o k response has a 5xx status code
func (o *CreateBridgeWorkerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create bridge worker o k response a status code equal to that given
func (o *CreateBridgeWorkerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create bridge worker o k response
func (o *CreateBridgeWorkerOK) Code() int {
	return 200
}

func (o *CreateBridgeWorkerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerOK %s", 200, payload)
}

func (o *CreateBridgeWorkerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerOK %s", 200, payload)
}

func (o *CreateBridgeWorkerOK) GetPayload() *models.ModelsBridgeWorker {
	return o.Payload
}

func (o *CreateBridgeWorkerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsBridgeWorker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBridgeWorkerBadRequest creates a CreateBridgeWorkerBadRequest with default headers values
func NewCreateBridgeWorkerBadRequest() *CreateBridgeWorkerBadRequest {
	return &CreateBridgeWorkerBadRequest{}
}

/*
CreateBridgeWorkerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateBridgeWorkerBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create bridge worker bad request response has a 2xx status code
func (o *CreateBridgeWorkerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bridge worker bad request response has a 3xx status code
func (o *CreateBridgeWorkerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bridge worker bad request response has a 4xx status code
func (o *CreateBridgeWorkerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create bridge worker bad request response has a 5xx status code
func (o *CreateBridgeWorkerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create bridge worker bad request response a status code equal to that given
func (o *CreateBridgeWorkerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create bridge worker bad request response
func (o *CreateBridgeWorkerBadRequest) Code() int {
	return 400
}

func (o *CreateBridgeWorkerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerBadRequest %s", 400, payload)
}

func (o *CreateBridgeWorkerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerBadRequest %s", 400, payload)
}

func (o *CreateBridgeWorkerBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateBridgeWorkerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBridgeWorkerUnauthorized creates a CreateBridgeWorkerUnauthorized with default headers values
func NewCreateBridgeWorkerUnauthorized() *CreateBridgeWorkerUnauthorized {
	return &CreateBridgeWorkerUnauthorized{}
}

/*
CreateBridgeWorkerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateBridgeWorkerUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create bridge worker unauthorized response has a 2xx status code
func (o *CreateBridgeWorkerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bridge worker unauthorized response has a 3xx status code
func (o *CreateBridgeWorkerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bridge worker unauthorized response has a 4xx status code
func (o *CreateBridgeWorkerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create bridge worker unauthorized response has a 5xx status code
func (o *CreateBridgeWorkerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create bridge worker unauthorized response a status code equal to that given
func (o *CreateBridgeWorkerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create bridge worker unauthorized response
func (o *CreateBridgeWorkerUnauthorized) Code() int {
	return 401
}

func (o *CreateBridgeWorkerUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerUnauthorized %s", 401, payload)
}

func (o *CreateBridgeWorkerUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerUnauthorized %s", 401, payload)
}

func (o *CreateBridgeWorkerUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateBridgeWorkerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBridgeWorkerForbidden creates a CreateBridgeWorkerForbidden with default headers values
func NewCreateBridgeWorkerForbidden() *CreateBridgeWorkerForbidden {
	return &CreateBridgeWorkerForbidden{}
}

/*
CreateBridgeWorkerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateBridgeWorkerForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create bridge worker forbidden response has a 2xx status code
func (o *CreateBridgeWorkerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bridge worker forbidden response has a 3xx status code
func (o *CreateBridgeWorkerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bridge worker forbidden response has a 4xx status code
func (o *CreateBridgeWorkerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create bridge worker forbidden response has a 5xx status code
func (o *CreateBridgeWorkerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create bridge worker forbidden response a status code equal to that given
func (o *CreateBridgeWorkerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create bridge worker forbidden response
func (o *CreateBridgeWorkerForbidden) Code() int {
	return 403
}

func (o *CreateBridgeWorkerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerForbidden %s", 403, payload)
}

func (o *CreateBridgeWorkerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerForbidden %s", 403, payload)
}

func (o *CreateBridgeWorkerForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateBridgeWorkerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBridgeWorkerInternalServerError creates a CreateBridgeWorkerInternalServerError with default headers values
func NewCreateBridgeWorkerInternalServerError() *CreateBridgeWorkerInternalServerError {
	return &CreateBridgeWorkerInternalServerError{}
}

/*
CreateBridgeWorkerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateBridgeWorkerInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create bridge worker internal server error response has a 2xx status code
func (o *CreateBridgeWorkerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create bridge worker internal server error response has a 3xx status code
func (o *CreateBridgeWorkerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create bridge worker internal server error response has a 4xx status code
func (o *CreateBridgeWorkerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create bridge worker internal server error response has a 5xx status code
func (o *CreateBridgeWorkerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create bridge worker internal server error response a status code equal to that given
func (o *CreateBridgeWorkerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create bridge worker internal server error response
func (o *CreateBridgeWorkerInternalServerError) Code() int {
	return 500
}

func (o *CreateBridgeWorkerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerInternalServerError %s", 500, payload)
}

func (o *CreateBridgeWorkerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/bridge_worker][%d] createBridgeWorkerInternalServerError %s", 500, payload)
}

func (o *CreateBridgeWorkerInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateBridgeWorkerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
