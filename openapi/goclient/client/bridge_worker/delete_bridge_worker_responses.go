// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// DeleteBridgeWorkerReader is a Reader for the DeleteBridgeWorker structure.
type DeleteBridgeWorkerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBridgeWorkerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBridgeWorkerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBridgeWorkerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteBridgeWorkerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteBridgeWorkerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteBridgeWorkerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteBridgeWorkerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}] DeleteBridgeWorker", response, response.Code())
	}
}

// NewDeleteBridgeWorkerOK creates a DeleteBridgeWorkerOK with default headers values
func NewDeleteBridgeWorkerOK() *DeleteBridgeWorkerOK {
	return &DeleteBridgeWorkerOK{}
}

/*
DeleteBridgeWorkerOK describes a response with status code 200, with default header values.

Ok
*/
type DeleteBridgeWorkerOK struct {
	Payload string
}

// IsSuccess returns true when this delete bridge worker o k response has a 2xx status code
func (o *DeleteBridgeWorkerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete bridge worker o k response has a 3xx status code
func (o *DeleteBridgeWorkerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete bridge worker o k response has a 4xx status code
func (o *DeleteBridgeWorkerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete bridge worker o k response has a 5xx status code
func (o *DeleteBridgeWorkerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete bridge worker o k response a status code equal to that given
func (o *DeleteBridgeWorkerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete bridge worker o k response
func (o *DeleteBridgeWorkerOK) Code() int {
	return 200
}

func (o *DeleteBridgeWorkerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerOK %s", 200, payload)
}

func (o *DeleteBridgeWorkerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerOK %s", 200, payload)
}

func (o *DeleteBridgeWorkerOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteBridgeWorkerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBridgeWorkerBadRequest creates a DeleteBridgeWorkerBadRequest with default headers values
func NewDeleteBridgeWorkerBadRequest() *DeleteBridgeWorkerBadRequest {
	return &DeleteBridgeWorkerBadRequest{}
}

/*
DeleteBridgeWorkerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteBridgeWorkerBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete bridge worker bad request response has a 2xx status code
func (o *DeleteBridgeWorkerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete bridge worker bad request response has a 3xx status code
func (o *DeleteBridgeWorkerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete bridge worker bad request response has a 4xx status code
func (o *DeleteBridgeWorkerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete bridge worker bad request response has a 5xx status code
func (o *DeleteBridgeWorkerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete bridge worker bad request response a status code equal to that given
func (o *DeleteBridgeWorkerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete bridge worker bad request response
func (o *DeleteBridgeWorkerBadRequest) Code() int {
	return 400
}

func (o *DeleteBridgeWorkerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerBadRequest %s", 400, payload)
}

func (o *DeleteBridgeWorkerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerBadRequest %s", 400, payload)
}

func (o *DeleteBridgeWorkerBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteBridgeWorkerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBridgeWorkerUnauthorized creates a DeleteBridgeWorkerUnauthorized with default headers values
func NewDeleteBridgeWorkerUnauthorized() *DeleteBridgeWorkerUnauthorized {
	return &DeleteBridgeWorkerUnauthorized{}
}

/*
DeleteBridgeWorkerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteBridgeWorkerUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete bridge worker unauthorized response has a 2xx status code
func (o *DeleteBridgeWorkerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete bridge worker unauthorized response has a 3xx status code
func (o *DeleteBridgeWorkerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete bridge worker unauthorized response has a 4xx status code
func (o *DeleteBridgeWorkerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete bridge worker unauthorized response has a 5xx status code
func (o *DeleteBridgeWorkerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete bridge worker unauthorized response a status code equal to that given
func (o *DeleteBridgeWorkerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete bridge worker unauthorized response
func (o *DeleteBridgeWorkerUnauthorized) Code() int {
	return 401
}

func (o *DeleteBridgeWorkerUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerUnauthorized %s", 401, payload)
}

func (o *DeleteBridgeWorkerUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerUnauthorized %s", 401, payload)
}

func (o *DeleteBridgeWorkerUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteBridgeWorkerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBridgeWorkerForbidden creates a DeleteBridgeWorkerForbidden with default headers values
func NewDeleteBridgeWorkerForbidden() *DeleteBridgeWorkerForbidden {
	return &DeleteBridgeWorkerForbidden{}
}

/*
DeleteBridgeWorkerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteBridgeWorkerForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete bridge worker forbidden response has a 2xx status code
func (o *DeleteBridgeWorkerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete bridge worker forbidden response has a 3xx status code
func (o *DeleteBridgeWorkerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete bridge worker forbidden response has a 4xx status code
func (o *DeleteBridgeWorkerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete bridge worker forbidden response has a 5xx status code
func (o *DeleteBridgeWorkerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete bridge worker forbidden response a status code equal to that given
func (o *DeleteBridgeWorkerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete bridge worker forbidden response
func (o *DeleteBridgeWorkerForbidden) Code() int {
	return 403
}

func (o *DeleteBridgeWorkerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerForbidden %s", 403, payload)
}

func (o *DeleteBridgeWorkerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerForbidden %s", 403, payload)
}

func (o *DeleteBridgeWorkerForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteBridgeWorkerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBridgeWorkerNotFound creates a DeleteBridgeWorkerNotFound with default headers values
func NewDeleteBridgeWorkerNotFound() *DeleteBridgeWorkerNotFound {
	return &DeleteBridgeWorkerNotFound{}
}

/*
DeleteBridgeWorkerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteBridgeWorkerNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete bridge worker not found response has a 2xx status code
func (o *DeleteBridgeWorkerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete bridge worker not found response has a 3xx status code
func (o *DeleteBridgeWorkerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete bridge worker not found response has a 4xx status code
func (o *DeleteBridgeWorkerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete bridge worker not found response has a 5xx status code
func (o *DeleteBridgeWorkerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete bridge worker not found response a status code equal to that given
func (o *DeleteBridgeWorkerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete bridge worker not found response
func (o *DeleteBridgeWorkerNotFound) Code() int {
	return 404
}

func (o *DeleteBridgeWorkerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerNotFound %s", 404, payload)
}

func (o *DeleteBridgeWorkerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerNotFound %s", 404, payload)
}

func (o *DeleteBridgeWorkerNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteBridgeWorkerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBridgeWorkerInternalServerError creates a DeleteBridgeWorkerInternalServerError with default headers values
func NewDeleteBridgeWorkerInternalServerError() *DeleteBridgeWorkerInternalServerError {
	return &DeleteBridgeWorkerInternalServerError{}
}

/*
DeleteBridgeWorkerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteBridgeWorkerInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete bridge worker internal server error response has a 2xx status code
func (o *DeleteBridgeWorkerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete bridge worker internal server error response has a 3xx status code
func (o *DeleteBridgeWorkerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete bridge worker internal server error response has a 4xx status code
func (o *DeleteBridgeWorkerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete bridge worker internal server error response has a 5xx status code
func (o *DeleteBridgeWorkerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete bridge worker internal server error response a status code equal to that given
func (o *DeleteBridgeWorkerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete bridge worker internal server error response
func (o *DeleteBridgeWorkerInternalServerError) Code() int {
	return 500
}

func (o *DeleteBridgeWorkerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerInternalServerError %s", 500, payload)
}

func (o *DeleteBridgeWorkerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] deleteBridgeWorkerInternalServerError %s", 500, payload)
}

func (o *DeleteBridgeWorkerInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteBridgeWorkerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
