// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetBridgeWorkerExtendedReader is a Reader for the GetBridgeWorkerExtended structure.
type GetBridgeWorkerExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBridgeWorkerExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBridgeWorkerExtendedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBridgeWorkerExtendedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetBridgeWorkerExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBridgeWorkerExtendedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBridgeWorkerExtendedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBridgeWorkerExtendedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended] GetBridgeWorkerExtended", response, response.Code())
	}
}

// NewGetBridgeWorkerExtendedOK creates a GetBridgeWorkerExtendedOK with default headers values
func NewGetBridgeWorkerExtendedOK() *GetBridgeWorkerExtendedOK {
	return &GetBridgeWorkerExtendedOK{}
}

/*
GetBridgeWorkerExtendedOK describes a response with status code 200, with default header values.

OK
*/
type GetBridgeWorkerExtendedOK struct {
	Payload *models.ModelsBridgeWorkerExtended
}

// IsSuccess returns true when this get bridge worker extended o k response has a 2xx status code
func (o *GetBridgeWorkerExtendedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bridge worker extended o k response has a 3xx status code
func (o *GetBridgeWorkerExtendedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker extended o k response has a 4xx status code
func (o *GetBridgeWorkerExtendedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bridge worker extended o k response has a 5xx status code
func (o *GetBridgeWorkerExtendedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker extended o k response a status code equal to that given
func (o *GetBridgeWorkerExtendedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bridge worker extended o k response
func (o *GetBridgeWorkerExtendedOK) Code() int {
	return 200
}

func (o *GetBridgeWorkerExtendedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedOK %s", 200, payload)
}

func (o *GetBridgeWorkerExtendedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedOK %s", 200, payload)
}

func (o *GetBridgeWorkerExtendedOK) GetPayload() *models.ModelsBridgeWorkerExtended {
	return o.Payload
}

func (o *GetBridgeWorkerExtendedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsBridgeWorkerExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerExtendedBadRequest creates a GetBridgeWorkerExtendedBadRequest with default headers values
func NewGetBridgeWorkerExtendedBadRequest() *GetBridgeWorkerExtendedBadRequest {
	return &GetBridgeWorkerExtendedBadRequest{}
}

/*
GetBridgeWorkerExtendedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBridgeWorkerExtendedBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker extended bad request response has a 2xx status code
func (o *GetBridgeWorkerExtendedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker extended bad request response has a 3xx status code
func (o *GetBridgeWorkerExtendedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker extended bad request response has a 4xx status code
func (o *GetBridgeWorkerExtendedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker extended bad request response has a 5xx status code
func (o *GetBridgeWorkerExtendedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker extended bad request response a status code equal to that given
func (o *GetBridgeWorkerExtendedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bridge worker extended bad request response
func (o *GetBridgeWorkerExtendedBadRequest) Code() int {
	return 400
}

func (o *GetBridgeWorkerExtendedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedBadRequest %s", 400, payload)
}

func (o *GetBridgeWorkerExtendedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedBadRequest %s", 400, payload)
}

func (o *GetBridgeWorkerExtendedBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerExtendedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerExtendedUnauthorized creates a GetBridgeWorkerExtendedUnauthorized with default headers values
func NewGetBridgeWorkerExtendedUnauthorized() *GetBridgeWorkerExtendedUnauthorized {
	return &GetBridgeWorkerExtendedUnauthorized{}
}

/*
GetBridgeWorkerExtendedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBridgeWorkerExtendedUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker extended unauthorized response has a 2xx status code
func (o *GetBridgeWorkerExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker extended unauthorized response has a 3xx status code
func (o *GetBridgeWorkerExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker extended unauthorized response has a 4xx status code
func (o *GetBridgeWorkerExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker extended unauthorized response has a 5xx status code
func (o *GetBridgeWorkerExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker extended unauthorized response a status code equal to that given
func (o *GetBridgeWorkerExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get bridge worker extended unauthorized response
func (o *GetBridgeWorkerExtendedUnauthorized) Code() int {
	return 401
}

func (o *GetBridgeWorkerExtendedUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedUnauthorized %s", 401, payload)
}

func (o *GetBridgeWorkerExtendedUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedUnauthorized %s", 401, payload)
}

func (o *GetBridgeWorkerExtendedUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerExtendedForbidden creates a GetBridgeWorkerExtendedForbidden with default headers values
func NewGetBridgeWorkerExtendedForbidden() *GetBridgeWorkerExtendedForbidden {
	return &GetBridgeWorkerExtendedForbidden{}
}

/*
GetBridgeWorkerExtendedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBridgeWorkerExtendedForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker extended forbidden response has a 2xx status code
func (o *GetBridgeWorkerExtendedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker extended forbidden response has a 3xx status code
func (o *GetBridgeWorkerExtendedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker extended forbidden response has a 4xx status code
func (o *GetBridgeWorkerExtendedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker extended forbidden response has a 5xx status code
func (o *GetBridgeWorkerExtendedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker extended forbidden response a status code equal to that given
func (o *GetBridgeWorkerExtendedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get bridge worker extended forbidden response
func (o *GetBridgeWorkerExtendedForbidden) Code() int {
	return 403
}

func (o *GetBridgeWorkerExtendedForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedForbidden %s", 403, payload)
}

func (o *GetBridgeWorkerExtendedForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedForbidden %s", 403, payload)
}

func (o *GetBridgeWorkerExtendedForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerExtendedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerExtendedNotFound creates a GetBridgeWorkerExtendedNotFound with default headers values
func NewGetBridgeWorkerExtendedNotFound() *GetBridgeWorkerExtendedNotFound {
	return &GetBridgeWorkerExtendedNotFound{}
}

/*
GetBridgeWorkerExtendedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBridgeWorkerExtendedNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker extended not found response has a 2xx status code
func (o *GetBridgeWorkerExtendedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker extended not found response has a 3xx status code
func (o *GetBridgeWorkerExtendedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker extended not found response has a 4xx status code
func (o *GetBridgeWorkerExtendedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bridge worker extended not found response has a 5xx status code
func (o *GetBridgeWorkerExtendedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bridge worker extended not found response a status code equal to that given
func (o *GetBridgeWorkerExtendedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bridge worker extended not found response
func (o *GetBridgeWorkerExtendedNotFound) Code() int {
	return 404
}

func (o *GetBridgeWorkerExtendedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedNotFound %s", 404, payload)
}

func (o *GetBridgeWorkerExtendedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedNotFound %s", 404, payload)
}

func (o *GetBridgeWorkerExtendedNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerExtendedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBridgeWorkerExtendedInternalServerError creates a GetBridgeWorkerExtendedInternalServerError with default headers values
func NewGetBridgeWorkerExtendedInternalServerError() *GetBridgeWorkerExtendedInternalServerError {
	return &GetBridgeWorkerExtendedInternalServerError{}
}

/*
GetBridgeWorkerExtendedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetBridgeWorkerExtendedInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get bridge worker extended internal server error response has a 2xx status code
func (o *GetBridgeWorkerExtendedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bridge worker extended internal server error response has a 3xx status code
func (o *GetBridgeWorkerExtendedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bridge worker extended internal server error response has a 4xx status code
func (o *GetBridgeWorkerExtendedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bridge worker extended internal server error response has a 5xx status code
func (o *GetBridgeWorkerExtendedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bridge worker extended internal server error response a status code equal to that given
func (o *GetBridgeWorkerExtendedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get bridge worker extended internal server error response
func (o *GetBridgeWorkerExtendedInternalServerError) Code() int {
	return 500
}

func (o *GetBridgeWorkerExtendedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedInternalServerError %s", 500, payload)
}

func (o *GetBridgeWorkerExtendedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/bridge_worker/{bridge_worker_id}/extended][%d] getBridgeWorkerExtendedInternalServerError %s", 500, payload)
}

func (o *GetBridgeWorkerExtendedInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetBridgeWorkerExtendedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
