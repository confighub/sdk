// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package bridge_worker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// UpdateBridgeWorkerReader is a Reader for the UpdateBridgeWorker structure.
type UpdateBridgeWorkerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBridgeWorkerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBridgeWorkerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBridgeWorkerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateBridgeWorkerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBridgeWorkerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBridgeWorkerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBridgeWorkerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}] UpdateBridgeWorker", response, response.Code())
	}
}

// NewUpdateBridgeWorkerOK creates a UpdateBridgeWorkerOK with default headers values
func NewUpdateBridgeWorkerOK() *UpdateBridgeWorkerOK {
	return &UpdateBridgeWorkerOK{}
}

/*
UpdateBridgeWorkerOK describes a response with status code 200, with default header values.

OK
*/
type UpdateBridgeWorkerOK struct {
	Payload *models.ModelsBridgeWorker
}

// IsSuccess returns true when this update bridge worker o k response has a 2xx status code
func (o *UpdateBridgeWorkerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update bridge worker o k response has a 3xx status code
func (o *UpdateBridgeWorkerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bridge worker o k response has a 4xx status code
func (o *UpdateBridgeWorkerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bridge worker o k response has a 5xx status code
func (o *UpdateBridgeWorkerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update bridge worker o k response a status code equal to that given
func (o *UpdateBridgeWorkerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update bridge worker o k response
func (o *UpdateBridgeWorkerOK) Code() int {
	return 200
}

func (o *UpdateBridgeWorkerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerOK %s", 200, payload)
}

func (o *UpdateBridgeWorkerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerOK %s", 200, payload)
}

func (o *UpdateBridgeWorkerOK) GetPayload() *models.ModelsBridgeWorker {
	return o.Payload
}

func (o *UpdateBridgeWorkerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsBridgeWorker)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBridgeWorkerBadRequest creates a UpdateBridgeWorkerBadRequest with default headers values
func NewUpdateBridgeWorkerBadRequest() *UpdateBridgeWorkerBadRequest {
	return &UpdateBridgeWorkerBadRequest{}
}

/*
UpdateBridgeWorkerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBridgeWorkerBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this update bridge worker bad request response has a 2xx status code
func (o *UpdateBridgeWorkerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bridge worker bad request response has a 3xx status code
func (o *UpdateBridgeWorkerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bridge worker bad request response has a 4xx status code
func (o *UpdateBridgeWorkerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bridge worker bad request response has a 5xx status code
func (o *UpdateBridgeWorkerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update bridge worker bad request response a status code equal to that given
func (o *UpdateBridgeWorkerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update bridge worker bad request response
func (o *UpdateBridgeWorkerBadRequest) Code() int {
	return 400
}

func (o *UpdateBridgeWorkerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerBadRequest %s", 400, payload)
}

func (o *UpdateBridgeWorkerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerBadRequest %s", 400, payload)
}

func (o *UpdateBridgeWorkerBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *UpdateBridgeWorkerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBridgeWorkerUnauthorized creates a UpdateBridgeWorkerUnauthorized with default headers values
func NewUpdateBridgeWorkerUnauthorized() *UpdateBridgeWorkerUnauthorized {
	return &UpdateBridgeWorkerUnauthorized{}
}

/*
UpdateBridgeWorkerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBridgeWorkerUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this update bridge worker unauthorized response has a 2xx status code
func (o *UpdateBridgeWorkerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bridge worker unauthorized response has a 3xx status code
func (o *UpdateBridgeWorkerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bridge worker unauthorized response has a 4xx status code
func (o *UpdateBridgeWorkerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bridge worker unauthorized response has a 5xx status code
func (o *UpdateBridgeWorkerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update bridge worker unauthorized response a status code equal to that given
func (o *UpdateBridgeWorkerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update bridge worker unauthorized response
func (o *UpdateBridgeWorkerUnauthorized) Code() int {
	return 401
}

func (o *UpdateBridgeWorkerUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerUnauthorized %s", 401, payload)
}

func (o *UpdateBridgeWorkerUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerUnauthorized %s", 401, payload)
}

func (o *UpdateBridgeWorkerUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *UpdateBridgeWorkerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBridgeWorkerForbidden creates a UpdateBridgeWorkerForbidden with default headers values
func NewUpdateBridgeWorkerForbidden() *UpdateBridgeWorkerForbidden {
	return &UpdateBridgeWorkerForbidden{}
}

/*
UpdateBridgeWorkerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBridgeWorkerForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this update bridge worker forbidden response has a 2xx status code
func (o *UpdateBridgeWorkerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bridge worker forbidden response has a 3xx status code
func (o *UpdateBridgeWorkerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bridge worker forbidden response has a 4xx status code
func (o *UpdateBridgeWorkerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bridge worker forbidden response has a 5xx status code
func (o *UpdateBridgeWorkerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update bridge worker forbidden response a status code equal to that given
func (o *UpdateBridgeWorkerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update bridge worker forbidden response
func (o *UpdateBridgeWorkerForbidden) Code() int {
	return 403
}

func (o *UpdateBridgeWorkerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerForbidden %s", 403, payload)
}

func (o *UpdateBridgeWorkerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerForbidden %s", 403, payload)
}

func (o *UpdateBridgeWorkerForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *UpdateBridgeWorkerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBridgeWorkerNotFound creates a UpdateBridgeWorkerNotFound with default headers values
func NewUpdateBridgeWorkerNotFound() *UpdateBridgeWorkerNotFound {
	return &UpdateBridgeWorkerNotFound{}
}

/*
UpdateBridgeWorkerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBridgeWorkerNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this update bridge worker not found response has a 2xx status code
func (o *UpdateBridgeWorkerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bridge worker not found response has a 3xx status code
func (o *UpdateBridgeWorkerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bridge worker not found response has a 4xx status code
func (o *UpdateBridgeWorkerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bridge worker not found response has a 5xx status code
func (o *UpdateBridgeWorkerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update bridge worker not found response a status code equal to that given
func (o *UpdateBridgeWorkerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update bridge worker not found response
func (o *UpdateBridgeWorkerNotFound) Code() int {
	return 404
}

func (o *UpdateBridgeWorkerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerNotFound %s", 404, payload)
}

func (o *UpdateBridgeWorkerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerNotFound %s", 404, payload)
}

func (o *UpdateBridgeWorkerNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *UpdateBridgeWorkerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBridgeWorkerInternalServerError creates a UpdateBridgeWorkerInternalServerError with default headers values
func NewUpdateBridgeWorkerInternalServerError() *UpdateBridgeWorkerInternalServerError {
	return &UpdateBridgeWorkerInternalServerError{}
}

/*
UpdateBridgeWorkerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateBridgeWorkerInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this update bridge worker internal server error response has a 2xx status code
func (o *UpdateBridgeWorkerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bridge worker internal server error response has a 3xx status code
func (o *UpdateBridgeWorkerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bridge worker internal server error response has a 4xx status code
func (o *UpdateBridgeWorkerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bridge worker internal server error response has a 5xx status code
func (o *UpdateBridgeWorkerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update bridge worker internal server error response a status code equal to that given
func (o *UpdateBridgeWorkerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update bridge worker internal server error response
func (o *UpdateBridgeWorkerInternalServerError) Code() int {
	return 500
}

func (o *UpdateBridgeWorkerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerInternalServerError %s", 500, payload)
}

func (o *UpdateBridgeWorkerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/bridge_worker/{bridge_worker_id}][%d] updateBridgeWorkerInternalServerError %s", 500, payload)
}

func (o *UpdateBridgeWorkerInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *UpdateBridgeWorkerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
