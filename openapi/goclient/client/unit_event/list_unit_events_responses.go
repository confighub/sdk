// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit_event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListUnitEventsReader is a Reader for the ListUnitEvents structure.
type ListUnitEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUnitEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUnitEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListUnitEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListUnitEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUnitEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListUnitEventsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}/unit_event] ListUnitEvents", response, response.Code())
	}
}

// NewListUnitEventsOK creates a ListUnitEventsOK with default headers values
func NewListUnitEventsOK() *ListUnitEventsOK {
	return &ListUnitEventsOK{}
}

/*
ListUnitEventsOK describes a response with status code 200, with default header values.

OK
*/
type ListUnitEventsOK struct {
	Payload []*models.ModelsUnitEvent
}

// IsSuccess returns true when this list unit events o k response has a 2xx status code
func (o *ListUnitEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list unit events o k response has a 3xx status code
func (o *ListUnitEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list unit events o k response has a 4xx status code
func (o *ListUnitEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list unit events o k response has a 5xx status code
func (o *ListUnitEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list unit events o k response a status code equal to that given
func (o *ListUnitEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list unit events o k response
func (o *ListUnitEventsOK) Code() int {
	return 200
}

func (o *ListUnitEventsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsOK %s", 200, payload)
}

func (o *ListUnitEventsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsOK %s", 200, payload)
}

func (o *ListUnitEventsOK) GetPayload() []*models.ModelsUnitEvent {
	return o.Payload
}

func (o *ListUnitEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitEventsBadRequest creates a ListUnitEventsBadRequest with default headers values
func NewListUnitEventsBadRequest() *ListUnitEventsBadRequest {
	return &ListUnitEventsBadRequest{}
}

/*
ListUnitEventsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListUnitEventsBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list unit events bad request response has a 2xx status code
func (o *ListUnitEventsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list unit events bad request response has a 3xx status code
func (o *ListUnitEventsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list unit events bad request response has a 4xx status code
func (o *ListUnitEventsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list unit events bad request response has a 5xx status code
func (o *ListUnitEventsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list unit events bad request response a status code equal to that given
func (o *ListUnitEventsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list unit events bad request response
func (o *ListUnitEventsBadRequest) Code() int {
	return 400
}

func (o *ListUnitEventsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsBadRequest %s", 400, payload)
}

func (o *ListUnitEventsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsBadRequest %s", 400, payload)
}

func (o *ListUnitEventsBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitEventsUnauthorized creates a ListUnitEventsUnauthorized with default headers values
func NewListUnitEventsUnauthorized() *ListUnitEventsUnauthorized {
	return &ListUnitEventsUnauthorized{}
}

/*
ListUnitEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUnitEventsUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list unit events unauthorized response has a 2xx status code
func (o *ListUnitEventsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list unit events unauthorized response has a 3xx status code
func (o *ListUnitEventsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list unit events unauthorized response has a 4xx status code
func (o *ListUnitEventsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list unit events unauthorized response has a 5xx status code
func (o *ListUnitEventsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list unit events unauthorized response a status code equal to that given
func (o *ListUnitEventsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list unit events unauthorized response
func (o *ListUnitEventsUnauthorized) Code() int {
	return 401
}

func (o *ListUnitEventsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsUnauthorized %s", 401, payload)
}

func (o *ListUnitEventsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsUnauthorized %s", 401, payload)
}

func (o *ListUnitEventsUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitEventsForbidden creates a ListUnitEventsForbidden with default headers values
func NewListUnitEventsForbidden() *ListUnitEventsForbidden {
	return &ListUnitEventsForbidden{}
}

/*
ListUnitEventsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUnitEventsForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list unit events forbidden response has a 2xx status code
func (o *ListUnitEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list unit events forbidden response has a 3xx status code
func (o *ListUnitEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list unit events forbidden response has a 4xx status code
func (o *ListUnitEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list unit events forbidden response has a 5xx status code
func (o *ListUnitEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list unit events forbidden response a status code equal to that given
func (o *ListUnitEventsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list unit events forbidden response
func (o *ListUnitEventsForbidden) Code() int {
	return 403
}

func (o *ListUnitEventsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsForbidden %s", 403, payload)
}

func (o *ListUnitEventsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsForbidden %s", 403, payload)
}

func (o *ListUnitEventsForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitEventsInternalServerError creates a ListUnitEventsInternalServerError with default headers values
func NewListUnitEventsInternalServerError() *ListUnitEventsInternalServerError {
	return &ListUnitEventsInternalServerError{}
}

/*
ListUnitEventsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListUnitEventsInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list unit events internal server error response has a 2xx status code
func (o *ListUnitEventsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list unit events internal server error response has a 3xx status code
func (o *ListUnitEventsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list unit events internal server error response has a 4xx status code
func (o *ListUnitEventsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list unit events internal server error response has a 5xx status code
func (o *ListUnitEventsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list unit events internal server error response a status code equal to that given
func (o *ListUnitEventsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list unit events internal server error response
func (o *ListUnitEventsInternalServerError) Code() int {
	return 500
}

func (o *ListUnitEventsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsInternalServerError %s", 500, payload)
}

func (o *ListUnitEventsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event][%d] listUnitEventsInternalServerError %s", 500, payload)
}

func (o *ListUnitEventsInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitEventsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
