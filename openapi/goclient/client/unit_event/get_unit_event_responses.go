// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit_event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetUnitEventReader is a Reader for the GetUnitEvent structure.
type GetUnitEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUnitEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUnitEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUnitEventBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUnitEventUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUnitEventForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUnitEventNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUnitEventInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}] GetUnitEvent", response, response.Code())
	}
}

// NewGetUnitEventOK creates a GetUnitEventOK with default headers values
func NewGetUnitEventOK() *GetUnitEventOK {
	return &GetUnitEventOK{}
}

/*
GetUnitEventOK describes a response with status code 200, with default header values.

OK
*/
type GetUnitEventOK struct {
	Payload *models.ModelsUnitEvent
}

// IsSuccess returns true when this get unit event o k response has a 2xx status code
func (o *GetUnitEventOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get unit event o k response has a 3xx status code
func (o *GetUnitEventOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit event o k response has a 4xx status code
func (o *GetUnitEventOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit event o k response has a 5xx status code
func (o *GetUnitEventOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit event o k response a status code equal to that given
func (o *GetUnitEventOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get unit event o k response
func (o *GetUnitEventOK) Code() int {
	return 200
}

func (o *GetUnitEventOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventOK %s", 200, payload)
}

func (o *GetUnitEventOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventOK %s", 200, payload)
}

func (o *GetUnitEventOK) GetPayload() *models.ModelsUnitEvent {
	return o.Payload
}

func (o *GetUnitEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsUnitEvent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitEventBadRequest creates a GetUnitEventBadRequest with default headers values
func NewGetUnitEventBadRequest() *GetUnitEventBadRequest {
	return &GetUnitEventBadRequest{}
}

/*
GetUnitEventBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUnitEventBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit event bad request response has a 2xx status code
func (o *GetUnitEventBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit event bad request response has a 3xx status code
func (o *GetUnitEventBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit event bad request response has a 4xx status code
func (o *GetUnitEventBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit event bad request response has a 5xx status code
func (o *GetUnitEventBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit event bad request response a status code equal to that given
func (o *GetUnitEventBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get unit event bad request response
func (o *GetUnitEventBadRequest) Code() int {
	return 400
}

func (o *GetUnitEventBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventBadRequest %s", 400, payload)
}

func (o *GetUnitEventBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventBadRequest %s", 400, payload)
}

func (o *GetUnitEventBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitEventBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitEventUnauthorized creates a GetUnitEventUnauthorized with default headers values
func NewGetUnitEventUnauthorized() *GetUnitEventUnauthorized {
	return &GetUnitEventUnauthorized{}
}

/*
GetUnitEventUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetUnitEventUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit event unauthorized response has a 2xx status code
func (o *GetUnitEventUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit event unauthorized response has a 3xx status code
func (o *GetUnitEventUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit event unauthorized response has a 4xx status code
func (o *GetUnitEventUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit event unauthorized response has a 5xx status code
func (o *GetUnitEventUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit event unauthorized response a status code equal to that given
func (o *GetUnitEventUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get unit event unauthorized response
func (o *GetUnitEventUnauthorized) Code() int {
	return 401
}

func (o *GetUnitEventUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventUnauthorized %s", 401, payload)
}

func (o *GetUnitEventUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventUnauthorized %s", 401, payload)
}

func (o *GetUnitEventUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitEventUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitEventForbidden creates a GetUnitEventForbidden with default headers values
func NewGetUnitEventForbidden() *GetUnitEventForbidden {
	return &GetUnitEventForbidden{}
}

/*
GetUnitEventForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUnitEventForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit event forbidden response has a 2xx status code
func (o *GetUnitEventForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit event forbidden response has a 3xx status code
func (o *GetUnitEventForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit event forbidden response has a 4xx status code
func (o *GetUnitEventForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit event forbidden response has a 5xx status code
func (o *GetUnitEventForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit event forbidden response a status code equal to that given
func (o *GetUnitEventForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get unit event forbidden response
func (o *GetUnitEventForbidden) Code() int {
	return 403
}

func (o *GetUnitEventForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventForbidden %s", 403, payload)
}

func (o *GetUnitEventForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventForbidden %s", 403, payload)
}

func (o *GetUnitEventForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitEventForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitEventNotFound creates a GetUnitEventNotFound with default headers values
func NewGetUnitEventNotFound() *GetUnitEventNotFound {
	return &GetUnitEventNotFound{}
}

/*
GetUnitEventNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUnitEventNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit event not found response has a 2xx status code
func (o *GetUnitEventNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit event not found response has a 3xx status code
func (o *GetUnitEventNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit event not found response has a 4xx status code
func (o *GetUnitEventNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit event not found response has a 5xx status code
func (o *GetUnitEventNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit event not found response a status code equal to that given
func (o *GetUnitEventNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get unit event not found response
func (o *GetUnitEventNotFound) Code() int {
	return 404
}

func (o *GetUnitEventNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventNotFound %s", 404, payload)
}

func (o *GetUnitEventNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventNotFound %s", 404, payload)
}

func (o *GetUnitEventNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitEventNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitEventInternalServerError creates a GetUnitEventInternalServerError with default headers values
func NewGetUnitEventInternalServerError() *GetUnitEventInternalServerError {
	return &GetUnitEventInternalServerError{}
}

/*
GetUnitEventInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUnitEventInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit event internal server error response has a 2xx status code
func (o *GetUnitEventInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit event internal server error response has a 3xx status code
func (o *GetUnitEventInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit event internal server error response has a 4xx status code
func (o *GetUnitEventInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit event internal server error response has a 5xx status code
func (o *GetUnitEventInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get unit event internal server error response a status code equal to that given
func (o *GetUnitEventInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get unit event internal server error response
func (o *GetUnitEventInternalServerError) Code() int {
	return 500
}

func (o *GetUnitEventInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventInternalServerError %s", 500, payload)
}

func (o *GetUnitEventInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/unit_event/{unit_event_id}][%d] getUnitEventInternalServerError %s", 500, payload)
}

func (o *GetUnitEventInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitEventInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
