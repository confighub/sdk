// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package set

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSetParams creates a new GetSetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSetParams() *GetSetParams {
	return &GetSetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSetParamsWithTimeout creates a new GetSetParams object
// with the ability to set a timeout on a request.
func NewGetSetParamsWithTimeout(timeout time.Duration) *GetSetParams {
	return &GetSetParams{
		timeout: timeout,
	}
}

// NewGetSetParamsWithContext creates a new GetSetParams object
// with the ability to set a context for a request.
func NewGetSetParamsWithContext(ctx context.Context) *GetSetParams {
	return &GetSetParams{
		Context: ctx,
	}
}

// NewGetSetParamsWithHTTPClient creates a new GetSetParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSetParamsWithHTTPClient(client *http.Client) *GetSetParams {
	return &GetSetParams{
		HTTPClient: client,
	}
}

/*
GetSetParams contains all the parameters to send to the API endpoint

	for the get set operation.

	Typically these are written to a http.Request.
*/
type GetSetParams struct {

	/* SetID.

	   Set ID
	*/
	SetID string

	/* SpaceID.

	   Space ID
	*/
	SpaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get set params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSetParams) WithDefaults() *GetSetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get set params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get set params
func (o *GetSetParams) WithTimeout(timeout time.Duration) *GetSetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get set params
func (o *GetSetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get set params
func (o *GetSetParams) WithContext(ctx context.Context) *GetSetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get set params
func (o *GetSetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get set params
func (o *GetSetParams) WithHTTPClient(client *http.Client) *GetSetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get set params
func (o *GetSetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSetID adds the setID to the get set params
func (o *GetSetParams) WithSetID(setID string) *GetSetParams {
	o.SetSetID(setID)
	return o
}

// SetSetID adds the setId to the get set params
func (o *GetSetParams) SetSetID(setID string) {
	o.SetID = setID
}

// WithSpaceID adds the spaceID to the get set params
func (o *GetSetParams) WithSpaceID(spaceID string) *GetSetParams {
	o.SetSpaceID(spaceID)
	return o
}

// SetSpaceID adds the spaceId to the get set params
func (o *GetSetParams) SetSpaceID(spaceID string) {
	o.SpaceID = spaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param set_id
	if err := r.SetPathParam("set_id", o.SetID); err != nil {
		return err
	}

	// path param space_id
	if err := r.SetPathParam("space_id", o.SpaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
