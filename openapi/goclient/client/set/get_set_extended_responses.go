// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package set

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetSetExtendedReader is a Reader for the GetSetExtended structure.
type GetSetExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSetExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSetExtendedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSetExtendedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSetExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSetExtendedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSetExtendedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSetExtendedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/set/{set_id}/extended] GetSetExtended", response, response.Code())
	}
}

// NewGetSetExtendedOK creates a GetSetExtendedOK with default headers values
func NewGetSetExtendedOK() *GetSetExtendedOK {
	return &GetSetExtendedOK{}
}

/*
GetSetExtendedOK describes a response with status code 200, with default header values.

OK
*/
type GetSetExtendedOK struct {
	Payload *models.ModelsSetExtended
}

// IsSuccess returns true when this get set extended o k response has a 2xx status code
func (o *GetSetExtendedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get set extended o k response has a 3xx status code
func (o *GetSetExtendedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get set extended o k response has a 4xx status code
func (o *GetSetExtendedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get set extended o k response has a 5xx status code
func (o *GetSetExtendedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get set extended o k response a status code equal to that given
func (o *GetSetExtendedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get set extended o k response
func (o *GetSetExtendedOK) Code() int {
	return 200
}

func (o *GetSetExtendedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedOK %s", 200, payload)
}

func (o *GetSetExtendedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedOK %s", 200, payload)
}

func (o *GetSetExtendedOK) GetPayload() *models.ModelsSetExtended {
	return o.Payload
}

func (o *GetSetExtendedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsSetExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSetExtendedBadRequest creates a GetSetExtendedBadRequest with default headers values
func NewGetSetExtendedBadRequest() *GetSetExtendedBadRequest {
	return &GetSetExtendedBadRequest{}
}

/*
GetSetExtendedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSetExtendedBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get set extended bad request response has a 2xx status code
func (o *GetSetExtendedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get set extended bad request response has a 3xx status code
func (o *GetSetExtendedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get set extended bad request response has a 4xx status code
func (o *GetSetExtendedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get set extended bad request response has a 5xx status code
func (o *GetSetExtendedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get set extended bad request response a status code equal to that given
func (o *GetSetExtendedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get set extended bad request response
func (o *GetSetExtendedBadRequest) Code() int {
	return 400
}

func (o *GetSetExtendedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedBadRequest %s", 400, payload)
}

func (o *GetSetExtendedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedBadRequest %s", 400, payload)
}

func (o *GetSetExtendedBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSetExtendedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSetExtendedUnauthorized creates a GetSetExtendedUnauthorized with default headers values
func NewGetSetExtendedUnauthorized() *GetSetExtendedUnauthorized {
	return &GetSetExtendedUnauthorized{}
}

/*
GetSetExtendedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSetExtendedUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get set extended unauthorized response has a 2xx status code
func (o *GetSetExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get set extended unauthorized response has a 3xx status code
func (o *GetSetExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get set extended unauthorized response has a 4xx status code
func (o *GetSetExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get set extended unauthorized response has a 5xx status code
func (o *GetSetExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get set extended unauthorized response a status code equal to that given
func (o *GetSetExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get set extended unauthorized response
func (o *GetSetExtendedUnauthorized) Code() int {
	return 401
}

func (o *GetSetExtendedUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedUnauthorized %s", 401, payload)
}

func (o *GetSetExtendedUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedUnauthorized %s", 401, payload)
}

func (o *GetSetExtendedUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSetExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSetExtendedForbidden creates a GetSetExtendedForbidden with default headers values
func NewGetSetExtendedForbidden() *GetSetExtendedForbidden {
	return &GetSetExtendedForbidden{}
}

/*
GetSetExtendedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSetExtendedForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get set extended forbidden response has a 2xx status code
func (o *GetSetExtendedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get set extended forbidden response has a 3xx status code
func (o *GetSetExtendedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get set extended forbidden response has a 4xx status code
func (o *GetSetExtendedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get set extended forbidden response has a 5xx status code
func (o *GetSetExtendedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get set extended forbidden response a status code equal to that given
func (o *GetSetExtendedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get set extended forbidden response
func (o *GetSetExtendedForbidden) Code() int {
	return 403
}

func (o *GetSetExtendedForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedForbidden %s", 403, payload)
}

func (o *GetSetExtendedForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedForbidden %s", 403, payload)
}

func (o *GetSetExtendedForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSetExtendedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSetExtendedNotFound creates a GetSetExtendedNotFound with default headers values
func NewGetSetExtendedNotFound() *GetSetExtendedNotFound {
	return &GetSetExtendedNotFound{}
}

/*
GetSetExtendedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSetExtendedNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get set extended not found response has a 2xx status code
func (o *GetSetExtendedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get set extended not found response has a 3xx status code
func (o *GetSetExtendedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get set extended not found response has a 4xx status code
func (o *GetSetExtendedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get set extended not found response has a 5xx status code
func (o *GetSetExtendedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get set extended not found response a status code equal to that given
func (o *GetSetExtendedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get set extended not found response
func (o *GetSetExtendedNotFound) Code() int {
	return 404
}

func (o *GetSetExtendedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedNotFound %s", 404, payload)
}

func (o *GetSetExtendedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedNotFound %s", 404, payload)
}

func (o *GetSetExtendedNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSetExtendedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSetExtendedInternalServerError creates a GetSetExtendedInternalServerError with default headers values
func NewGetSetExtendedInternalServerError() *GetSetExtendedInternalServerError {
	return &GetSetExtendedInternalServerError{}
}

/*
GetSetExtendedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSetExtendedInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get set extended internal server error response has a 2xx status code
func (o *GetSetExtendedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get set extended internal server error response has a 3xx status code
func (o *GetSetExtendedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get set extended internal server error response has a 4xx status code
func (o *GetSetExtendedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get set extended internal server error response has a 5xx status code
func (o *GetSetExtendedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get set extended internal server error response a status code equal to that given
func (o *GetSetExtendedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get set extended internal server error response
func (o *GetSetExtendedInternalServerError) Code() int {
	return 500
}

func (o *GetSetExtendedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedInternalServerError %s", 500, payload)
}

func (o *GetSetExtendedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set/{set_id}/extended][%d] getSetExtendedInternalServerError %s", 500, payload)
}

func (o *GetSetExtendedInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSetExtendedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
