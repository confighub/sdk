// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package set

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListSetsReader is a Reader for the ListSets structure.
type ListSetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListSetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListSetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListSetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/set] ListSets", response, response.Code())
	}
}

// NewListSetsOK creates a ListSetsOK with default headers values
func NewListSetsOK() *ListSetsOK {
	return &ListSetsOK{}
}

/*
ListSetsOK describes a response with status code 200, with default header values.

OK
*/
type ListSetsOK struct {
	Payload []*models.ModelsSet
}

// IsSuccess returns true when this list sets o k response has a 2xx status code
func (o *ListSetsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list sets o k response has a 3xx status code
func (o *ListSetsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list sets o k response has a 4xx status code
func (o *ListSetsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list sets o k response has a 5xx status code
func (o *ListSetsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list sets o k response a status code equal to that given
func (o *ListSetsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list sets o k response
func (o *ListSetsOK) Code() int {
	return 200
}

func (o *ListSetsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsOK %s", 200, payload)
}

func (o *ListSetsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsOK %s", 200, payload)
}

func (o *ListSetsOK) GetPayload() []*models.ModelsSet {
	return o.Payload
}

func (o *ListSetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSetsBadRequest creates a ListSetsBadRequest with default headers values
func NewListSetsBadRequest() *ListSetsBadRequest {
	return &ListSetsBadRequest{}
}

/*
ListSetsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListSetsBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list sets bad request response has a 2xx status code
func (o *ListSetsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list sets bad request response has a 3xx status code
func (o *ListSetsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list sets bad request response has a 4xx status code
func (o *ListSetsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list sets bad request response has a 5xx status code
func (o *ListSetsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list sets bad request response a status code equal to that given
func (o *ListSetsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list sets bad request response
func (o *ListSetsBadRequest) Code() int {
	return 400
}

func (o *ListSetsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsBadRequest %s", 400, payload)
}

func (o *ListSetsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsBadRequest %s", 400, payload)
}

func (o *ListSetsBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSetsUnauthorized creates a ListSetsUnauthorized with default headers values
func NewListSetsUnauthorized() *ListSetsUnauthorized {
	return &ListSetsUnauthorized{}
}

/*
ListSetsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListSetsUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list sets unauthorized response has a 2xx status code
func (o *ListSetsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list sets unauthorized response has a 3xx status code
func (o *ListSetsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list sets unauthorized response has a 4xx status code
func (o *ListSetsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list sets unauthorized response has a 5xx status code
func (o *ListSetsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list sets unauthorized response a status code equal to that given
func (o *ListSetsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list sets unauthorized response
func (o *ListSetsUnauthorized) Code() int {
	return 401
}

func (o *ListSetsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsUnauthorized %s", 401, payload)
}

func (o *ListSetsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsUnauthorized %s", 401, payload)
}

func (o *ListSetsUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSetsForbidden creates a ListSetsForbidden with default headers values
func NewListSetsForbidden() *ListSetsForbidden {
	return &ListSetsForbidden{}
}

/*
ListSetsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListSetsForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list sets forbidden response has a 2xx status code
func (o *ListSetsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list sets forbidden response has a 3xx status code
func (o *ListSetsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list sets forbidden response has a 4xx status code
func (o *ListSetsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list sets forbidden response has a 5xx status code
func (o *ListSetsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list sets forbidden response a status code equal to that given
func (o *ListSetsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list sets forbidden response
func (o *ListSetsForbidden) Code() int {
	return 403
}

func (o *ListSetsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsForbidden %s", 403, payload)
}

func (o *ListSetsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsForbidden %s", 403, payload)
}

func (o *ListSetsForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSetsInternalServerError creates a ListSetsInternalServerError with default headers values
func NewListSetsInternalServerError() *ListSetsInternalServerError {
	return &ListSetsInternalServerError{}
}

/*
ListSetsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListSetsInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list sets internal server error response has a 2xx status code
func (o *ListSetsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list sets internal server error response has a 3xx status code
func (o *ListSetsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list sets internal server error response has a 4xx status code
func (o *ListSetsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list sets internal server error response has a 5xx status code
func (o *ListSetsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list sets internal server error response a status code equal to that given
func (o *ListSetsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list sets internal server error response
func (o *ListSetsInternalServerError) Code() int {
	return 500
}

func (o *ListSetsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsInternalServerError %s", 500, payload)
}

func (o *ListSetsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/set][%d] listSetsInternalServerError %s", 500, payload)
}

func (o *ListSetsInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
