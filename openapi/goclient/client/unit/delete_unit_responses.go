// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// DeleteUnitReader is a Reader for the DeleteUnit structure.
type DeleteUnitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUnitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUnitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUnitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteUnitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUnitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUnitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUnitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /space/{space_id}/unit/{unit_id}] DeleteUnit", response, response.Code())
	}
}

// NewDeleteUnitOK creates a DeleteUnitOK with default headers values
func NewDeleteUnitOK() *DeleteUnitOK {
	return &DeleteUnitOK{}
}

/*
DeleteUnitOK describes a response with status code 200, with default header values.

Ok
*/
type DeleteUnitOK struct {
	Payload string
}

// IsSuccess returns true when this delete unit o k response has a 2xx status code
func (o *DeleteUnitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete unit o k response has a 3xx status code
func (o *DeleteUnitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete unit o k response has a 4xx status code
func (o *DeleteUnitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete unit o k response has a 5xx status code
func (o *DeleteUnitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete unit o k response a status code equal to that given
func (o *DeleteUnitOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete unit o k response
func (o *DeleteUnitOK) Code() int {
	return 200
}

func (o *DeleteUnitOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitOK %s", 200, payload)
}

func (o *DeleteUnitOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitOK %s", 200, payload)
}

func (o *DeleteUnitOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteUnitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnitBadRequest creates a DeleteUnitBadRequest with default headers values
func NewDeleteUnitBadRequest() *DeleteUnitBadRequest {
	return &DeleteUnitBadRequest{}
}

/*
DeleteUnitBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteUnitBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete unit bad request response has a 2xx status code
func (o *DeleteUnitBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete unit bad request response has a 3xx status code
func (o *DeleteUnitBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete unit bad request response has a 4xx status code
func (o *DeleteUnitBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete unit bad request response has a 5xx status code
func (o *DeleteUnitBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete unit bad request response a status code equal to that given
func (o *DeleteUnitBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete unit bad request response
func (o *DeleteUnitBadRequest) Code() int {
	return 400
}

func (o *DeleteUnitBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitBadRequest %s", 400, payload)
}

func (o *DeleteUnitBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitBadRequest %s", 400, payload)
}

func (o *DeleteUnitBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteUnitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnitUnauthorized creates a DeleteUnitUnauthorized with default headers values
func NewDeleteUnitUnauthorized() *DeleteUnitUnauthorized {
	return &DeleteUnitUnauthorized{}
}

/*
DeleteUnitUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteUnitUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete unit unauthorized response has a 2xx status code
func (o *DeleteUnitUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete unit unauthorized response has a 3xx status code
func (o *DeleteUnitUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete unit unauthorized response has a 4xx status code
func (o *DeleteUnitUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete unit unauthorized response has a 5xx status code
func (o *DeleteUnitUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete unit unauthorized response a status code equal to that given
func (o *DeleteUnitUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete unit unauthorized response
func (o *DeleteUnitUnauthorized) Code() int {
	return 401
}

func (o *DeleteUnitUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitUnauthorized %s", 401, payload)
}

func (o *DeleteUnitUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitUnauthorized %s", 401, payload)
}

func (o *DeleteUnitUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteUnitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnitForbidden creates a DeleteUnitForbidden with default headers values
func NewDeleteUnitForbidden() *DeleteUnitForbidden {
	return &DeleteUnitForbidden{}
}

/*
DeleteUnitForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteUnitForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete unit forbidden response has a 2xx status code
func (o *DeleteUnitForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete unit forbidden response has a 3xx status code
func (o *DeleteUnitForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete unit forbidden response has a 4xx status code
func (o *DeleteUnitForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete unit forbidden response has a 5xx status code
func (o *DeleteUnitForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete unit forbidden response a status code equal to that given
func (o *DeleteUnitForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete unit forbidden response
func (o *DeleteUnitForbidden) Code() int {
	return 403
}

func (o *DeleteUnitForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitForbidden %s", 403, payload)
}

func (o *DeleteUnitForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitForbidden %s", 403, payload)
}

func (o *DeleteUnitForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteUnitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnitNotFound creates a DeleteUnitNotFound with default headers values
func NewDeleteUnitNotFound() *DeleteUnitNotFound {
	return &DeleteUnitNotFound{}
}

/*
DeleteUnitNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteUnitNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete unit not found response has a 2xx status code
func (o *DeleteUnitNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete unit not found response has a 3xx status code
func (o *DeleteUnitNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete unit not found response has a 4xx status code
func (o *DeleteUnitNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete unit not found response has a 5xx status code
func (o *DeleteUnitNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete unit not found response a status code equal to that given
func (o *DeleteUnitNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete unit not found response
func (o *DeleteUnitNotFound) Code() int {
	return 404
}

func (o *DeleteUnitNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitNotFound %s", 404, payload)
}

func (o *DeleteUnitNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitNotFound %s", 404, payload)
}

func (o *DeleteUnitNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteUnitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUnitInternalServerError creates a DeleteUnitInternalServerError with default headers values
func NewDeleteUnitInternalServerError() *DeleteUnitInternalServerError {
	return &DeleteUnitInternalServerError{}
}

/*
DeleteUnitInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteUnitInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete unit internal server error response has a 2xx status code
func (o *DeleteUnitInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete unit internal server error response has a 3xx status code
func (o *DeleteUnitInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete unit internal server error response has a 4xx status code
func (o *DeleteUnitInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete unit internal server error response has a 5xx status code
func (o *DeleteUnitInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete unit internal server error response a status code equal to that given
func (o *DeleteUnitInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete unit internal server error response
func (o *DeleteUnitInternalServerError) Code() int {
	return 500
}

func (o *DeleteUnitInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitInternalServerError %s", 500, payload)
}

func (o *DeleteUnitInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/unit/{unit_id}][%d] deleteUnitInternalServerError %s", 500, payload)
}

func (o *DeleteUnitInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteUnitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
