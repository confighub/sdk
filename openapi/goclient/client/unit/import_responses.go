// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ImportReader is a Reader for the Import structure.
type ImportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /space/{space_id}/unit/{unit_id}/import] Import", response, response.Code())
	}
}

// NewImportOK creates a ImportOK with default headers values
func NewImportOK() *ImportOK {
	return &ImportOK{}
}

/*
ImportOK describes a response with status code 200, with default header values.

OK
*/
type ImportOK struct {
	Payload *models.ModelsQueuedOperation
}

// IsSuccess returns true when this import o k response has a 2xx status code
func (o *ImportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import o k response has a 3xx status code
func (o *ImportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import o k response has a 4xx status code
func (o *ImportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this import o k response has a 5xx status code
func (o *ImportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this import o k response a status code equal to that given
func (o *ImportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the import o k response
func (o *ImportOK) Code() int {
	return 200
}

func (o *ImportOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importOK %s", 200, payload)
}

func (o *ImportOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importOK %s", 200, payload)
}

func (o *ImportOK) GetPayload() *models.ModelsQueuedOperation {
	return o.Payload
}

func (o *ImportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsQueuedOperation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportBadRequest creates a ImportBadRequest with default headers values
func NewImportBadRequest() *ImportBadRequest {
	return &ImportBadRequest{}
}

/*
ImportBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImportBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this import bad request response has a 2xx status code
func (o *ImportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import bad request response has a 3xx status code
func (o *ImportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import bad request response has a 4xx status code
func (o *ImportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import bad request response has a 5xx status code
func (o *ImportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import bad request response a status code equal to that given
func (o *ImportBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import bad request response
func (o *ImportBadRequest) Code() int {
	return 400
}

func (o *ImportBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importBadRequest %s", 400, payload)
}

func (o *ImportBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importBadRequest %s", 400, payload)
}

func (o *ImportBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ImportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportUnauthorized creates a ImportUnauthorized with default headers values
func NewImportUnauthorized() *ImportUnauthorized {
	return &ImportUnauthorized{}
}

/*
ImportUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImportUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this import unauthorized response has a 2xx status code
func (o *ImportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import unauthorized response has a 3xx status code
func (o *ImportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import unauthorized response has a 4xx status code
func (o *ImportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import unauthorized response has a 5xx status code
func (o *ImportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import unauthorized response a status code equal to that given
func (o *ImportUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import unauthorized response
func (o *ImportUnauthorized) Code() int {
	return 401
}

func (o *ImportUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importUnauthorized %s", 401, payload)
}

func (o *ImportUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importUnauthorized %s", 401, payload)
}

func (o *ImportUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ImportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportForbidden creates a ImportForbidden with default headers values
func NewImportForbidden() *ImportForbidden {
	return &ImportForbidden{}
}

/*
ImportForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImportForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this import forbidden response has a 2xx status code
func (o *ImportForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import forbidden response has a 3xx status code
func (o *ImportForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import forbidden response has a 4xx status code
func (o *ImportForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this import forbidden response has a 5xx status code
func (o *ImportForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this import forbidden response a status code equal to that given
func (o *ImportForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the import forbidden response
func (o *ImportForbidden) Code() int {
	return 403
}

func (o *ImportForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importForbidden %s", 403, payload)
}

func (o *ImportForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importForbidden %s", 403, payload)
}

func (o *ImportForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ImportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportNotFound creates a ImportNotFound with default headers values
func NewImportNotFound() *ImportNotFound {
	return &ImportNotFound{}
}

/*
ImportNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ImportNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this import not found response has a 2xx status code
func (o *ImportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import not found response has a 3xx status code
func (o *ImportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import not found response has a 4xx status code
func (o *ImportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this import not found response has a 5xx status code
func (o *ImportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this import not found response a status code equal to that given
func (o *ImportNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the import not found response
func (o *ImportNotFound) Code() int {
	return 404
}

func (o *ImportNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importNotFound %s", 404, payload)
}

func (o *ImportNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importNotFound %s", 404, payload)
}

func (o *ImportNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ImportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportInternalServerError creates a ImportInternalServerError with default headers values
func NewImportInternalServerError() *ImportInternalServerError {
	return &ImportInternalServerError{}
}

/*
ImportInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ImportInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this import internal server error response has a 2xx status code
func (o *ImportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import internal server error response has a 3xx status code
func (o *ImportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import internal server error response has a 4xx status code
func (o *ImportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this import internal server error response has a 5xx status code
func (o *ImportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this import internal server error response a status code equal to that given
func (o *ImportInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the import internal server error response
func (o *ImportInternalServerError) Code() int {
	return 500
}

func (o *ImportInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importInternalServerError %s", 500, payload)
}

func (o *ImportInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/import][%d] importInternalServerError %s", 500, payload)
}

func (o *ImportInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ImportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
