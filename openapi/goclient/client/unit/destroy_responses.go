// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// DestroyReader is a Reader for the Destroy structure.
type DestroyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DestroyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDestroyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDestroyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDestroyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDestroyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDestroyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDestroyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /space/{space_id}/unit/{unit_id}/destroy] Destroy", response, response.Code())
	}
}

// NewDestroyOK creates a DestroyOK with default headers values
func NewDestroyOK() *DestroyOK {
	return &DestroyOK{}
}

/*
DestroyOK describes a response with status code 200, with default header values.

OK
*/
type DestroyOK struct {
	Payload *models.ModelsQueuedOperation
}

// IsSuccess returns true when this destroy o k response has a 2xx status code
func (o *DestroyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this destroy o k response has a 3xx status code
func (o *DestroyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy o k response has a 4xx status code
func (o *DestroyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this destroy o k response has a 5xx status code
func (o *DestroyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy o k response a status code equal to that given
func (o *DestroyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the destroy o k response
func (o *DestroyOK) Code() int {
	return 200
}

func (o *DestroyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyOK %s", 200, payload)
}

func (o *DestroyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyOK %s", 200, payload)
}

func (o *DestroyOK) GetPayload() *models.ModelsQueuedOperation {
	return o.Payload
}

func (o *DestroyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsQueuedOperation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroyBadRequest creates a DestroyBadRequest with default headers values
func NewDestroyBadRequest() *DestroyBadRequest {
	return &DestroyBadRequest{}
}

/*
DestroyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DestroyBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this destroy bad request response has a 2xx status code
func (o *DestroyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy bad request response has a 3xx status code
func (o *DestroyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy bad request response has a 4xx status code
func (o *DestroyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy bad request response has a 5xx status code
func (o *DestroyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy bad request response a status code equal to that given
func (o *DestroyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the destroy bad request response
func (o *DestroyBadRequest) Code() int {
	return 400
}

func (o *DestroyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyBadRequest %s", 400, payload)
}

func (o *DestroyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyBadRequest %s", 400, payload)
}

func (o *DestroyBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DestroyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroyUnauthorized creates a DestroyUnauthorized with default headers values
func NewDestroyUnauthorized() *DestroyUnauthorized {
	return &DestroyUnauthorized{}
}

/*
DestroyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DestroyUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this destroy unauthorized response has a 2xx status code
func (o *DestroyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy unauthorized response has a 3xx status code
func (o *DestroyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy unauthorized response has a 4xx status code
func (o *DestroyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy unauthorized response has a 5xx status code
func (o *DestroyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy unauthorized response a status code equal to that given
func (o *DestroyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the destroy unauthorized response
func (o *DestroyUnauthorized) Code() int {
	return 401
}

func (o *DestroyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyUnauthorized %s", 401, payload)
}

func (o *DestroyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyUnauthorized %s", 401, payload)
}

func (o *DestroyUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DestroyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroyForbidden creates a DestroyForbidden with default headers values
func NewDestroyForbidden() *DestroyForbidden {
	return &DestroyForbidden{}
}

/*
DestroyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DestroyForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this destroy forbidden response has a 2xx status code
func (o *DestroyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy forbidden response has a 3xx status code
func (o *DestroyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy forbidden response has a 4xx status code
func (o *DestroyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy forbidden response has a 5xx status code
func (o *DestroyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy forbidden response a status code equal to that given
func (o *DestroyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the destroy forbidden response
func (o *DestroyForbidden) Code() int {
	return 403
}

func (o *DestroyForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyForbidden %s", 403, payload)
}

func (o *DestroyForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyForbidden %s", 403, payload)
}

func (o *DestroyForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DestroyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroyNotFound creates a DestroyNotFound with default headers values
func NewDestroyNotFound() *DestroyNotFound {
	return &DestroyNotFound{}
}

/*
DestroyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DestroyNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this destroy not found response has a 2xx status code
func (o *DestroyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy not found response has a 3xx status code
func (o *DestroyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy not found response has a 4xx status code
func (o *DestroyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy not found response has a 5xx status code
func (o *DestroyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy not found response a status code equal to that given
func (o *DestroyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the destroy not found response
func (o *DestroyNotFound) Code() int {
	return 404
}

func (o *DestroyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyNotFound %s", 404, payload)
}

func (o *DestroyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyNotFound %s", 404, payload)
}

func (o *DestroyNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DestroyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroyInternalServerError creates a DestroyInternalServerError with default headers values
func NewDestroyInternalServerError() *DestroyInternalServerError {
	return &DestroyInternalServerError{}
}

/*
DestroyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DestroyInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this destroy internal server error response has a 2xx status code
func (o *DestroyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy internal server error response has a 3xx status code
func (o *DestroyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy internal server error response has a 4xx status code
func (o *DestroyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this destroy internal server error response has a 5xx status code
func (o *DestroyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this destroy internal server error response a status code equal to that given
func (o *DestroyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the destroy internal server error response
func (o *DestroyInternalServerError) Code() int {
	return 500
}

func (o *DestroyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyInternalServerError %s", 500, payload)
}

func (o *DestroyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit/{unit_id}/destroy][%d] destroyInternalServerError %s", 500, payload)
}

func (o *DestroyInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DestroyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
