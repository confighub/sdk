// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// BulkUpgradeUnitReader is a Reader for the BulkUpgradeUnit structure.
type BulkUpgradeUnitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BulkUpgradeUnitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBulkUpgradeUnitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBulkUpgradeUnitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBulkUpgradeUnitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBulkUpgradeUnitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBulkUpgradeUnitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewBulkUpgradeUnitConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBulkUpgradeUnitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /space/{space_id}/unit/{unit_id}/upgrade] BulkUpgradeUnit", response, response.Code())
	}
}

// NewBulkUpgradeUnitOK creates a BulkUpgradeUnitOK with default headers values
func NewBulkUpgradeUnitOK() *BulkUpgradeUnitOK {
	return &BulkUpgradeUnitOK{}
}

/*
BulkUpgradeUnitOK describes a response with status code 200, with default header values.

OK
*/
type BulkUpgradeUnitOK struct {
	Payload *models.ContractsUpgradeUnitResponse
}

// IsSuccess returns true when this bulk upgrade unit o k response has a 2xx status code
func (o *BulkUpgradeUnitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bulk upgrade unit o k response has a 3xx status code
func (o *BulkUpgradeUnitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit o k response has a 4xx status code
func (o *BulkUpgradeUnitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk upgrade unit o k response has a 5xx status code
func (o *BulkUpgradeUnitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk upgrade unit o k response a status code equal to that given
func (o *BulkUpgradeUnitOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bulk upgrade unit o k response
func (o *BulkUpgradeUnitOK) Code() int {
	return 200
}

func (o *BulkUpgradeUnitOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitOK %s", 200, payload)
}

func (o *BulkUpgradeUnitOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitOK %s", 200, payload)
}

func (o *BulkUpgradeUnitOK) GetPayload() *models.ContractsUpgradeUnitResponse {
	return o.Payload
}

func (o *BulkUpgradeUnitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContractsUpgradeUnitResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkUpgradeUnitBadRequest creates a BulkUpgradeUnitBadRequest with default headers values
func NewBulkUpgradeUnitBadRequest() *BulkUpgradeUnitBadRequest {
	return &BulkUpgradeUnitBadRequest{}
}

/*
BulkUpgradeUnitBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BulkUpgradeUnitBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this bulk upgrade unit bad request response has a 2xx status code
func (o *BulkUpgradeUnitBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk upgrade unit bad request response has a 3xx status code
func (o *BulkUpgradeUnitBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit bad request response has a 4xx status code
func (o *BulkUpgradeUnitBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk upgrade unit bad request response has a 5xx status code
func (o *BulkUpgradeUnitBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk upgrade unit bad request response a status code equal to that given
func (o *BulkUpgradeUnitBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the bulk upgrade unit bad request response
func (o *BulkUpgradeUnitBadRequest) Code() int {
	return 400
}

func (o *BulkUpgradeUnitBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitBadRequest %s", 400, payload)
}

func (o *BulkUpgradeUnitBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitBadRequest %s", 400, payload)
}

func (o *BulkUpgradeUnitBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *BulkUpgradeUnitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkUpgradeUnitUnauthorized creates a BulkUpgradeUnitUnauthorized with default headers values
func NewBulkUpgradeUnitUnauthorized() *BulkUpgradeUnitUnauthorized {
	return &BulkUpgradeUnitUnauthorized{}
}

/*
BulkUpgradeUnitUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BulkUpgradeUnitUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this bulk upgrade unit unauthorized response has a 2xx status code
func (o *BulkUpgradeUnitUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk upgrade unit unauthorized response has a 3xx status code
func (o *BulkUpgradeUnitUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit unauthorized response has a 4xx status code
func (o *BulkUpgradeUnitUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk upgrade unit unauthorized response has a 5xx status code
func (o *BulkUpgradeUnitUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk upgrade unit unauthorized response a status code equal to that given
func (o *BulkUpgradeUnitUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the bulk upgrade unit unauthorized response
func (o *BulkUpgradeUnitUnauthorized) Code() int {
	return 401
}

func (o *BulkUpgradeUnitUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitUnauthorized %s", 401, payload)
}

func (o *BulkUpgradeUnitUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitUnauthorized %s", 401, payload)
}

func (o *BulkUpgradeUnitUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *BulkUpgradeUnitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkUpgradeUnitForbidden creates a BulkUpgradeUnitForbidden with default headers values
func NewBulkUpgradeUnitForbidden() *BulkUpgradeUnitForbidden {
	return &BulkUpgradeUnitForbidden{}
}

/*
BulkUpgradeUnitForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BulkUpgradeUnitForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this bulk upgrade unit forbidden response has a 2xx status code
func (o *BulkUpgradeUnitForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk upgrade unit forbidden response has a 3xx status code
func (o *BulkUpgradeUnitForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit forbidden response has a 4xx status code
func (o *BulkUpgradeUnitForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk upgrade unit forbidden response has a 5xx status code
func (o *BulkUpgradeUnitForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk upgrade unit forbidden response a status code equal to that given
func (o *BulkUpgradeUnitForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the bulk upgrade unit forbidden response
func (o *BulkUpgradeUnitForbidden) Code() int {
	return 403
}

func (o *BulkUpgradeUnitForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitForbidden %s", 403, payload)
}

func (o *BulkUpgradeUnitForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitForbidden %s", 403, payload)
}

func (o *BulkUpgradeUnitForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *BulkUpgradeUnitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkUpgradeUnitNotFound creates a BulkUpgradeUnitNotFound with default headers values
func NewBulkUpgradeUnitNotFound() *BulkUpgradeUnitNotFound {
	return &BulkUpgradeUnitNotFound{}
}

/*
BulkUpgradeUnitNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BulkUpgradeUnitNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this bulk upgrade unit not found response has a 2xx status code
func (o *BulkUpgradeUnitNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk upgrade unit not found response has a 3xx status code
func (o *BulkUpgradeUnitNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit not found response has a 4xx status code
func (o *BulkUpgradeUnitNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk upgrade unit not found response has a 5xx status code
func (o *BulkUpgradeUnitNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk upgrade unit not found response a status code equal to that given
func (o *BulkUpgradeUnitNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the bulk upgrade unit not found response
func (o *BulkUpgradeUnitNotFound) Code() int {
	return 404
}

func (o *BulkUpgradeUnitNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitNotFound %s", 404, payload)
}

func (o *BulkUpgradeUnitNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitNotFound %s", 404, payload)
}

func (o *BulkUpgradeUnitNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *BulkUpgradeUnitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkUpgradeUnitConflict creates a BulkUpgradeUnitConflict with default headers values
func NewBulkUpgradeUnitConflict() *BulkUpgradeUnitConflict {
	return &BulkUpgradeUnitConflict{}
}

/*
BulkUpgradeUnitConflict describes a response with status code 409, with default header values.

Config data changed
*/
type BulkUpgradeUnitConflict struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this bulk upgrade unit conflict response has a 2xx status code
func (o *BulkUpgradeUnitConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk upgrade unit conflict response has a 3xx status code
func (o *BulkUpgradeUnitConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit conflict response has a 4xx status code
func (o *BulkUpgradeUnitConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk upgrade unit conflict response has a 5xx status code
func (o *BulkUpgradeUnitConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk upgrade unit conflict response a status code equal to that given
func (o *BulkUpgradeUnitConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the bulk upgrade unit conflict response
func (o *BulkUpgradeUnitConflict) Code() int {
	return 409
}

func (o *BulkUpgradeUnitConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitConflict %s", 409, payload)
}

func (o *BulkUpgradeUnitConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitConflict %s", 409, payload)
}

func (o *BulkUpgradeUnitConflict) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *BulkUpgradeUnitConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkUpgradeUnitInternalServerError creates a BulkUpgradeUnitInternalServerError with default headers values
func NewBulkUpgradeUnitInternalServerError() *BulkUpgradeUnitInternalServerError {
	return &BulkUpgradeUnitInternalServerError{}
}

/*
BulkUpgradeUnitInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BulkUpgradeUnitInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this bulk upgrade unit internal server error response has a 2xx status code
func (o *BulkUpgradeUnitInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk upgrade unit internal server error response has a 3xx status code
func (o *BulkUpgradeUnitInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk upgrade unit internal server error response has a 4xx status code
func (o *BulkUpgradeUnitInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk upgrade unit internal server error response has a 5xx status code
func (o *BulkUpgradeUnitInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this bulk upgrade unit internal server error response a status code equal to that given
func (o *BulkUpgradeUnitInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the bulk upgrade unit internal server error response
func (o *BulkUpgradeUnitInternalServerError) Code() int {
	return 500
}

func (o *BulkUpgradeUnitInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitInternalServerError %s", 500, payload)
}

func (o *BulkUpgradeUnitInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /space/{space_id}/unit/{unit_id}/upgrade][%d] bulkUpgradeUnitInternalServerError %s", 500, payload)
}

func (o *BulkUpgradeUnitInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *BulkUpgradeUnitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
