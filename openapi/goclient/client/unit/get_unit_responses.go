// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetUnitReader is a Reader for the GetUnit structure.
type GetUnitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUnitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUnitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUnitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUnitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUnitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUnitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUnitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}] GetUnit", response, response.Code())
	}
}

// NewGetUnitOK creates a GetUnitOK with default headers values
func NewGetUnitOK() *GetUnitOK {
	return &GetUnitOK{}
}

/*
GetUnitOK describes a response with status code 200, with default header values.

OK
*/
type GetUnitOK struct {
	Payload *models.ModelsUnit
}

// IsSuccess returns true when this get unit o k response has a 2xx status code
func (o *GetUnitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get unit o k response has a 3xx status code
func (o *GetUnitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit o k response has a 4xx status code
func (o *GetUnitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit o k response has a 5xx status code
func (o *GetUnitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit o k response a status code equal to that given
func (o *GetUnitOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get unit o k response
func (o *GetUnitOK) Code() int {
	return 200
}

func (o *GetUnitOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitOK %s", 200, payload)
}

func (o *GetUnitOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitOK %s", 200, payload)
}

func (o *GetUnitOK) GetPayload() *models.ModelsUnit {
	return o.Payload
}

func (o *GetUnitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsUnit)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitBadRequest creates a GetUnitBadRequest with default headers values
func NewGetUnitBadRequest() *GetUnitBadRequest {
	return &GetUnitBadRequest{}
}

/*
GetUnitBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUnitBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit bad request response has a 2xx status code
func (o *GetUnitBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit bad request response has a 3xx status code
func (o *GetUnitBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit bad request response has a 4xx status code
func (o *GetUnitBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit bad request response has a 5xx status code
func (o *GetUnitBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit bad request response a status code equal to that given
func (o *GetUnitBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get unit bad request response
func (o *GetUnitBadRequest) Code() int {
	return 400
}

func (o *GetUnitBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitBadRequest %s", 400, payload)
}

func (o *GetUnitBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitBadRequest %s", 400, payload)
}

func (o *GetUnitBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitUnauthorized creates a GetUnitUnauthorized with default headers values
func NewGetUnitUnauthorized() *GetUnitUnauthorized {
	return &GetUnitUnauthorized{}
}

/*
GetUnitUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetUnitUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit unauthorized response has a 2xx status code
func (o *GetUnitUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit unauthorized response has a 3xx status code
func (o *GetUnitUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit unauthorized response has a 4xx status code
func (o *GetUnitUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit unauthorized response has a 5xx status code
func (o *GetUnitUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit unauthorized response a status code equal to that given
func (o *GetUnitUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get unit unauthorized response
func (o *GetUnitUnauthorized) Code() int {
	return 401
}

func (o *GetUnitUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitUnauthorized %s", 401, payload)
}

func (o *GetUnitUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitUnauthorized %s", 401, payload)
}

func (o *GetUnitUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitForbidden creates a GetUnitForbidden with default headers values
func NewGetUnitForbidden() *GetUnitForbidden {
	return &GetUnitForbidden{}
}

/*
GetUnitForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUnitForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit forbidden response has a 2xx status code
func (o *GetUnitForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit forbidden response has a 3xx status code
func (o *GetUnitForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit forbidden response has a 4xx status code
func (o *GetUnitForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit forbidden response has a 5xx status code
func (o *GetUnitForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit forbidden response a status code equal to that given
func (o *GetUnitForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get unit forbidden response
func (o *GetUnitForbidden) Code() int {
	return 403
}

func (o *GetUnitForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitForbidden %s", 403, payload)
}

func (o *GetUnitForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitForbidden %s", 403, payload)
}

func (o *GetUnitForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitNotFound creates a GetUnitNotFound with default headers values
func NewGetUnitNotFound() *GetUnitNotFound {
	return &GetUnitNotFound{}
}

/*
GetUnitNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUnitNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit not found response has a 2xx status code
func (o *GetUnitNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit not found response has a 3xx status code
func (o *GetUnitNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit not found response has a 4xx status code
func (o *GetUnitNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit not found response has a 5xx status code
func (o *GetUnitNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit not found response a status code equal to that given
func (o *GetUnitNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get unit not found response
func (o *GetUnitNotFound) Code() int {
	return 404
}

func (o *GetUnitNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitNotFound %s", 404, payload)
}

func (o *GetUnitNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitNotFound %s", 404, payload)
}

func (o *GetUnitNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitInternalServerError creates a GetUnitInternalServerError with default headers values
func NewGetUnitInternalServerError() *GetUnitInternalServerError {
	return &GetUnitInternalServerError{}
}

/*
GetUnitInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUnitInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit internal server error response has a 2xx status code
func (o *GetUnitInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit internal server error response has a 3xx status code
func (o *GetUnitInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit internal server error response has a 4xx status code
func (o *GetUnitInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit internal server error response has a 5xx status code
func (o *GetUnitInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get unit internal server error response a status code equal to that given
func (o *GetUnitInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get unit internal server error response
func (o *GetUnitInternalServerError) Code() int {
	return 500
}

func (o *GetUnitInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitInternalServerError %s", 500, payload)
}

func (o *GetUnitInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}][%d] getUnitInternalServerError %s", 500, payload)
}

func (o *GetUnitInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
