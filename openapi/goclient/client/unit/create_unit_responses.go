// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// CreateUnitReader is a Reader for the CreateUnit structure.
type CreateUnitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUnitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUnitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateUnitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateUnitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUnitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateUnitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /space/{space_id}/unit] CreateUnit", response, response.Code())
	}
}

// NewCreateUnitOK creates a CreateUnitOK with default headers values
func NewCreateUnitOK() *CreateUnitOK {
	return &CreateUnitOK{}
}

/*
CreateUnitOK describes a response with status code 200, with default header values.

OK
*/
type CreateUnitOK struct {
	Payload *models.ModelsUnit
}

// IsSuccess returns true when this create unit o k response has a 2xx status code
func (o *CreateUnitOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create unit o k response has a 3xx status code
func (o *CreateUnitOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create unit o k response has a 4xx status code
func (o *CreateUnitOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create unit o k response has a 5xx status code
func (o *CreateUnitOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create unit o k response a status code equal to that given
func (o *CreateUnitOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create unit o k response
func (o *CreateUnitOK) Code() int {
	return 200
}

func (o *CreateUnitOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitOK %s", 200, payload)
}

func (o *CreateUnitOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitOK %s", 200, payload)
}

func (o *CreateUnitOK) GetPayload() *models.ModelsUnit {
	return o.Payload
}

func (o *CreateUnitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsUnit)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnitBadRequest creates a CreateUnitBadRequest with default headers values
func NewCreateUnitBadRequest() *CreateUnitBadRequest {
	return &CreateUnitBadRequest{}
}

/*
CreateUnitBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateUnitBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create unit bad request response has a 2xx status code
func (o *CreateUnitBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create unit bad request response has a 3xx status code
func (o *CreateUnitBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create unit bad request response has a 4xx status code
func (o *CreateUnitBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create unit bad request response has a 5xx status code
func (o *CreateUnitBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create unit bad request response a status code equal to that given
func (o *CreateUnitBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create unit bad request response
func (o *CreateUnitBadRequest) Code() int {
	return 400
}

func (o *CreateUnitBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitBadRequest %s", 400, payload)
}

func (o *CreateUnitBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitBadRequest %s", 400, payload)
}

func (o *CreateUnitBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateUnitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnitUnauthorized creates a CreateUnitUnauthorized with default headers values
func NewCreateUnitUnauthorized() *CreateUnitUnauthorized {
	return &CreateUnitUnauthorized{}
}

/*
CreateUnitUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateUnitUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create unit unauthorized response has a 2xx status code
func (o *CreateUnitUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create unit unauthorized response has a 3xx status code
func (o *CreateUnitUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create unit unauthorized response has a 4xx status code
func (o *CreateUnitUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create unit unauthorized response has a 5xx status code
func (o *CreateUnitUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create unit unauthorized response a status code equal to that given
func (o *CreateUnitUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create unit unauthorized response
func (o *CreateUnitUnauthorized) Code() int {
	return 401
}

func (o *CreateUnitUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitUnauthorized %s", 401, payload)
}

func (o *CreateUnitUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitUnauthorized %s", 401, payload)
}

func (o *CreateUnitUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateUnitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnitForbidden creates a CreateUnitForbidden with default headers values
func NewCreateUnitForbidden() *CreateUnitForbidden {
	return &CreateUnitForbidden{}
}

/*
CreateUnitForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateUnitForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create unit forbidden response has a 2xx status code
func (o *CreateUnitForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create unit forbidden response has a 3xx status code
func (o *CreateUnitForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create unit forbidden response has a 4xx status code
func (o *CreateUnitForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create unit forbidden response has a 5xx status code
func (o *CreateUnitForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create unit forbidden response a status code equal to that given
func (o *CreateUnitForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create unit forbidden response
func (o *CreateUnitForbidden) Code() int {
	return 403
}

func (o *CreateUnitForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitForbidden %s", 403, payload)
}

func (o *CreateUnitForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitForbidden %s", 403, payload)
}

func (o *CreateUnitForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateUnitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUnitInternalServerError creates a CreateUnitInternalServerError with default headers values
func NewCreateUnitInternalServerError() *CreateUnitInternalServerError {
	return &CreateUnitInternalServerError{}
}

/*
CreateUnitInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateUnitInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this create unit internal server error response has a 2xx status code
func (o *CreateUnitInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create unit internal server error response has a 3xx status code
func (o *CreateUnitInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create unit internal server error response has a 4xx status code
func (o *CreateUnitInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create unit internal server error response has a 5xx status code
func (o *CreateUnitInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create unit internal server error response a status code equal to that given
func (o *CreateUnitInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create unit internal server error response
func (o *CreateUnitInternalServerError) Code() int {
	return 500
}

func (o *CreateUnitInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitInternalServerError %s", 500, payload)
}

func (o *CreateUnitInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /space/{space_id}/unit][%d] createUnitInternalServerError %s", 500, payload)
}

func (o *CreateUnitInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *CreateUnitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
