// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListExtendedUnitsReader is a Reader for the ListExtendedUnits structure.
type ListExtendedUnitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListExtendedUnitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListExtendedUnitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListExtendedUnitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListExtendedUnitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListExtendedUnitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListExtendedUnitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/extended] ListExtendedUnits", response, response.Code())
	}
}

// NewListExtendedUnitsOK creates a ListExtendedUnitsOK with default headers values
func NewListExtendedUnitsOK() *ListExtendedUnitsOK {
	return &ListExtendedUnitsOK{}
}

/*
ListExtendedUnitsOK describes a response with status code 200, with default header values.

OK
*/
type ListExtendedUnitsOK struct {
	Payload []*models.ModelsExtendedUnit
}

// IsSuccess returns true when this list extended units o k response has a 2xx status code
func (o *ListExtendedUnitsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list extended units o k response has a 3xx status code
func (o *ListExtendedUnitsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list extended units o k response has a 4xx status code
func (o *ListExtendedUnitsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list extended units o k response has a 5xx status code
func (o *ListExtendedUnitsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list extended units o k response a status code equal to that given
func (o *ListExtendedUnitsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list extended units o k response
func (o *ListExtendedUnitsOK) Code() int {
	return 200
}

func (o *ListExtendedUnitsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsOK %s", 200, payload)
}

func (o *ListExtendedUnitsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsOK %s", 200, payload)
}

func (o *ListExtendedUnitsOK) GetPayload() []*models.ModelsExtendedUnit {
	return o.Payload
}

func (o *ListExtendedUnitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExtendedUnitsBadRequest creates a ListExtendedUnitsBadRequest with default headers values
func NewListExtendedUnitsBadRequest() *ListExtendedUnitsBadRequest {
	return &ListExtendedUnitsBadRequest{}
}

/*
ListExtendedUnitsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListExtendedUnitsBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list extended units bad request response has a 2xx status code
func (o *ListExtendedUnitsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list extended units bad request response has a 3xx status code
func (o *ListExtendedUnitsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list extended units bad request response has a 4xx status code
func (o *ListExtendedUnitsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list extended units bad request response has a 5xx status code
func (o *ListExtendedUnitsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list extended units bad request response a status code equal to that given
func (o *ListExtendedUnitsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list extended units bad request response
func (o *ListExtendedUnitsBadRequest) Code() int {
	return 400
}

func (o *ListExtendedUnitsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsBadRequest %s", 400, payload)
}

func (o *ListExtendedUnitsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsBadRequest %s", 400, payload)
}

func (o *ListExtendedUnitsBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListExtendedUnitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExtendedUnitsUnauthorized creates a ListExtendedUnitsUnauthorized with default headers values
func NewListExtendedUnitsUnauthorized() *ListExtendedUnitsUnauthorized {
	return &ListExtendedUnitsUnauthorized{}
}

/*
ListExtendedUnitsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListExtendedUnitsUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list extended units unauthorized response has a 2xx status code
func (o *ListExtendedUnitsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list extended units unauthorized response has a 3xx status code
func (o *ListExtendedUnitsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list extended units unauthorized response has a 4xx status code
func (o *ListExtendedUnitsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list extended units unauthorized response has a 5xx status code
func (o *ListExtendedUnitsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list extended units unauthorized response a status code equal to that given
func (o *ListExtendedUnitsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list extended units unauthorized response
func (o *ListExtendedUnitsUnauthorized) Code() int {
	return 401
}

func (o *ListExtendedUnitsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsUnauthorized %s", 401, payload)
}

func (o *ListExtendedUnitsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsUnauthorized %s", 401, payload)
}

func (o *ListExtendedUnitsUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListExtendedUnitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExtendedUnitsForbidden creates a ListExtendedUnitsForbidden with default headers values
func NewListExtendedUnitsForbidden() *ListExtendedUnitsForbidden {
	return &ListExtendedUnitsForbidden{}
}

/*
ListExtendedUnitsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListExtendedUnitsForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list extended units forbidden response has a 2xx status code
func (o *ListExtendedUnitsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list extended units forbidden response has a 3xx status code
func (o *ListExtendedUnitsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list extended units forbidden response has a 4xx status code
func (o *ListExtendedUnitsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list extended units forbidden response has a 5xx status code
func (o *ListExtendedUnitsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list extended units forbidden response a status code equal to that given
func (o *ListExtendedUnitsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list extended units forbidden response
func (o *ListExtendedUnitsForbidden) Code() int {
	return 403
}

func (o *ListExtendedUnitsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsForbidden %s", 403, payload)
}

func (o *ListExtendedUnitsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsForbidden %s", 403, payload)
}

func (o *ListExtendedUnitsForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListExtendedUnitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExtendedUnitsInternalServerError creates a ListExtendedUnitsInternalServerError with default headers values
func NewListExtendedUnitsInternalServerError() *ListExtendedUnitsInternalServerError {
	return &ListExtendedUnitsInternalServerError{}
}

/*
ListExtendedUnitsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListExtendedUnitsInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list extended units internal server error response has a 2xx status code
func (o *ListExtendedUnitsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list extended units internal server error response has a 3xx status code
func (o *ListExtendedUnitsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list extended units internal server error response has a 4xx status code
func (o *ListExtendedUnitsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list extended units internal server error response has a 5xx status code
func (o *ListExtendedUnitsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list extended units internal server error response a status code equal to that given
func (o *ListExtendedUnitsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list extended units internal server error response
func (o *ListExtendedUnitsInternalServerError) Code() int {
	return 500
}

func (o *ListExtendedUnitsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsInternalServerError %s", 500, payload)
}

func (o *ListExtendedUnitsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/extended][%d] listExtendedUnitsInternalServerError %s", 500, payload)
}

func (o *ListExtendedUnitsInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListExtendedUnitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
