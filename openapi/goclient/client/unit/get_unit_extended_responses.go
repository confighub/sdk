// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetUnitExtendedReader is a Reader for the GetUnitExtended structure.
type GetUnitExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUnitExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUnitExtendedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUnitExtendedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUnitExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUnitExtendedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUnitExtendedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUnitExtendedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit/{unit_id}/extended] GetUnitExtended", response, response.Code())
	}
}

// NewGetUnitExtendedOK creates a GetUnitExtendedOK with default headers values
func NewGetUnitExtendedOK() *GetUnitExtendedOK {
	return &GetUnitExtendedOK{}
}

/*
GetUnitExtendedOK describes a response with status code 200, with default header values.

OK
*/
type GetUnitExtendedOK struct {
	Payload *models.ModelsUnitExtended
}

// IsSuccess returns true when this get unit extended o k response has a 2xx status code
func (o *GetUnitExtendedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get unit extended o k response has a 3xx status code
func (o *GetUnitExtendedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit extended o k response has a 4xx status code
func (o *GetUnitExtendedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit extended o k response has a 5xx status code
func (o *GetUnitExtendedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit extended o k response a status code equal to that given
func (o *GetUnitExtendedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get unit extended o k response
func (o *GetUnitExtendedOK) Code() int {
	return 200
}

func (o *GetUnitExtendedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedOK %s", 200, payload)
}

func (o *GetUnitExtendedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedOK %s", 200, payload)
}

func (o *GetUnitExtendedOK) GetPayload() *models.ModelsUnitExtended {
	return o.Payload
}

func (o *GetUnitExtendedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsUnitExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitExtendedBadRequest creates a GetUnitExtendedBadRequest with default headers values
func NewGetUnitExtendedBadRequest() *GetUnitExtendedBadRequest {
	return &GetUnitExtendedBadRequest{}
}

/*
GetUnitExtendedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUnitExtendedBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit extended bad request response has a 2xx status code
func (o *GetUnitExtendedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit extended bad request response has a 3xx status code
func (o *GetUnitExtendedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit extended bad request response has a 4xx status code
func (o *GetUnitExtendedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit extended bad request response has a 5xx status code
func (o *GetUnitExtendedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit extended bad request response a status code equal to that given
func (o *GetUnitExtendedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get unit extended bad request response
func (o *GetUnitExtendedBadRequest) Code() int {
	return 400
}

func (o *GetUnitExtendedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedBadRequest %s", 400, payload)
}

func (o *GetUnitExtendedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedBadRequest %s", 400, payload)
}

func (o *GetUnitExtendedBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitExtendedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitExtendedUnauthorized creates a GetUnitExtendedUnauthorized with default headers values
func NewGetUnitExtendedUnauthorized() *GetUnitExtendedUnauthorized {
	return &GetUnitExtendedUnauthorized{}
}

/*
GetUnitExtendedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetUnitExtendedUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit extended unauthorized response has a 2xx status code
func (o *GetUnitExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit extended unauthorized response has a 3xx status code
func (o *GetUnitExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit extended unauthorized response has a 4xx status code
func (o *GetUnitExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit extended unauthorized response has a 5xx status code
func (o *GetUnitExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit extended unauthorized response a status code equal to that given
func (o *GetUnitExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get unit extended unauthorized response
func (o *GetUnitExtendedUnauthorized) Code() int {
	return 401
}

func (o *GetUnitExtendedUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedUnauthorized %s", 401, payload)
}

func (o *GetUnitExtendedUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedUnauthorized %s", 401, payload)
}

func (o *GetUnitExtendedUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitExtendedForbidden creates a GetUnitExtendedForbidden with default headers values
func NewGetUnitExtendedForbidden() *GetUnitExtendedForbidden {
	return &GetUnitExtendedForbidden{}
}

/*
GetUnitExtendedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUnitExtendedForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit extended forbidden response has a 2xx status code
func (o *GetUnitExtendedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit extended forbidden response has a 3xx status code
func (o *GetUnitExtendedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit extended forbidden response has a 4xx status code
func (o *GetUnitExtendedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit extended forbidden response has a 5xx status code
func (o *GetUnitExtendedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit extended forbidden response a status code equal to that given
func (o *GetUnitExtendedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get unit extended forbidden response
func (o *GetUnitExtendedForbidden) Code() int {
	return 403
}

func (o *GetUnitExtendedForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedForbidden %s", 403, payload)
}

func (o *GetUnitExtendedForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedForbidden %s", 403, payload)
}

func (o *GetUnitExtendedForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitExtendedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitExtendedNotFound creates a GetUnitExtendedNotFound with default headers values
func NewGetUnitExtendedNotFound() *GetUnitExtendedNotFound {
	return &GetUnitExtendedNotFound{}
}

/*
GetUnitExtendedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUnitExtendedNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit extended not found response has a 2xx status code
func (o *GetUnitExtendedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit extended not found response has a 3xx status code
func (o *GetUnitExtendedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit extended not found response has a 4xx status code
func (o *GetUnitExtendedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get unit extended not found response has a 5xx status code
func (o *GetUnitExtendedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get unit extended not found response a status code equal to that given
func (o *GetUnitExtendedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get unit extended not found response
func (o *GetUnitExtendedNotFound) Code() int {
	return 404
}

func (o *GetUnitExtendedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedNotFound %s", 404, payload)
}

func (o *GetUnitExtendedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedNotFound %s", 404, payload)
}

func (o *GetUnitExtendedNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitExtendedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUnitExtendedInternalServerError creates a GetUnitExtendedInternalServerError with default headers values
func NewGetUnitExtendedInternalServerError() *GetUnitExtendedInternalServerError {
	return &GetUnitExtendedInternalServerError{}
}

/*
GetUnitExtendedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUnitExtendedInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get unit extended internal server error response has a 2xx status code
func (o *GetUnitExtendedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get unit extended internal server error response has a 3xx status code
func (o *GetUnitExtendedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get unit extended internal server error response has a 4xx status code
func (o *GetUnitExtendedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get unit extended internal server error response has a 5xx status code
func (o *GetUnitExtendedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get unit extended internal server error response a status code equal to that given
func (o *GetUnitExtendedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get unit extended internal server error response
func (o *GetUnitExtendedInternalServerError) Code() int {
	return 500
}

func (o *GetUnitExtendedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedInternalServerError %s", 500, payload)
}

func (o *GetUnitExtendedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit/{unit_id}/extended][%d] getUnitExtendedInternalServerError %s", 500, payload)
}

func (o *GetUnitExtendedInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetUnitExtendedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
