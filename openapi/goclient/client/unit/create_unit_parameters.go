// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// NewCreateUnitParams creates a new CreateUnitParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateUnitParams() *CreateUnitParams {
	return &CreateUnitParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateUnitParamsWithTimeout creates a new CreateUnitParams object
// with the ability to set a timeout on a request.
func NewCreateUnitParamsWithTimeout(timeout time.Duration) *CreateUnitParams {
	return &CreateUnitParams{
		timeout: timeout,
	}
}

// NewCreateUnitParamsWithContext creates a new CreateUnitParams object
// with the ability to set a context for a request.
func NewCreateUnitParamsWithContext(ctx context.Context) *CreateUnitParams {
	return &CreateUnitParams{
		Context: ctx,
	}
}

// NewCreateUnitParamsWithHTTPClient creates a new CreateUnitParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateUnitParamsWithHTTPClient(client *http.Client) *CreateUnitParams {
	return &CreateUnitParams{
		HTTPClient: client,
	}
}

/*
CreateUnitParams contains all the parameters to send to the API endpoint

	for the create unit operation.

	Typically these are written to a http.Request.
*/
type CreateUnitParams struct {

	/* SpaceID.

	   Space ID
	*/
	SpaceID string

	/* Unit.

	   Unit
	*/
	Unit *models.ModelsUnit

	/* UpstreamSpaceID.

	   Space ID of Unit to clone; defaults to same Space if not present
	*/
	UpstreamSpaceID *string

	/* UpstreamUnitID.

	   Unit ID to clone
	*/
	UpstreamUnitID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create unit params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateUnitParams) WithDefaults() *CreateUnitParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create unit params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateUnitParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create unit params
func (o *CreateUnitParams) WithTimeout(timeout time.Duration) *CreateUnitParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create unit params
func (o *CreateUnitParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create unit params
func (o *CreateUnitParams) WithContext(ctx context.Context) *CreateUnitParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create unit params
func (o *CreateUnitParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create unit params
func (o *CreateUnitParams) WithHTTPClient(client *http.Client) *CreateUnitParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create unit params
func (o *CreateUnitParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSpaceID adds the spaceID to the create unit params
func (o *CreateUnitParams) WithSpaceID(spaceID string) *CreateUnitParams {
	o.SetSpaceID(spaceID)
	return o
}

// SetSpaceID adds the spaceId to the create unit params
func (o *CreateUnitParams) SetSpaceID(spaceID string) {
	o.SpaceID = spaceID
}

// WithUnit adds the unit to the create unit params
func (o *CreateUnitParams) WithUnit(unit *models.ModelsUnit) *CreateUnitParams {
	o.SetUnit(unit)
	return o
}

// SetUnit adds the unit to the create unit params
func (o *CreateUnitParams) SetUnit(unit *models.ModelsUnit) {
	o.Unit = unit
}

// WithUpstreamSpaceID adds the upstreamSpaceID to the create unit params
func (o *CreateUnitParams) WithUpstreamSpaceID(upstreamSpaceID *string) *CreateUnitParams {
	o.SetUpstreamSpaceID(upstreamSpaceID)
	return o
}

// SetUpstreamSpaceID adds the upstreamSpaceId to the create unit params
func (o *CreateUnitParams) SetUpstreamSpaceID(upstreamSpaceID *string) {
	o.UpstreamSpaceID = upstreamSpaceID
}

// WithUpstreamUnitID adds the upstreamUnitID to the create unit params
func (o *CreateUnitParams) WithUpstreamUnitID(upstreamUnitID *string) *CreateUnitParams {
	o.SetUpstreamUnitID(upstreamUnitID)
	return o
}

// SetUpstreamUnitID adds the upstreamUnitId to the create unit params
func (o *CreateUnitParams) SetUpstreamUnitID(upstreamUnitID *string) {
	o.UpstreamUnitID = upstreamUnitID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateUnitParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param space_id
	if err := r.SetPathParam("space_id", o.SpaceID); err != nil {
		return err
	}
	if o.Unit != nil {
		if err := r.SetBodyParam(o.Unit); err != nil {
			return err
		}
	}

	if o.UpstreamSpaceID != nil {

		// query param upstream_space_id
		var qrUpstreamSpaceID string

		if o.UpstreamSpaceID != nil {
			qrUpstreamSpaceID = *o.UpstreamSpaceID
		}
		qUpstreamSpaceID := qrUpstreamSpaceID
		if qUpstreamSpaceID != "" {

			if err := r.SetQueryParam("upstream_space_id", qUpstreamSpaceID); err != nil {
				return err
			}
		}
	}

	if o.UpstreamUnitID != nil {

		// query param upstream_unit_id
		var qrUpstreamUnitID string

		if o.UpstreamUnitID != nil {
			qrUpstreamUnitID = *o.UpstreamUnitID
		}
		qUpstreamUnitID := qrUpstreamUnitID
		if qUpstreamUnitID != "" {

			if err := r.SetQueryParam("upstream_unit_id", qUpstreamUnitID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
