// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package unit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListUnitsReader is a Reader for the ListUnits structure.
type ListUnitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUnitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUnitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListUnitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListUnitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUnitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListUnitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/unit] ListUnits", response, response.Code())
	}
}

// NewListUnitsOK creates a ListUnitsOK with default headers values
func NewListUnitsOK() *ListUnitsOK {
	return &ListUnitsOK{}
}

/*
ListUnitsOK describes a response with status code 200, with default header values.

OK
*/
type ListUnitsOK struct {
	Payload []*models.ModelsUnit
}

// IsSuccess returns true when this list units o k response has a 2xx status code
func (o *ListUnitsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list units o k response has a 3xx status code
func (o *ListUnitsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list units o k response has a 4xx status code
func (o *ListUnitsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list units o k response has a 5xx status code
func (o *ListUnitsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list units o k response a status code equal to that given
func (o *ListUnitsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list units o k response
func (o *ListUnitsOK) Code() int {
	return 200
}

func (o *ListUnitsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsOK %s", 200, payload)
}

func (o *ListUnitsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsOK %s", 200, payload)
}

func (o *ListUnitsOK) GetPayload() []*models.ModelsUnit {
	return o.Payload
}

func (o *ListUnitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitsBadRequest creates a ListUnitsBadRequest with default headers values
func NewListUnitsBadRequest() *ListUnitsBadRequest {
	return &ListUnitsBadRequest{}
}

/*
ListUnitsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListUnitsBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list units bad request response has a 2xx status code
func (o *ListUnitsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list units bad request response has a 3xx status code
func (o *ListUnitsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list units bad request response has a 4xx status code
func (o *ListUnitsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list units bad request response has a 5xx status code
func (o *ListUnitsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list units bad request response a status code equal to that given
func (o *ListUnitsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list units bad request response
func (o *ListUnitsBadRequest) Code() int {
	return 400
}

func (o *ListUnitsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsBadRequest %s", 400, payload)
}

func (o *ListUnitsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsBadRequest %s", 400, payload)
}

func (o *ListUnitsBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitsUnauthorized creates a ListUnitsUnauthorized with default headers values
func NewListUnitsUnauthorized() *ListUnitsUnauthorized {
	return &ListUnitsUnauthorized{}
}

/*
ListUnitsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUnitsUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list units unauthorized response has a 2xx status code
func (o *ListUnitsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list units unauthorized response has a 3xx status code
func (o *ListUnitsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list units unauthorized response has a 4xx status code
func (o *ListUnitsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list units unauthorized response has a 5xx status code
func (o *ListUnitsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list units unauthorized response a status code equal to that given
func (o *ListUnitsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list units unauthorized response
func (o *ListUnitsUnauthorized) Code() int {
	return 401
}

func (o *ListUnitsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsUnauthorized %s", 401, payload)
}

func (o *ListUnitsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsUnauthorized %s", 401, payload)
}

func (o *ListUnitsUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitsForbidden creates a ListUnitsForbidden with default headers values
func NewListUnitsForbidden() *ListUnitsForbidden {
	return &ListUnitsForbidden{}
}

/*
ListUnitsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUnitsForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list units forbidden response has a 2xx status code
func (o *ListUnitsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list units forbidden response has a 3xx status code
func (o *ListUnitsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list units forbidden response has a 4xx status code
func (o *ListUnitsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list units forbidden response has a 5xx status code
func (o *ListUnitsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list units forbidden response a status code equal to that given
func (o *ListUnitsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list units forbidden response
func (o *ListUnitsForbidden) Code() int {
	return 403
}

func (o *ListUnitsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsForbidden %s", 403, payload)
}

func (o *ListUnitsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsForbidden %s", 403, payload)
}

func (o *ListUnitsForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUnitsInternalServerError creates a ListUnitsInternalServerError with default headers values
func NewListUnitsInternalServerError() *ListUnitsInternalServerError {
	return &ListUnitsInternalServerError{}
}

/*
ListUnitsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListUnitsInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list units internal server error response has a 2xx status code
func (o *ListUnitsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list units internal server error response has a 3xx status code
func (o *ListUnitsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list units internal server error response has a 4xx status code
func (o *ListUnitsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list units internal server error response has a 5xx status code
func (o *ListUnitsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list units internal server error response a status code equal to that given
func (o *ListUnitsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list units internal server error response
func (o *ListUnitsInternalServerError) Code() int {
	return 500
}

func (o *ListUnitsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsInternalServerError %s", 500, payload)
}

func (o *ListUnitsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/unit][%d] listUnitsInternalServerError %s", 500, payload)
}

func (o *ListUnitsInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListUnitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
