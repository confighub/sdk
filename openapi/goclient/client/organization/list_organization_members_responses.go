// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListOrganizationMembersReader is a Reader for the ListOrganizationMembers structure.
type ListOrganizationMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOrganizationMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOrganizationMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOrganizationMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListOrganizationMembersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListOrganizationMembersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListOrganizationMembersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organization/{organization_id}/organization_member] ListOrganizationMembers", response, response.Code())
	}
}

// NewListOrganizationMembersOK creates a ListOrganizationMembersOK with default headers values
func NewListOrganizationMembersOK() *ListOrganizationMembersOK {
	return &ListOrganizationMembersOK{}
}

/*
ListOrganizationMembersOK describes a response with status code 200, with default header values.

OK
*/
type ListOrganizationMembersOK struct {
	Payload []*models.ModelsOrganizationMember
}

// IsSuccess returns true when this list organization members o k response has a 2xx status code
func (o *ListOrganizationMembersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list organization members o k response has a 3xx status code
func (o *ListOrganizationMembersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization members o k response has a 4xx status code
func (o *ListOrganizationMembersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list organization members o k response has a 5xx status code
func (o *ListOrganizationMembersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization members o k response a status code equal to that given
func (o *ListOrganizationMembersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list organization members o k response
func (o *ListOrganizationMembersOK) Code() int {
	return 200
}

func (o *ListOrganizationMembersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersOK %s", 200, payload)
}

func (o *ListOrganizationMembersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersOK %s", 200, payload)
}

func (o *ListOrganizationMembersOK) GetPayload() []*models.ModelsOrganizationMember {
	return o.Payload
}

func (o *ListOrganizationMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationMembersBadRequest creates a ListOrganizationMembersBadRequest with default headers values
func NewListOrganizationMembersBadRequest() *ListOrganizationMembersBadRequest {
	return &ListOrganizationMembersBadRequest{}
}

/*
ListOrganizationMembersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListOrganizationMembersBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list organization members bad request response has a 2xx status code
func (o *ListOrganizationMembersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization members bad request response has a 3xx status code
func (o *ListOrganizationMembersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization members bad request response has a 4xx status code
func (o *ListOrganizationMembersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization members bad request response has a 5xx status code
func (o *ListOrganizationMembersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization members bad request response a status code equal to that given
func (o *ListOrganizationMembersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list organization members bad request response
func (o *ListOrganizationMembersBadRequest) Code() int {
	return 400
}

func (o *ListOrganizationMembersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersBadRequest %s", 400, payload)
}

func (o *ListOrganizationMembersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersBadRequest %s", 400, payload)
}

func (o *ListOrganizationMembersBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListOrganizationMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationMembersUnauthorized creates a ListOrganizationMembersUnauthorized with default headers values
func NewListOrganizationMembersUnauthorized() *ListOrganizationMembersUnauthorized {
	return &ListOrganizationMembersUnauthorized{}
}

/*
ListOrganizationMembersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListOrganizationMembersUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list organization members unauthorized response has a 2xx status code
func (o *ListOrganizationMembersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization members unauthorized response has a 3xx status code
func (o *ListOrganizationMembersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization members unauthorized response has a 4xx status code
func (o *ListOrganizationMembersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization members unauthorized response has a 5xx status code
func (o *ListOrganizationMembersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization members unauthorized response a status code equal to that given
func (o *ListOrganizationMembersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list organization members unauthorized response
func (o *ListOrganizationMembersUnauthorized) Code() int {
	return 401
}

func (o *ListOrganizationMembersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersUnauthorized %s", 401, payload)
}

func (o *ListOrganizationMembersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersUnauthorized %s", 401, payload)
}

func (o *ListOrganizationMembersUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListOrganizationMembersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationMembersForbidden creates a ListOrganizationMembersForbidden with default headers values
func NewListOrganizationMembersForbidden() *ListOrganizationMembersForbidden {
	return &ListOrganizationMembersForbidden{}
}

/*
ListOrganizationMembersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListOrganizationMembersForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list organization members forbidden response has a 2xx status code
func (o *ListOrganizationMembersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization members forbidden response has a 3xx status code
func (o *ListOrganizationMembersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization members forbidden response has a 4xx status code
func (o *ListOrganizationMembersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list organization members forbidden response has a 5xx status code
func (o *ListOrganizationMembersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list organization members forbidden response a status code equal to that given
func (o *ListOrganizationMembersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list organization members forbidden response
func (o *ListOrganizationMembersForbidden) Code() int {
	return 403
}

func (o *ListOrganizationMembersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersForbidden %s", 403, payload)
}

func (o *ListOrganizationMembersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersForbidden %s", 403, payload)
}

func (o *ListOrganizationMembersForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListOrganizationMembersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOrganizationMembersInternalServerError creates a ListOrganizationMembersInternalServerError with default headers values
func NewListOrganizationMembersInternalServerError() *ListOrganizationMembersInternalServerError {
	return &ListOrganizationMembersInternalServerError{}
}

/*
ListOrganizationMembersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListOrganizationMembersInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list organization members internal server error response has a 2xx status code
func (o *ListOrganizationMembersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list organization members internal server error response has a 3xx status code
func (o *ListOrganizationMembersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list organization members internal server error response has a 4xx status code
func (o *ListOrganizationMembersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list organization members internal server error response has a 5xx status code
func (o *ListOrganizationMembersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list organization members internal server error response a status code equal to that given
func (o *ListOrganizationMembersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list organization members internal server error response
func (o *ListOrganizationMembersInternalServerError) Code() int {
	return 500
}

func (o *ListOrganizationMembersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersInternalServerError %s", 500, payload)
}

func (o *ListOrganizationMembersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/organization_member][%d] listOrganizationMembersInternalServerError %s", 500, payload)
}

func (o *ListOrganizationMembersInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListOrganizationMembersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
