// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetOrganizationExtendedReader is a Reader for the GetOrganizationExtended structure.
type GetOrganizationExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationExtendedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationExtendedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrganizationExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationExtendedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationExtendedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationExtendedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organization/{organization_id}/extended] GetOrganizationExtended", response, response.Code())
	}
}

// NewGetOrganizationExtendedOK creates a GetOrganizationExtendedOK with default headers values
func NewGetOrganizationExtendedOK() *GetOrganizationExtendedOK {
	return &GetOrganizationExtendedOK{}
}

/*
GetOrganizationExtendedOK describes a response with status code 200, with default header values.

OK
*/
type GetOrganizationExtendedOK struct {
	Payload *models.ModelsOrganizationExtended
}

// IsSuccess returns true when this get organization extended o k response has a 2xx status code
func (o *GetOrganizationExtendedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization extended o k response has a 3xx status code
func (o *GetOrganizationExtendedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization extended o k response has a 4xx status code
func (o *GetOrganizationExtendedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization extended o k response has a 5xx status code
func (o *GetOrganizationExtendedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization extended o k response a status code equal to that given
func (o *GetOrganizationExtendedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organization extended o k response
func (o *GetOrganizationExtendedOK) Code() int {
	return 200
}

func (o *GetOrganizationExtendedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedOK %s", 200, payload)
}

func (o *GetOrganizationExtendedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedOK %s", 200, payload)
}

func (o *GetOrganizationExtendedOK) GetPayload() *models.ModelsOrganizationExtended {
	return o.Payload
}

func (o *GetOrganizationExtendedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsOrganizationExtended)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationExtendedBadRequest creates a GetOrganizationExtendedBadRequest with default headers values
func NewGetOrganizationExtendedBadRequest() *GetOrganizationExtendedBadRequest {
	return &GetOrganizationExtendedBadRequest{}
}

/*
GetOrganizationExtendedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOrganizationExtendedBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get organization extended bad request response has a 2xx status code
func (o *GetOrganizationExtendedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization extended bad request response has a 3xx status code
func (o *GetOrganizationExtendedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization extended bad request response has a 4xx status code
func (o *GetOrganizationExtendedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization extended bad request response has a 5xx status code
func (o *GetOrganizationExtendedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization extended bad request response a status code equal to that given
func (o *GetOrganizationExtendedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get organization extended bad request response
func (o *GetOrganizationExtendedBadRequest) Code() int {
	return 400
}

func (o *GetOrganizationExtendedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedBadRequest %s", 400, payload)
}

func (o *GetOrganizationExtendedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedBadRequest %s", 400, payload)
}

func (o *GetOrganizationExtendedBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetOrganizationExtendedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationExtendedUnauthorized creates a GetOrganizationExtendedUnauthorized with default headers values
func NewGetOrganizationExtendedUnauthorized() *GetOrganizationExtendedUnauthorized {
	return &GetOrganizationExtendedUnauthorized{}
}

/*
GetOrganizationExtendedUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOrganizationExtendedUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get organization extended unauthorized response has a 2xx status code
func (o *GetOrganizationExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization extended unauthorized response has a 3xx status code
func (o *GetOrganizationExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization extended unauthorized response has a 4xx status code
func (o *GetOrganizationExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization extended unauthorized response has a 5xx status code
func (o *GetOrganizationExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization extended unauthorized response a status code equal to that given
func (o *GetOrganizationExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get organization extended unauthorized response
func (o *GetOrganizationExtendedUnauthorized) Code() int {
	return 401
}

func (o *GetOrganizationExtendedUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedUnauthorized %s", 401, payload)
}

func (o *GetOrganizationExtendedUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedUnauthorized %s", 401, payload)
}

func (o *GetOrganizationExtendedUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetOrganizationExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationExtendedForbidden creates a GetOrganizationExtendedForbidden with default headers values
func NewGetOrganizationExtendedForbidden() *GetOrganizationExtendedForbidden {
	return &GetOrganizationExtendedForbidden{}
}

/*
GetOrganizationExtendedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationExtendedForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get organization extended forbidden response has a 2xx status code
func (o *GetOrganizationExtendedForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization extended forbidden response has a 3xx status code
func (o *GetOrganizationExtendedForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization extended forbidden response has a 4xx status code
func (o *GetOrganizationExtendedForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization extended forbidden response has a 5xx status code
func (o *GetOrganizationExtendedForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization extended forbidden response a status code equal to that given
func (o *GetOrganizationExtendedForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organization extended forbidden response
func (o *GetOrganizationExtendedForbidden) Code() int {
	return 403
}

func (o *GetOrganizationExtendedForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedForbidden %s", 403, payload)
}

func (o *GetOrganizationExtendedForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedForbidden %s", 403, payload)
}

func (o *GetOrganizationExtendedForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetOrganizationExtendedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationExtendedNotFound creates a GetOrganizationExtendedNotFound with default headers values
func NewGetOrganizationExtendedNotFound() *GetOrganizationExtendedNotFound {
	return &GetOrganizationExtendedNotFound{}
}

/*
GetOrganizationExtendedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationExtendedNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get organization extended not found response has a 2xx status code
func (o *GetOrganizationExtendedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization extended not found response has a 3xx status code
func (o *GetOrganizationExtendedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization extended not found response has a 4xx status code
func (o *GetOrganizationExtendedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization extended not found response has a 5xx status code
func (o *GetOrganizationExtendedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization extended not found response a status code equal to that given
func (o *GetOrganizationExtendedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organization extended not found response
func (o *GetOrganizationExtendedNotFound) Code() int {
	return 404
}

func (o *GetOrganizationExtendedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedNotFound %s", 404, payload)
}

func (o *GetOrganizationExtendedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedNotFound %s", 404, payload)
}

func (o *GetOrganizationExtendedNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetOrganizationExtendedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationExtendedInternalServerError creates a GetOrganizationExtendedInternalServerError with default headers values
func NewGetOrganizationExtendedInternalServerError() *GetOrganizationExtendedInternalServerError {
	return &GetOrganizationExtendedInternalServerError{}
}

/*
GetOrganizationExtendedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOrganizationExtendedInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get organization extended internal server error response has a 2xx status code
func (o *GetOrganizationExtendedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization extended internal server error response has a 3xx status code
func (o *GetOrganizationExtendedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization extended internal server error response has a 4xx status code
func (o *GetOrganizationExtendedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization extended internal server error response has a 5xx status code
func (o *GetOrganizationExtendedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organization extended internal server error response a status code equal to that given
func (o *GetOrganizationExtendedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organization extended internal server error response
func (o *GetOrganizationExtendedInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationExtendedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedInternalServerError %s", 500, payload)
}

func (o *GetOrganizationExtendedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organization/{organization_id}/extended][%d] getOrganizationExtendedInternalServerError %s", 500, payload)
}

func (o *GetOrganizationExtendedInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetOrganizationExtendedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
