// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// DeleteTriggerReader is a Reader for the DeleteTrigger structure.
type DeleteTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTriggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTriggerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteTriggerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTriggerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTriggerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTriggerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /space/{space_id}/trigger/{trigger_id}] DeleteTrigger", response, response.Code())
	}
}

// NewDeleteTriggerOK creates a DeleteTriggerOK with default headers values
func NewDeleteTriggerOK() *DeleteTriggerOK {
	return &DeleteTriggerOK{}
}

/*
DeleteTriggerOK describes a response with status code 200, with default header values.

Ok
*/
type DeleteTriggerOK struct {
	Payload string
}

// IsSuccess returns true when this delete trigger o k response has a 2xx status code
func (o *DeleteTriggerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete trigger o k response has a 3xx status code
func (o *DeleteTriggerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger o k response has a 4xx status code
func (o *DeleteTriggerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trigger o k response has a 5xx status code
func (o *DeleteTriggerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger o k response a status code equal to that given
func (o *DeleteTriggerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete trigger o k response
func (o *DeleteTriggerOK) Code() int {
	return 200
}

func (o *DeleteTriggerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerOK %s", 200, payload)
}

func (o *DeleteTriggerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerOK %s", 200, payload)
}

func (o *DeleteTriggerOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteTriggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerBadRequest creates a DeleteTriggerBadRequest with default headers values
func NewDeleteTriggerBadRequest() *DeleteTriggerBadRequest {
	return &DeleteTriggerBadRequest{}
}

/*
DeleteTriggerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteTriggerBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete trigger bad request response has a 2xx status code
func (o *DeleteTriggerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger bad request response has a 3xx status code
func (o *DeleteTriggerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger bad request response has a 4xx status code
func (o *DeleteTriggerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger bad request response has a 5xx status code
func (o *DeleteTriggerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger bad request response a status code equal to that given
func (o *DeleteTriggerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete trigger bad request response
func (o *DeleteTriggerBadRequest) Code() int {
	return 400
}

func (o *DeleteTriggerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerBadRequest %s", 400, payload)
}

func (o *DeleteTriggerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerBadRequest %s", 400, payload)
}

func (o *DeleteTriggerBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteTriggerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerUnauthorized creates a DeleteTriggerUnauthorized with default headers values
func NewDeleteTriggerUnauthorized() *DeleteTriggerUnauthorized {
	return &DeleteTriggerUnauthorized{}
}

/*
DeleteTriggerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteTriggerUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete trigger unauthorized response has a 2xx status code
func (o *DeleteTriggerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger unauthorized response has a 3xx status code
func (o *DeleteTriggerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger unauthorized response has a 4xx status code
func (o *DeleteTriggerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger unauthorized response has a 5xx status code
func (o *DeleteTriggerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger unauthorized response a status code equal to that given
func (o *DeleteTriggerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete trigger unauthorized response
func (o *DeleteTriggerUnauthorized) Code() int {
	return 401
}

func (o *DeleteTriggerUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerUnauthorized %s", 401, payload)
}

func (o *DeleteTriggerUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerUnauthorized %s", 401, payload)
}

func (o *DeleteTriggerUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteTriggerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerForbidden creates a DeleteTriggerForbidden with default headers values
func NewDeleteTriggerForbidden() *DeleteTriggerForbidden {
	return &DeleteTriggerForbidden{}
}

/*
DeleteTriggerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteTriggerForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete trigger forbidden response has a 2xx status code
func (o *DeleteTriggerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger forbidden response has a 3xx status code
func (o *DeleteTriggerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger forbidden response has a 4xx status code
func (o *DeleteTriggerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger forbidden response has a 5xx status code
func (o *DeleteTriggerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger forbidden response a status code equal to that given
func (o *DeleteTriggerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete trigger forbidden response
func (o *DeleteTriggerForbidden) Code() int {
	return 403
}

func (o *DeleteTriggerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerForbidden %s", 403, payload)
}

func (o *DeleteTriggerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerForbidden %s", 403, payload)
}

func (o *DeleteTriggerForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteTriggerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerNotFound creates a DeleteTriggerNotFound with default headers values
func NewDeleteTriggerNotFound() *DeleteTriggerNotFound {
	return &DeleteTriggerNotFound{}
}

/*
DeleteTriggerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteTriggerNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete trigger not found response has a 2xx status code
func (o *DeleteTriggerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger not found response has a 3xx status code
func (o *DeleteTriggerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger not found response has a 4xx status code
func (o *DeleteTriggerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger not found response has a 5xx status code
func (o *DeleteTriggerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger not found response a status code equal to that given
func (o *DeleteTriggerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete trigger not found response
func (o *DeleteTriggerNotFound) Code() int {
	return 404
}

func (o *DeleteTriggerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerNotFound %s", 404, payload)
}

func (o *DeleteTriggerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerNotFound %s", 404, payload)
}

func (o *DeleteTriggerNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteTriggerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerInternalServerError creates a DeleteTriggerInternalServerError with default headers values
func NewDeleteTriggerInternalServerError() *DeleteTriggerInternalServerError {
	return &DeleteTriggerInternalServerError{}
}

/*
DeleteTriggerInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteTriggerInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this delete trigger internal server error response has a 2xx status code
func (o *DeleteTriggerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger internal server error response has a 3xx status code
func (o *DeleteTriggerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger internal server error response has a 4xx status code
func (o *DeleteTriggerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trigger internal server error response has a 5xx status code
func (o *DeleteTriggerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete trigger internal server error response a status code equal to that given
func (o *DeleteTriggerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete trigger internal server error response
func (o *DeleteTriggerInternalServerError) Code() int {
	return 500
}

func (o *DeleteTriggerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerInternalServerError %s", 500, payload)
}

func (o *DeleteTriggerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /space/{space_id}/trigger/{trigger_id}][%d] deleteTriggerInternalServerError %s", 500, payload)
}

func (o *DeleteTriggerInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *DeleteTriggerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
