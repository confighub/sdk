// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListTriggersReader is a Reader for the ListTriggers structure.
type ListTriggersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTriggersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTriggersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListTriggersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListTriggersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListTriggersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListTriggersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}/trigger] ListTriggers", response, response.Code())
	}
}

// NewListTriggersOK creates a ListTriggersOK with default headers values
func NewListTriggersOK() *ListTriggersOK {
	return &ListTriggersOK{}
}

/*
ListTriggersOK describes a response with status code 200, with default header values.

OK
*/
type ListTriggersOK struct {
	Payload []*models.ModelsTrigger
}

// IsSuccess returns true when this list triggers o k response has a 2xx status code
func (o *ListTriggersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list triggers o k response has a 3xx status code
func (o *ListTriggersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list triggers o k response has a 4xx status code
func (o *ListTriggersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list triggers o k response has a 5xx status code
func (o *ListTriggersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list triggers o k response a status code equal to that given
func (o *ListTriggersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list triggers o k response
func (o *ListTriggersOK) Code() int {
	return 200
}

func (o *ListTriggersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersOK %s", 200, payload)
}

func (o *ListTriggersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersOK %s", 200, payload)
}

func (o *ListTriggersOK) GetPayload() []*models.ModelsTrigger {
	return o.Payload
}

func (o *ListTriggersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggersBadRequest creates a ListTriggersBadRequest with default headers values
func NewListTriggersBadRequest() *ListTriggersBadRequest {
	return &ListTriggersBadRequest{}
}

/*
ListTriggersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListTriggersBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list triggers bad request response has a 2xx status code
func (o *ListTriggersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list triggers bad request response has a 3xx status code
func (o *ListTriggersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list triggers bad request response has a 4xx status code
func (o *ListTriggersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list triggers bad request response has a 5xx status code
func (o *ListTriggersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list triggers bad request response a status code equal to that given
func (o *ListTriggersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list triggers bad request response
func (o *ListTriggersBadRequest) Code() int {
	return 400
}

func (o *ListTriggersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersBadRequest %s", 400, payload)
}

func (o *ListTriggersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersBadRequest %s", 400, payload)
}

func (o *ListTriggersBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListTriggersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggersUnauthorized creates a ListTriggersUnauthorized with default headers values
func NewListTriggersUnauthorized() *ListTriggersUnauthorized {
	return &ListTriggersUnauthorized{}
}

/*
ListTriggersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListTriggersUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list triggers unauthorized response has a 2xx status code
func (o *ListTriggersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list triggers unauthorized response has a 3xx status code
func (o *ListTriggersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list triggers unauthorized response has a 4xx status code
func (o *ListTriggersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list triggers unauthorized response has a 5xx status code
func (o *ListTriggersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list triggers unauthorized response a status code equal to that given
func (o *ListTriggersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list triggers unauthorized response
func (o *ListTriggersUnauthorized) Code() int {
	return 401
}

func (o *ListTriggersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersUnauthorized %s", 401, payload)
}

func (o *ListTriggersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersUnauthorized %s", 401, payload)
}

func (o *ListTriggersUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListTriggersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggersForbidden creates a ListTriggersForbidden with default headers values
func NewListTriggersForbidden() *ListTriggersForbidden {
	return &ListTriggersForbidden{}
}

/*
ListTriggersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListTriggersForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list triggers forbidden response has a 2xx status code
func (o *ListTriggersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list triggers forbidden response has a 3xx status code
func (o *ListTriggersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list triggers forbidden response has a 4xx status code
func (o *ListTriggersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list triggers forbidden response has a 5xx status code
func (o *ListTriggersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list triggers forbidden response a status code equal to that given
func (o *ListTriggersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list triggers forbidden response
func (o *ListTriggersForbidden) Code() int {
	return 403
}

func (o *ListTriggersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersForbidden %s", 403, payload)
}

func (o *ListTriggersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersForbidden %s", 403, payload)
}

func (o *ListTriggersForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListTriggersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggersInternalServerError creates a ListTriggersInternalServerError with default headers values
func NewListTriggersInternalServerError() *ListTriggersInternalServerError {
	return &ListTriggersInternalServerError{}
}

/*
ListTriggersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListTriggersInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list triggers internal server error response has a 2xx status code
func (o *ListTriggersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list triggers internal server error response has a 3xx status code
func (o *ListTriggersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list triggers internal server error response has a 4xx status code
func (o *ListTriggersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list triggers internal server error response has a 5xx status code
func (o *ListTriggersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list triggers internal server error response a status code equal to that given
func (o *ListTriggersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list triggers internal server error response
func (o *ListTriggersInternalServerError) Code() int {
	return 500
}

func (o *ListTriggersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersInternalServerError %s", 500, payload)
}

func (o *ListTriggersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}/trigger][%d] listTriggersInternalServerError %s", 500, payload)
}

func (o *ListTriggersInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListTriggersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
