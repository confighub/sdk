// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package space

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// NewCreateSpaceParams creates a new CreateSpaceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateSpaceParams() *CreateSpaceParams {
	return &CreateSpaceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateSpaceParamsWithTimeout creates a new CreateSpaceParams object
// with the ability to set a timeout on a request.
func NewCreateSpaceParamsWithTimeout(timeout time.Duration) *CreateSpaceParams {
	return &CreateSpaceParams{
		timeout: timeout,
	}
}

// NewCreateSpaceParamsWithContext creates a new CreateSpaceParams object
// with the ability to set a context for a request.
func NewCreateSpaceParamsWithContext(ctx context.Context) *CreateSpaceParams {
	return &CreateSpaceParams{
		Context: ctx,
	}
}

// NewCreateSpaceParamsWithHTTPClient creates a new CreateSpaceParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateSpaceParamsWithHTTPClient(client *http.Client) *CreateSpaceParams {
	return &CreateSpaceParams{
		HTTPClient: client,
	}
}

/*
CreateSpaceParams contains all the parameters to send to the API endpoint

	for the create space operation.

	Typically these are written to a http.Request.
*/
type CreateSpaceParams struct {

	/* Space.

	   Space
	*/
	Space *models.ModelsSpace

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create space params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateSpaceParams) WithDefaults() *CreateSpaceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create space params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateSpaceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create space params
func (o *CreateSpaceParams) WithTimeout(timeout time.Duration) *CreateSpaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create space params
func (o *CreateSpaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create space params
func (o *CreateSpaceParams) WithContext(ctx context.Context) *CreateSpaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create space params
func (o *CreateSpaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create space params
func (o *CreateSpaceParams) WithHTTPClient(client *http.Client) *CreateSpaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create space params
func (o *CreateSpaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSpace adds the space to the create space params
func (o *CreateSpaceParams) WithSpace(space *models.ModelsSpace) *CreateSpaceParams {
	o.SetSpace(space)
	return o
}

// SetSpace adds the space to the create space params
func (o *CreateSpaceParams) SetSpace(space *models.ModelsSpace) {
	o.Space = space
}

// WriteToRequest writes these params to a swagger request
func (o *CreateSpaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Space != nil {
		if err := r.SetBodyParam(o.Space); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
