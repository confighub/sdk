// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package space

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// ListSpacesReader is a Reader for the ListSpaces structure.
type ListSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListSpacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSpacesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListSpacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space] ListSpaces", response, response.Code())
	}
}

// NewListSpacesOK creates a ListSpacesOK with default headers values
func NewListSpacesOK() *ListSpacesOK {
	return &ListSpacesOK{}
}

/*
ListSpacesOK describes a response with status code 200, with default header values.

OK
*/
type ListSpacesOK struct {
	Payload []*models.ModelsSpace
}

// IsSuccess returns true when this list spaces o k response has a 2xx status code
func (o *ListSpacesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list spaces o k response has a 3xx status code
func (o *ListSpacesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list spaces o k response has a 4xx status code
func (o *ListSpacesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list spaces o k response has a 5xx status code
func (o *ListSpacesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list spaces o k response a status code equal to that given
func (o *ListSpacesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list spaces o k response
func (o *ListSpacesOK) Code() int {
	return 200
}

func (o *ListSpacesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesOK %s", 200, payload)
}

func (o *ListSpacesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesOK %s", 200, payload)
}

func (o *ListSpacesOK) GetPayload() []*models.ModelsSpace {
	return o.Payload
}

func (o *ListSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSpacesBadRequest creates a ListSpacesBadRequest with default headers values
func NewListSpacesBadRequest() *ListSpacesBadRequest {
	return &ListSpacesBadRequest{}
}

/*
ListSpacesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListSpacesBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list spaces bad request response has a 2xx status code
func (o *ListSpacesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list spaces bad request response has a 3xx status code
func (o *ListSpacesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list spaces bad request response has a 4xx status code
func (o *ListSpacesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list spaces bad request response has a 5xx status code
func (o *ListSpacesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list spaces bad request response a status code equal to that given
func (o *ListSpacesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list spaces bad request response
func (o *ListSpacesBadRequest) Code() int {
	return 400
}

func (o *ListSpacesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesBadRequest %s", 400, payload)
}

func (o *ListSpacesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesBadRequest %s", 400, payload)
}

func (o *ListSpacesBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSpacesUnauthorized creates a ListSpacesUnauthorized with default headers values
func NewListSpacesUnauthorized() *ListSpacesUnauthorized {
	return &ListSpacesUnauthorized{}
}

/*
ListSpacesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListSpacesUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list spaces unauthorized response has a 2xx status code
func (o *ListSpacesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list spaces unauthorized response has a 3xx status code
func (o *ListSpacesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list spaces unauthorized response has a 4xx status code
func (o *ListSpacesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list spaces unauthorized response has a 5xx status code
func (o *ListSpacesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list spaces unauthorized response a status code equal to that given
func (o *ListSpacesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list spaces unauthorized response
func (o *ListSpacesUnauthorized) Code() int {
	return 401
}

func (o *ListSpacesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesUnauthorized %s", 401, payload)
}

func (o *ListSpacesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesUnauthorized %s", 401, payload)
}

func (o *ListSpacesUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSpacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSpacesForbidden creates a ListSpacesForbidden with default headers values
func NewListSpacesForbidden() *ListSpacesForbidden {
	return &ListSpacesForbidden{}
}

/*
ListSpacesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListSpacesForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list spaces forbidden response has a 2xx status code
func (o *ListSpacesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list spaces forbidden response has a 3xx status code
func (o *ListSpacesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list spaces forbidden response has a 4xx status code
func (o *ListSpacesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list spaces forbidden response has a 5xx status code
func (o *ListSpacesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list spaces forbidden response a status code equal to that given
func (o *ListSpacesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list spaces forbidden response
func (o *ListSpacesForbidden) Code() int {
	return 403
}

func (o *ListSpacesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesForbidden %s", 403, payload)
}

func (o *ListSpacesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesForbidden %s", 403, payload)
}

func (o *ListSpacesForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSpacesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSpacesInternalServerError creates a ListSpacesInternalServerError with default headers values
func NewListSpacesInternalServerError() *ListSpacesInternalServerError {
	return &ListSpacesInternalServerError{}
}

/*
ListSpacesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListSpacesInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this list spaces internal server error response has a 2xx status code
func (o *ListSpacesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list spaces internal server error response has a 3xx status code
func (o *ListSpacesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list spaces internal server error response has a 4xx status code
func (o *ListSpacesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list spaces internal server error response has a 5xx status code
func (o *ListSpacesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list spaces internal server error response a status code equal to that given
func (o *ListSpacesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list spaces internal server error response
func (o *ListSpacesInternalServerError) Code() int {
	return 500
}

func (o *ListSpacesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesInternalServerError %s", 500, payload)
}

func (o *ListSpacesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space][%d] listSpacesInternalServerError %s", 500, payload)
}

func (o *ListSpacesInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *ListSpacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
