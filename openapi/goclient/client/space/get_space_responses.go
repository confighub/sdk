// Copyright (C) ConfigHub, Inc.
// SPDX-License-Identifier: MIT

// Code generated by go-swagger; DO NOT EDIT.
package space

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/confighub/sdk/openapi/goclient/models"
)

// GetSpaceReader is a Reader for the GetSpace structure.
type GetSpaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSpaceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSpaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSpaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /space/{space_id}] GetSpace", response, response.Code())
	}
}

// NewGetSpaceOK creates a GetSpaceOK with default headers values
func NewGetSpaceOK() *GetSpaceOK {
	return &GetSpaceOK{}
}

/*
GetSpaceOK describes a response with status code 200, with default header values.

OK
*/
type GetSpaceOK struct {
	Payload *models.ModelsSpace
}

// IsSuccess returns true when this get space o k response has a 2xx status code
func (o *GetSpaceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get space o k response has a 3xx status code
func (o *GetSpaceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get space o k response has a 4xx status code
func (o *GetSpaceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get space o k response has a 5xx status code
func (o *GetSpaceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get space o k response a status code equal to that given
func (o *GetSpaceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get space o k response
func (o *GetSpaceOK) Code() int {
	return 200
}

func (o *GetSpaceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceOK %s", 200, payload)
}

func (o *GetSpaceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceOK %s", 200, payload)
}

func (o *GetSpaceOK) GetPayload() *models.ModelsSpace {
	return o.Payload
}

func (o *GetSpaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsSpace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpaceBadRequest creates a GetSpaceBadRequest with default headers values
func NewGetSpaceBadRequest() *GetSpaceBadRequest {
	return &GetSpaceBadRequest{}
}

/*
GetSpaceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSpaceBadRequest struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get space bad request response has a 2xx status code
func (o *GetSpaceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get space bad request response has a 3xx status code
func (o *GetSpaceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get space bad request response has a 4xx status code
func (o *GetSpaceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get space bad request response has a 5xx status code
func (o *GetSpaceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get space bad request response a status code equal to that given
func (o *GetSpaceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get space bad request response
func (o *GetSpaceBadRequest) Code() int {
	return 400
}

func (o *GetSpaceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceBadRequest %s", 400, payload)
}

func (o *GetSpaceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceBadRequest %s", 400, payload)
}

func (o *GetSpaceBadRequest) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSpaceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpaceUnauthorized creates a GetSpaceUnauthorized with default headers values
func NewGetSpaceUnauthorized() *GetSpaceUnauthorized {
	return &GetSpaceUnauthorized{}
}

/*
GetSpaceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSpaceUnauthorized struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get space unauthorized response has a 2xx status code
func (o *GetSpaceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get space unauthorized response has a 3xx status code
func (o *GetSpaceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get space unauthorized response has a 4xx status code
func (o *GetSpaceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get space unauthorized response has a 5xx status code
func (o *GetSpaceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get space unauthorized response a status code equal to that given
func (o *GetSpaceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get space unauthorized response
func (o *GetSpaceUnauthorized) Code() int {
	return 401
}

func (o *GetSpaceUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceUnauthorized %s", 401, payload)
}

func (o *GetSpaceUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceUnauthorized %s", 401, payload)
}

func (o *GetSpaceUnauthorized) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSpaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpaceForbidden creates a GetSpaceForbidden with default headers values
func NewGetSpaceForbidden() *GetSpaceForbidden {
	return &GetSpaceForbidden{}
}

/*
GetSpaceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSpaceForbidden struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get space forbidden response has a 2xx status code
func (o *GetSpaceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get space forbidden response has a 3xx status code
func (o *GetSpaceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get space forbidden response has a 4xx status code
func (o *GetSpaceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get space forbidden response has a 5xx status code
func (o *GetSpaceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get space forbidden response a status code equal to that given
func (o *GetSpaceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get space forbidden response
func (o *GetSpaceForbidden) Code() int {
	return 403
}

func (o *GetSpaceForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceForbidden %s", 403, payload)
}

func (o *GetSpaceForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceForbidden %s", 403, payload)
}

func (o *GetSpaceForbidden) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSpaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpaceNotFound creates a GetSpaceNotFound with default headers values
func NewGetSpaceNotFound() *GetSpaceNotFound {
	return &GetSpaceNotFound{}
}

/*
GetSpaceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSpaceNotFound struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get space not found response has a 2xx status code
func (o *GetSpaceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get space not found response has a 3xx status code
func (o *GetSpaceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get space not found response has a 4xx status code
func (o *GetSpaceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get space not found response has a 5xx status code
func (o *GetSpaceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get space not found response a status code equal to that given
func (o *GetSpaceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get space not found response
func (o *GetSpaceNotFound) Code() int {
	return 404
}

func (o *GetSpaceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceNotFound %s", 404, payload)
}

func (o *GetSpaceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceNotFound %s", 404, payload)
}

func (o *GetSpaceNotFound) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSpaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpaceInternalServerError creates a GetSpaceInternalServerError with default headers values
func NewGetSpaceInternalServerError() *GetSpaceInternalServerError {
	return &GetSpaceInternalServerError{}
}

/*
GetSpaceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSpaceInternalServerError struct {
	Payload *models.ModelsErrorMessage
}

// IsSuccess returns true when this get space internal server error response has a 2xx status code
func (o *GetSpaceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get space internal server error response has a 3xx status code
func (o *GetSpaceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get space internal server error response has a 4xx status code
func (o *GetSpaceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get space internal server error response has a 5xx status code
func (o *GetSpaceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get space internal server error response a status code equal to that given
func (o *GetSpaceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get space internal server error response
func (o *GetSpaceInternalServerError) Code() int {
	return 500
}

func (o *GetSpaceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceInternalServerError %s", 500, payload)
}

func (o *GetSpaceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /space/{space_id}][%d] getSpaceInternalServerError %s", 500, payload)
}

func (o *GetSpaceInternalServerError) GetPayload() *models.ModelsErrorMessage {
	return o.Payload
}

func (o *GetSpaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
